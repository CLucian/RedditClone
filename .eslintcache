[{"/Users/lucc/development/git/reddit-clone/src/index.js":"1","/Users/lucc/development/git/reddit-clone/src/serviceWorker.js":"2","/Users/lucc/development/git/reddit-clone/src/App.js":"3","/Users/lucc/development/git/reddit-clone/src/components/authorize.component.jsx":"4","/Users/lucc/development/git/reddit-clone/src/components/GlobalState.jsx":"5","/Users/lucc/development/git/reddit-clone/src/components/about.component.jsx":"6","/Users/lucc/development/git/reddit-clone/src/components/errorPage.component.jsx":"7","/Users/lucc/development/git/reddit-clone/src/components/Login.jsx":"8","/Users/lucc/development/git/reddit-clone/src/components/home.component.jsx":"9","/Users/lucc/development/git/reddit-clone/src/components/test.jsx":"10","/Users/lucc/development/git/reddit-clone/src/components/search/HomeWrapper.jsx":"11","/Users/lucc/development/git/reddit-clone/src/components/search/MasterSearchProvider.jsx":"12","/Users/lucc/development/git/reddit-clone/src/components/search/MasterSearch.jsx":"13","/Users/lucc/development/git/reddit-clone/src/components/navigation/Sidebar.jsx":"14","/Users/lucc/development/git/reddit-clone/src/components/navigation/navbar.component.jsx":"15","/Users/lucc/development/git/reddit-clone/src/components/navigation/TopNavbar.jsx":"16","/Users/lucc/development/git/reddit-clone/src/components/profile/profile.component.jsx":"17","/Users/lucc/development/git/reddit-clone/src/components/profile/SubscribedSubreddits.jsx":"18","/Users/lucc/development/git/reddit-clone/src/components/modal/PostContainer.jsx":"19","/Users/lucc/development/git/reddit-clone/src/components/profile/Subreddit.jsx":"20","/Users/lucc/development/git/reddit-clone/src/components/posting/CreatePostPage.jsx":"21","/Users/lucc/development/git/reddit-clone/src/queries/auth.js":"22","/Users/lucc/development/git/reddit-clone/src/utils/login.js":"23","/Users/lucc/development/git/reddit-clone/src/queries/axios.js":"24","/Users/lucc/development/git/reddit-clone/src/queries/postQuery.js":"25","/Users/lucc/development/git/reddit-clone/src/utils/pagination.js":"26","/Users/lucc/development/git/reddit-clone/src/queries/feed.js":"27","/Users/lucc/development/git/reddit-clone/src/queries/subredditSearch.js":"28","/Users/lucc/development/git/reddit-clone/src/components/post.component.jsx":"29","/Users/lucc/development/git/reddit-clone/src/components/posting/CreatePost.jsx":"30","/Users/lucc/development/git/reddit-clone/src/components/modal/Modal.jsx":"31","/Users/lucc/development/git/reddit-clone/src/components/profile/SubredditLinks.jsx":"32","/Users/lucc/development/git/reddit-clone/src/components/profile/ProfileComments.jsx":"33","/Users/lucc/development/git/reddit-clone/src/components/search/SubredditSearch.jsx":"34","/Users/lucc/development/git/reddit-clone/src/components/profile/SubredditList.jsx":"35","/Users/lucc/development/git/reddit-clone/src/components/modal/PostModal.jsx":"36","/Users/lucc/development/git/reddit-clone/src/components/search/SearchSubreddit.jsx":"37","/Users/lucc/development/git/reddit-clone/src/components/svg-components/BestSVG.jsx":"38","/Users/lucc/development/git/reddit-clone/src/components/svg-components/HotSVG.jsx":"39","/Users/lucc/development/git/reddit-clone/src/components/svg-components/NewSVG.jsx":"40","/Users/lucc/development/git/reddit-clone/src/components/svg-components/RisingSVG.jsx":"41","/Users/lucc/development/git/reddit-clone/src/components/svg-components/TopSVG.jsx":"42","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Users.jsx":"43","/Users/lucc/development/git/reddit-clone/src/components/svg-components/SearchSVG.jsx":"44","/Users/lucc/development/git/reddit-clone/src/queries/querySubreddits.js":"45","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Bubble.jsx":"46","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Heart.jsx":"47","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Author.jsx":"48","/Users/lucc/development/git/reddit-clone/src/components/svg-components/DownArrow.jsx":"49","/Users/lucc/development/git/reddit-clone/src/components/svg-components/UpArrow.jsx":"50","/Users/lucc/development/git/reddit-clone/src/components/svg-components/PostSVG.jsx":"51","/Users/lucc/development/git/reddit-clone/src/components/search/SubredditInfo.jsx":"52","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Close.jsx":"53","/Users/lucc/development/git/reddit-clone/src/components/comments/Comments.jsx":"54","/Users/lucc/development/git/reddit-clone/src/components/Video/Video.jsx":"55","/Users/lucc/development/git/reddit-clone/src/utils/comments.js":"56","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Loader.jsx":"57","/Users/lucc/development/git/reddit-clone/src/components/comments/Comment.jsx":"58","/Users/lucc/development/git/reddit-clone/src/components/comments/CommentReply.jsx":"59","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Collapse.jsx":"60","/Users/lucc/development/git/reddit-clone/src/components/svg-components/UnCollapse.jsx":"61","/Users/lucc/development/git/reddit-clone/src/components/comments/CommentReplyInput.jsx":"62","/Users/lucc/development/git/reddit-clone/src/components/comments/CommentEditInput.jsx":"63","/Users/lucc/development/git/reddit-clone/src/queries/postPage.js":"64","/Users/lucc/development/git/reddit-clone/src/components/Video/Twitch.jsx":"65","/Users/lucc/development/git/reddit-clone/src/queries/postModal.js":"66","/Users/lucc/development/git/reddit-clone/src/queries/sideBar.js":"67","/Users/lucc/development/git/reddit-clone/src/queries/createPostPage.js":"68","/Users/lucc/development/git/reddit-clone/src/queries/profile.js":"69","/Users/lucc/development/git/reddit-clone/src/queries/profileComments.js":"70","/Users/lucc/development/git/reddit-clone/src/queries/subscribedSubreddits.js":"71","/Users/lucc/development/git/reddit-clone/src/queries/comment.js":"72","/Users/lucc/development/git/reddit-clone/src/queries/commentEditInput.js":"73","/Users/lucc/development/git/reddit-clone/src/queries/commentReplyInput.js":"74","/Users/lucc/development/git/reddit-clone/src/queries/comments.js":"75","/Users/lucc/development/git/reddit-clone/src/components/comments/PostComment.jsx":"76","/Users/lucc/development/git/reddit-clone/src/queries/postComment.js":"77","/Users/lucc/development/git/reddit-clone/src/components/navigation/SearchForSubreddit.jsx":"78","/Users/lucc/development/git/reddit-clone/src/components/navigation/SubredditListing.jsx":"79","/Users/lucc/development/git/reddit-clone/src/queries/subscribe.js":"80"},{"size":884,"mtime":1605739125782,"results":"81","hashOfConfig":"82"},{"size":5086,"mtime":1600197189451,"results":"83","hashOfConfig":"82"},{"size":6150,"mtime":1608667961998,"results":"84","hashOfConfig":"82"},{"size":989,"mtime":1605656940526,"results":"85","hashOfConfig":"82"},{"size":3359,"mtime":1608249770560,"results":"86","hashOfConfig":"82"},{"size":362,"mtime":1602713108238,"results":"87","hashOfConfig":"82"},{"size":151,"mtime":1600459163735,"results":"88","hashOfConfig":"82"},{"size":711,"mtime":1608580300608,"results":"89","hashOfConfig":"82"},{"size":10134,"mtime":1608411582644,"results":"90","hashOfConfig":"82"},{"size":286,"mtime":1604620040112,"results":"91","hashOfConfig":"82"},{"size":435,"mtime":1607538687119,"results":"92","hashOfConfig":"82"},{"size":702,"mtime":1607982602827,"results":"93","hashOfConfig":"82"},{"size":1692,"mtime":1607982593563,"results":"94","hashOfConfig":"82"},{"size":2185,"mtime":1608667898194,"results":"95","hashOfConfig":"82"},{"size":4266,"mtime":1608668064616,"results":"96","hashOfConfig":"82"},{"size":1004,"mtime":1607975945207,"results":"97","hashOfConfig":"82"},{"size":7621,"mtime":1608485385133,"results":"98","hashOfConfig":"82"},{"size":3224,"mtime":1608672330129,"results":"99","hashOfConfig":"82"},{"size":1024,"mtime":1607974635121,"results":"100","hashOfConfig":"82"},{"size":11930,"mtime":1608685284747,"results":"101","hashOfConfig":"82"},{"size":6024,"mtime":1608485540596,"results":"102","hashOfConfig":"82"},{"size":484,"mtime":1605655883499,"results":"103","hashOfConfig":"82"},{"size":918,"mtime":1605655125377,"results":"104","hashOfConfig":"82"},{"size":1603,"mtime":1608597030190,"results":"105","hashOfConfig":"82"},{"size":1532,"mtime":1607546213436,"results":"106","hashOfConfig":"82"},{"size":543,"mtime":1606342296650,"results":"107","hashOfConfig":"82"},{"size":704,"mtime":1608154322011,"results":"108","hashOfConfig":"82"},{"size":3653,"mtime":1607394620404,"results":"109","hashOfConfig":"82"},{"size":10656,"mtime":1607988670166,"results":"110","hashOfConfig":"82"},{"size":683,"mtime":1607975962917,"results":"111","hashOfConfig":"82"},{"size":703,"mtime":1607974661270,"results":"112","hashOfConfig":"82"},{"size":1227,"mtime":1605741467596,"results":"113","hashOfConfig":"82"},{"size":16941,"mtime":1608413672159,"results":"114","hashOfConfig":"82"},{"size":2719,"mtime":1608669501681,"results":"115","hashOfConfig":"82"},{"size":2124,"mtime":1608672345594,"results":"116","hashOfConfig":"82"},{"size":7525,"mtime":1608593442732,"results":"117","hashOfConfig":"82"},{"size":1606,"mtime":1607982647063,"results":"118","hashOfConfig":"82"},{"size":945,"mtime":1605039100643,"results":"119","hashOfConfig":"82"},{"size":647,"mtime":1605038989880,"results":"120","hashOfConfig":"82"},{"size":2049,"mtime":1605039002348,"results":"121","hashOfConfig":"82"},{"size":749,"mtime":1605129487238,"results":"122","hashOfConfig":"82"},{"size":653,"mtime":1605039085337,"results":"123","hashOfConfig":"82"},{"size":1065,"mtime":1606145799127,"results":"124","hashOfConfig":"82"},{"size":861,"mtime":1607377736328,"results":"125","hashOfConfig":"82"},{"size":1408,"mtime":1608679111883,"results":"126","hashOfConfig":"82"},{"size":2643,"mtime":1604447652293,"results":"127","hashOfConfig":"82"},{"size":621,"mtime":1604359065564,"results":"128","hashOfConfig":"82"},{"size":487,"mtime":1604961290575,"results":"129","hashOfConfig":"82"},{"size":927,"mtime":1604602478732,"results":"130","hashOfConfig":"82"},{"size":970,"mtime":1604791028101,"results":"131","hashOfConfig":"82"},{"size":842,"mtime":1607210326566,"results":"132","hashOfConfig":"82"},{"size":1512,"mtime":1607982633505,"results":"133","hashOfConfig":"82"},{"size":591,"mtime":1604961504011,"results":"134","hashOfConfig":"82"},{"size":10520,"mtime":1608666004722,"results":"135","hashOfConfig":"82"},{"size":3721,"mtime":1607988981088,"results":"136","hashOfConfig":"82"},{"size":841,"mtime":1604444015136,"results":"137","hashOfConfig":"82"},{"size":1391,"mtime":1604964644074,"results":"138","hashOfConfig":"82"},{"size":10458,"mtime":1608485661022,"results":"139","hashOfConfig":"82"},{"size":8027,"mtime":1608597050921,"results":"140","hashOfConfig":"82"},{"size":1329,"mtime":1607632901804,"results":"141","hashOfConfig":"82"},{"size":1731,"mtime":1607632938383,"results":"142","hashOfConfig":"82"},{"size":3042,"mtime":1608597061110,"results":"143","hashOfConfig":"82"},{"size":2995,"mtime":1608664372436,"results":"144","hashOfConfig":"82"},{"size":801,"mtime":1608062099578,"results":"145","hashOfConfig":"82"},{"size":974,"mtime":1607729662680,"results":"146","hashOfConfig":"82"},{"size":435,"mtime":1607973166953,"results":"147","hashOfConfig":"82"},{"size":415,"mtime":1608247599012,"results":"148","hashOfConfig":"82"},{"size":619,"mtime":1607977374329,"results":"149","hashOfConfig":"82"},{"size":1019,"mtime":1607978304953,"results":"150","hashOfConfig":"82"},{"size":1109,"mtime":1608413342870,"results":"151","hashOfConfig":"82"},{"size":702,"mtime":1607981661886,"results":"152","hashOfConfig":"82"},{"size":506,"mtime":1607983579661,"results":"153","hashOfConfig":"82"},{"size":533,"mtime":1607986526737,"results":"154","hashOfConfig":"82"},{"size":563,"mtime":1607987004287,"results":"155","hashOfConfig":"82"},{"size":523,"mtime":1608158034291,"results":"156","hashOfConfig":"82"},{"size":2251,"mtime":1608590682367,"results":"157","hashOfConfig":"82"},{"size":525,"mtime":1608584578497,"results":"158","hashOfConfig":"82"},{"size":2987,"mtime":1608673997335,"results":"159","hashOfConfig":"82"},{"size":1261,"mtime":1608672425457,"results":"160","hashOfConfig":"82"},{"size":498,"mtime":1608685295604,"results":"161","hashOfConfig":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"165"},"hyufbp",{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"165"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"165"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"165"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"165"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"165"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"165"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"165"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"165"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"165"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"165"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"165"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"165"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"165"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"165"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"165"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"165"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"165"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"165"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lucc/development/git/reddit-clone/src/index.js",["342"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Route, Switch } from 'react-router-dom'\nimport Authorize from './components/authorize.component'\nimport GlobalState from './components/GlobalState'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <GlobalState>\n                <Route path=\"/authorize\" component={Authorize} />\n                <App />\n            </GlobalState>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n",["343","344"],"/Users/lucc/development/git/reddit-clone/src/serviceWorker.js",[],"/Users/lucc/development/git/reddit-clone/src/App.js",["345","346","347"],"/Users/lucc/development/git/reddit-clone/src/components/authorize.component.jsx",["348"],"import React from 'react'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\n\nimport { GlobalContext } from './GlobalState'\nimport { generateToken } from '../queries/auth'\n\nexport default class Authorize extends React.Component {\n    state = {\n        isComplete: false,\n    }\n\n    getAccessToken = () => {\n        const paramString = window.location.search\n        const paramSearch = new URLSearchParams(paramString)\n        const code = paramSearch.get('code')\n\n        generateToken(code)\n            .then((token) => {\n                this.setState({ isComplete: true })\n                this.context.setup(token)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    componentDidMount() {\n        this.getAccessToken()\n    }\n\n    render() {\n        if (this.state.isComplete) {\n            return <Redirect to=\"/\" />\n        }\n        return <div>authorizing...</div>\n    }\n}\n\nAuthorize.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/components/GlobalState.jsx",["349"],"import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport {\n    getAccessToken,\n    setAccessToken,\n    clearAccessToken,\n} from '../utils/login'\nimport { fetchProfile } from '../queries/auth'\nimport { setupAxios } from '../queries/axios'\n\nexport const GlobalContext = React.createContext()\n\nexport const STATUS = {\n    INAUTHENTICATED: 'INAUTHENTICATED',\n    // is fetching the profile - they have a token, just validating that it works\n    // this is to prevent showing login OR app while we're validating the token\n    AUTHENTICATING: 'AUTHENTICATING',\n    // profile has been fetched, user is good to go\n    AUTHENTICATED: 'AUTHENTICATED',\n}\n\nclass GlobalState extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            accessToken: null,\n            userData: null,\n            status: null,\n        }\n    }\n\n    componentDidMount() {\n        const token = getAccessToken()\n        if (token) {\n            this.setup(token)\n        } else {\n            this.setState({ status: STATUS.INAUTHENTICATED })\n        }\n    }\n\n    setup = (token) => {\n        this.setState({ status: STATUS.AUTHENTICATING })\n\n        fetchProfile(token)\n            .then((profile) => {\n                // store in local storage\n                setAccessToken(token)\n\n                // create axios instance with token\n                setupAxios(token, this.invalidate)\n\n                // update state\n                this.setState({\n                    accessToken: token,\n                    userData: profile,\n                    status: STATUS.AUTHENTICATED,\n                })\n            })\n            .catch((err) => {\n                // token has expired, invalidate\n                this.invalidate()\n            })\n    }\n\n    invalidate = () => {\n        clearAccessToken()\n        this.setState({\n            accessToken: null,\n            userData: null,\n            status: STATUS.INAUTHENTICATED,\n        })\n    }\n\n    setGlobalState = (accessToken) => {\n        this.getUserData(accessToken)\n            .then((userData) => {\n                console.log('getUserData this gets hit')\n                this.setState({\n                    userData,\n                    hasFetched: true,\n                    accessToken,\n                    authenticated: true,\n                })\n            })\n            .catch((err) => {\n                console.log('setGlobalState Error: ', err)\n                localStorage.clear()\n                this.setState({\n                    accessToken: null,\n                })\n                this.props.history.push('/home')\n            })\n    }\n\n    getAndDisplayComment = (id, reply) => {\n        const yourReply = {\n            id,\n            reply,\n        }\n        return yourReply\n    }\n\n    render() {\n        return (\n            <GlobalContext.Provider\n                value={{\n                    ...this.state,\n                    getAndDisplayComment: this.getAndDisplayComment,\n                    // new items\n                    setup: this.setup,\n                    invalidate: this.invalidate,\n                }}\n            >\n                {this.props.children}\n            </GlobalContext.Provider>\n        )\n    }\n}\n\nconst GlobalStateWithRouter = withRouter(GlobalState)\nexport default GlobalStateWithRouter\n","/Users/lucc/development/git/reddit-clone/src/components/about.component.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/errorPage.component.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/Login.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/home.component.jsx",["350","351","352","353","354","355","356","357","358","359","360","361"],"import React from 'react'\n\nimport axios from 'axios'\nimport getAxios from '../queries/axios'\nimport { withRouter, Link } from 'react-router-dom'\nimport { debounce } from 'lodash'\n\nimport Post from './post.component'\nimport getHomePage, { getSearchQuery } from '../queries/postQuery'\nimport Login from './Login'\nimport Modal from './modal/Modal'\nimport CreatePost from './posting/CreatePost'\nimport { MasterSearchContext } from '../components/search/MasterSearchProvider'\n\nimport { handlePages } from '../utils/pagination'\n\nimport BestSVG from './svg-components/BestSVG'\nimport HotSVG from './svg-components/HotSVG'\nimport NewSVG from './svg-components/NewSVG'\nimport RisingSVG from './svg-components/RisingSVG'\nimport TopSVG from './svg-components/TopSVG'\n\nimport { GlobalContext } from './GlobalState'\nimport { getFeed } from '../queries/feed'\nimport MasterSearch from './search/MasterSearch'\n\nconst sortOptions = [\n    { name: 'Best', value: 'best', icon: <BestSVG /> },\n    { name: 'Hot', value: 'hot', icon: <HotSVG /> },\n    { name: 'New', value: 'new', icon: <NewSVG /> },\n    { name: 'Top', value: 'top', icon: <TopSVG /> },\n    { name: 'Rising', value: 'rising', icon: <RisingSVG /> },\n]\n\nconst CLIENT_ID = 'MMej7E1hI1x82A'\nconst REDIRECT_URI = 'http://localhost:3000/authorize'\nconst DURATION = 'permanent'\nconst SCOPE =\n    'identity edit flair history modconfig modflair modlog modposts modwiki mysubreddits privatemessages read report save submit subscribe vote wikiedit wikiread'\nconst getAuthorizationURL = () =>\n    `https://www.reddit.com/api/v1/authorize?client_id=${CLIENT_ID}&response_type=code&state=${Math.random()}&redirect_uri=${REDIRECT_URI}&duration=${DURATION}&scope=${SCOPE}`\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            feedData: null,\n            isLoading: true,\n            showModal: false,\n            listOpen: false,\n            sortBy: 'best',\n            clicked: '',\n            after: null,\n            before: null,\n            page: 1,\n            pageDir: null,\n            isQuery: false,\n        }\n    }\n\n    componentDidMount() {\n        // if (this.context.accessToken) {\n        getHomePage()\n            .then((response) => {\n                this.handleDataResponse(response)\n            })\n            .catch((err) => {\n                return err\n                console.log('err retrieving feed in home component', err)\n            })\n        // }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.query !== this.props.query) {\n            this.handleQuerySearch()\n        }\n    }\n\n    handleQuerySearch = debounce(() => {\n        getSearchQuery(\n            this.state.sortBy,\n            undefined,\n            undefined,\n            this.props.query\n        ).then((response) => {\n            this.setState({\n                feedData: response.data.data.children,\n                after: response.data.data.after,\n                before: response.data.data.before,\n                isQuery: true,\n            })\n        })\n    }, 300)\n\n    handleSort = (category) => {\n        this.setState(\n            {\n                sortBy: category,\n            },\n            () =>\n                getHomePage(category, undefined, undefined).then((response) => {\n                    this.handleDataResponse(response)\n                })\n        )\n    }\n\n    handleDataResponse = (response, queryState) => {\n        this.setState({\n            feedData: response.data.data.children,\n            isLoading: false,\n            after: response.data.data.after,\n            before: response.data.data.before,\n            isQuery: queryState,\n        })\n    }\n\n    getPage = (pageDir) => {\n        const newPage =\n            pageDir === 'next' ? this.state.page + 1 : this.state.page - 1\n        const ids = pageDir === 'next' ? this.state.after : this.state.before\n\n        if (this.state.isQuery) {\n            this.setState({ page: newPage }, () => {\n                getSearchQuery(\n                    this.state.sortBy,\n                    pageDir,\n                    ids,\n                    this.props.query\n                ).then((response) => {\n                    this.handleDataResponse(response, true)\n                })\n            })\n        } else {\n            this.setState(\n                {\n                    page: newPage,\n                },\n                () =>\n                    getHomePage(this.state.sortBy, pageDir, ids).then(\n                        (response) => {\n                            this.handleDataResponse(response, false)\n                        }\n                    )\n            )\n        }\n    }\n\n    render() {\n        console.log('masterSearchQuery in Home', this.props.query)\n        const { location, history, match } = this.props\n        console.log('location and stuff props', location)\n        const urlParams = new URLSearchParams(location.search || '')\n        console.log('urlParams home', urlParams.toString())\n\n        if (urlParams.get('after')) {\n            console.log('after result', urlParams.get('after'))\n        } else if (urlParams.get('before')) {\n            console.log('before result', urlParams.get('before'))\n        }\n\n        // const { pageDir } = this.props.location.state\n        // console.log('pageDir state home', pageDir)\n\n        console.log('this.state.clicked', this.state.sortBy)\n        if (this.state.isLoading) {\n            return 'Loading...'\n        }\n\n        return (\n            <div>\n                <div className=\"sort-container\">\n                    <div className=\"sortByMenuContainer\">\n                        <div className=\"sort-by-text\"></div>\n                        {sortOptions.map((option) => (\n                            <div\n                                // onClick={() => this.getHomePage('best')}\n                                onClick={() => this.handleSort(option.value)}\n                                className={`menu-svg-container ${\n                                    this.state.sortBy === option.value\n                                        ? 'active'\n                                        : ''\n                                }`}\n                            >\n                                {option.icon}\n                                <div className=\"sort-by-text\">\n                                    {option.name}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                {/* <div className=\"create-post-master\">\n                    <div className=\"create-post-container\">\n                        <div className=\"media-post-container\">\n                            <CreatePost />\n                        </div>\n                    </div>\n                </div> */}\n                <div className=\"create-post-master\">\n                    <div className=\"create-post-container\">\n                        <div className=\"media-post-container\">\n                            <MasterSearch\n                            // subreddit={this.props.subreddit}\n                            // handleSearchQuery={this.handleSearchQuery}\n                            />\n                            <CreatePost />\n                        </div>\n                    </div>\n                </div>\n                {this.state.feedData.map((postData) => {\n                    return (\n                        <Post\n                            onClick={this.openModal}\n                            postData={postData}\n                            // accessToken={this.context.accessToken}\n                            key={postData.data.id}\n                        />\n                    )\n                })}\n                <div className=\"pagination-container\">\n                    {this.state.before && this.state.page > 1 && (\n                        <div\n                            onClick={() => {\n                                this.getPage('prev')\n                            }}\n                            className=\"pagination\"\n                        >\n                            Prev Page\n                        </div>\n                    )}\n                    {this.state.after && (\n                        <div\n                            onClick={() => {\n                                this.getPage('next')\n                            }}\n                            className=\"pagination\"\n                        >\n                            Next Page\n                        </div>\n                    )}\n                </div>\n                {/* <div className=\"pagination-container\">\n                    <Link\n                        to={{\n                            pathname: '/',\n                            search: `?before=${this.state.before}`,\n                        }}\n                    >\n                        {this.state.before && this.state.page > 1 && (\n                            <div\n                                onClick={() => {\n                                    this.getPage('prev')\n                                }}\n                                className=\"pagination\"\n                            >\n                                Prev Page\n                            </div>\n                        )}\n                    </Link>\n                    <Link\n                        to={{\n                            pathname: '/',\n                            search: `?after=${this.state.after}`,\n                        }}\n                    >\n                        {this.state.after && (\n                            <div\n                                onClick={() => {\n                                    this.getPage('next')\n                                }}\n                                className=\"pagination\"\n                            >\n                                Next Page\n                            </div>\n                        )}\n                    </Link>\n                </div> */}\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Home)\n\nHome.contextType = MasterSearchContext\n","/Users/lucc/development/git/reddit-clone/src/components/test.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/search/HomeWrapper.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/search/MasterSearchProvider.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/search/MasterSearch.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/navigation/Sidebar.jsx",["362","363"],"/Users/lucc/development/git/reddit-clone/src/components/navigation/navbar.component.jsx",["364","365"],"/Users/lucc/development/git/reddit-clone/src/components/navigation/TopNavbar.jsx",["366"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Login from '../Login'\nimport MasterSearch from '../search/MasterSearch'\nimport { GlobalContext } from '../GlobalState'\n\nconst TopNavbar = () => {\n    const context = React.useContext(GlobalContext)\n\n    if (!context.accessToken) {\n        return <Login />\n    } else {\n        return (\n            <div className=\"top-navbar\">\n                <div className=\"profile-picture-container\">\n                    <Link to=\"/profile\">\n                        <div className=\"profile-avatar\">\n                            <img\n                                className=\"profile-img\"\n                                src={context.userData.icon_img}\n                                alt=\"profile-avatar\"\n                            />\n                            <div>{context.userData.name}</div>\n                        </div>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TopNavbar\n","/Users/lucc/development/git/reddit-clone/src/components/profile/profile.component.jsx",["367","368","369"],"import React from 'react'\n\nimport Axios from 'axios'\nimport qs from 'qs'\n\nimport Login from '../Login'\nimport ProfileComments from './ProfileComments'\nimport { GlobalContext } from '../GlobalState'\n\nimport { deleteComment } from '../../queries/profileComments'\n\nimport getProfile from '../../queries/profile'\n\n/* \n    wrap withrouter for whichever component is responsible for fetching posts or whatever\n        - whatever needs to subscribe to route state\n    - link just sets any url/route state like \"after\"\n    - whatever component is responsible for fetching posts (See above), add a componentdidupdate\n    method and compare previous to current props - if `after` changed, then do whatever\n\n    create a util that passes an object into the Link to --> with pathname and search\n    search gets changed depending on what data you need\n\n*/\n\nexport default class Profile extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            postChildren: '',\n            page: 1,\n            before: null,\n            after: null,\n        }\n    }\n\n    // getProfile = (pageDir) => {\n    //     let url = `https://oauth.reddit.com/user/${this.context.userData.name}/comments?count=555&limit=10`\n    //     if (pageDir === 'next') {\n    //         url = `https://oauth.reddit.com/user/${this.context.userData.name}/comments?count=555&after=${this.state.after}&limit=10`\n    //     } else if (pageDir === 'prev') {\n    //         url = `https://oauth.reddit.com/user/${this.context.userData.name}/comments?count=555&before=${this.state.before}&limit=10`\n    //     }\n    //     // const url = `https://oauth.reddit.com/user/${this.context.userData.name}/comments`\n    //     // const urlAfter = `https://oauth.reddit.com/user/${this.context.userData.name}/comments/after=${this.state.after}`\n    //     // const urlBefore = `https://oauth.reddit.com/user/${this.context.userData.name}/comments/before=${this.state.before}`\n    //     const data = {\n    //         t: 'all',\n    //         type: 'comments',\n    //         sort: 'new',\n    //         limit: '100',\n    //     }\n    //     Axios({\n    //         method: 'get',\n    //         // url: `https://oauth.reddit.com/user/${this.context.userData.name}/comments`,\n    //         url: url,\n    //         headers: {\n    //             Authorization: 'bearer ' + this.context.accessToken,\n    //             'content-type': 'application/x-www-form-urlencoded',\n    //             // \"Content-Type\": \"application/x-www-form-urlencoded\"\n    //         },\n    //         data: qs.stringify(data),\n    //     })\n    //         .then((response) => {\n    //             console.log('user comments response', response)\n    //             this.setState({\n    //                 postChildren: response.data.data.children,\n    //                 // pageId: response.data.data.after,\n    //                 // firstAfter:\n    //                 before: response.data.data.before,\n    //                 after: response.data.data.after,\n    //             })\n    //         })\n    //         .catch((err) => {\n    //             console.log(err)\n    //             console.log('what is the error', err.data)\n    //             alert('There was an error' + err)\n    //         })\n    // }\n\n    componentDidMount() {\n        getProfile(\n            undefined,\n            this.context.userData.name,\n            this.state.after,\n            this.state.before\n        )\n            .then((response) => {\n                this.handleResponse(response)\n                console.log('user comments response', response)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    handleResponse = (response) => {\n        this.setState({\n            postChildren: response.data.data.children,\n            before: response.data.data.before,\n            after: response.data.data.after,\n        })\n    }\n\n    confirmDelete = (id) => {\n        deleteComment(id).then((response) => {\n            console.log(response)\n            getProfile(\n                undefined,\n                this.context.userData.name,\n                this.state.after,\n                this.state.before\n            )\n                .then((response) => {\n                    console.log('getProfile response after deleting', response)\n                    this.handleResponse(response)\n                })\n                .catch((err) => console.log(err))\n        })\n    }\n\n    getPage = (pageDir) => {\n        // this.getProfile(this.state.after, null)\n        if (pageDir === 'next') {\n            this.setState(\n                {\n                    page: this.state.page + 1,\n                },\n                () =>\n                    getProfile(\n                        pageDir,\n                        this.context.userData.name,\n                        this.state.after,\n                        this.state.before\n                    )\n                        .then((response) => {\n                            this.handleResponse(response)\n                        })\n                        .catch((err) => console.log(err))\n            )\n        } else if (pageDir === 'prev') {\n            this.setState(\n                {\n                    page: this.state.page - 1,\n                },\n                () => {\n                    getProfile(\n                        pageDir,\n                        this.context.userData.name,\n                        this.state.after,\n                        this.state.before\n                    )\n                        .then((response) => {\n                            this.handleResponse(response)\n                        })\n                        .catch((err) => console.log(err))\n                }\n            )\n        }\n    }\n\n    render() {\n        console.log('profile component state', this.state.postChildren)\n        return (\n            <div>\n                <div>\n                    {this.context.accessToken}\n                    <h1>This is the profile Page</h1>\n                    <h1>Hello there {this.context.userData.name}</h1>\n                    {this.state.postChildren &&\n                        this.state.postChildren.map((child) => {\n                            return (\n                                <ProfileComments\n                                    confirmDelete={this.confirmDelete}\n                                    childData={child}\n                                    id={child.id}\n                                    accessToken={this.context.accessToken}\n                                />\n                            )\n                        })}\n                </div>\n                <div className=\"pagination-container\">\n                    {this.state.before && this.state.page > 1 && (\n                        <div\n                            onClick={() => {\n                                this.getPage('prev')\n                            }}\n                            className=\"pagination\"\n                        >\n                            Prev Page\n                        </div>\n                    )}\n                    {this.state.after && (\n                        // <Link to={`/after=${}`}>\n                        <div\n                            onClick={() => {\n                                this.getPage('next')\n                            }}\n                            className=\"pagination\"\n                        >\n                            Next Page\n                        </div>\n                        // </Link>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nProfile.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/components/profile/SubscribedSubreddits.jsx",["370"],"/Users/lucc/development/git/reddit-clone/src/components/modal/PostContainer.jsx",["371","372","373"],"import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Modal from './Modal'\nimport PostModal from './PostModal'\n\nclass PostContainer extends React.Component {\n    constructor() {\n        super()\n        this.state = {}\n    }\n    closeModal = () => {\n        const postIdParam = this.props.location.search\n        const postPathName = this.props.location.pathname\n        this.props.history.push(`${postPathName}`)\n    }\n\n    render() {\n        const { location, history, match } = this.props\n\n        const urlParams = new URLSearchParams(location.search || '')\n        const postId = urlParams.get('post_id')\n\n        if (!postId) {\n            return null\n        }\n\n        return (\n            <div>\n                <p>This is the PostContainer component</p>\n                <Modal closeModal={this.closeModal}>\n                    <PostModal postId={postId} closeModal={this.closeModal} />\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(PostContainer)\n","/Users/lucc/development/git/reddit-clone/src/components/profile/Subreddit.jsx",["374","375","376","377","378","379","380","381","382"],"/Users/lucc/development/git/reddit-clone/src/components/posting/CreatePostPage.jsx",["383"],"import React from 'react'\n\nimport { GlobalContext } from '../GlobalState'\nimport SubredditSearch from '../search/SubredditSearch'\n\nimport Axios from 'axios'\n\nimport submitPost from '../../queries/createPostPage'\n\nexport default class CreatePostPage extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            title: null,\n            subreddit: null,\n            type: 'self',\n            text: null,\n            showSuggestions: false,\n        }\n    }\n\n    handleChange = (e) => {\n        if (e.target.name === 'subreddit') {\n            this.setState({\n                [e.target.name]: e.target.value,\n                showSuggestions: true,\n            })\n        } else {\n            this.setState({\n                [e.target.name]: e.target.value,\n            })\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        if (\n            this.state.subreddit !== null &&\n            this.state.title !== null &&\n            this.state.title.length > 0 &&\n            this.state.subreddit.length > 0\n        ) {\n            submitPost(\n                this.state.title,\n                this.state.subreddit,\n                this.state.type,\n                this.state.text\n            )\n                .then((response) => {\n                    this.setState({\n                        title: '',\n                        subreddit: '',\n                        text: '',\n                        showSuggestions: false,\n                    })\n                    if (response.data.success === false) {\n                        alert(response.data.jquery[14][3])\n                    }\n                })\n                .catch((err) => console.log(err))\n        }\n    }\n\n    setSubreddit = (subreddit) => {\n        this.setState({\n            subreddit,\n            showSuggestions: false,\n        })\n    }\n\n    clickedOutside = () => {\n        this.setState({\n            showSuggestions: false,\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"create-post-page-container\">\n                <form\n                    className=\"create-post-form\"\n                    type=\"submit\"\n                    onSubmit={this.handleSubmit}\n                >\n                    <div className=\"additional-post-info\">\n                        <div className=\"create-post-page-subreddit\">\n                            <input\n                                type=\"text\"\n                                name=\"subreddit\"\n                                placeholder=\"Choose a Subreddit\"\n                                value={this.state.subreddit}\n                                onChange={this.handleChange}\n                                autoComplete=\"off\"\n                                required=\"required\"\n                            />\n                            <SubredditSearch\n                                query={this.state.subreddit}\n                                token={this.context.accessToken}\n                                getSubreddit={this.getSubreddit}\n                                setSubreddit={this.setSubreddit}\n                                showSuggestions={this.state.showSuggestions}\n                                clickedOutside={this.clickedOutside}\n                            />\n                        </div>\n                        <div className=\"post-type\">\n                            <select\n                                className=\"post-select\"\n                                name=\"type\"\n                                onChange={this.handleChange}\n                            >\n                                <option\n                                    selected=\"link\"\n                                    name=\"type\"\n                                    value=\"self\"\n                                >\n                                    Text\n                                </option>\n                                <option name=\"type\" value=\"link\">\n                                    Link\n                                </option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className=\"create-post-page-title-container\">\n                        <div className=\"create-post-page-title\">\n                            <input\n                                className=\"title-input\"\n                                type=\"text\"\n                                name=\"title\"\n                                placeholder=\"Title\"\n                                value={this.state.title}\n                                onChange={this.handleChange}\n                                maxLength=\"300\"\n                                required=\"required\"\n                                autoComplete=\"off\"\n                            />\n                            {/* <label className=\"post-input-title\">Title</label> */}\n                            <span className=\"post-input-char-limit\">{`${\n                                this.state.title ? this.state.title.length : 0\n                            }/300`}</span>\n                        </div>\n                    </div>\n\n                    <div className=\"create-post-page-body\">\n                        <div className=\"text-container\">\n                            <textarea\n                                className=\"reply-text-area\"\n                                placeholder=\"Text (optional)\"\n                                name=\"text\"\n                                type=\"textarea\"\n                                wrap=\"physical\"\n                                value={this.state.text}\n                                onChange={this.handleChange}\n                            ></textarea>\n                        </div>\n                    </div>\n                    <button className=\"post-submit\" type=\"submit\">\n                        Submit\n                    </button>\n                </form>\n            </div>\n        )\n    }\n}\n\nCreatePostPage.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/queries/auth.js",[],"/Users/lucc/development/git/reddit-clone/src/utils/login.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/axios.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/postQuery.js",[],"/Users/lucc/development/git/reddit-clone/src/utils/pagination.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/feed.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/subredditSearch.js",[],"/Users/lucc/development/git/reddit-clone/src/components/post.component.jsx",["384","385","386","387","388","389","390","391"],"import React from 'react'\nimport { Link, Redirect } from 'react-router-dom'\n\n// import Modal from './modal/Modal'\n// import PostModal from './modal/PostModal'\nimport Login from './Login'\nimport ErrorPage from './errorPage.component'\nimport { GlobalContext } from './GlobalState'\nimport { postVote, getAuthorAvatar } from '../queries/postPage'\n\nimport Axios from 'axios'\nimport qs from 'qs'\nimport moment from 'moment'\nimport marked from 'marked'\nimport DOMPurify from 'dompurify'\n\nimport HeartSVG from './svg-components/Heart'\nimport BubbleSVG from './svg-components/Bubble'\nimport UpArrowSVG from './svg-components/UpArrow'\nimport DownArrowSVG from './svg-components/DownArrow'\nimport AuthorSVG from './svg-components/Author'\n\nclass Post extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            moreInfo: false,\n            showModal: false,\n            voteVal: 0,\n            updatedScore: '',\n            isLoading: true,\n            authorImg: '',\n            // err: null,\n        }\n    }\n\n    componentDidMount() {\n        getAuthorAvatar(this.props.postData.data.author).then((response) => {\n            console.log('response in post', response.data.data.icon_img)\n            if (response.data.data.icon_img) {\n                const dataImg = response.data.data.icon_img\n                const modifiedImg = dataImg.split('?width')[0]\n                this.setState({\n                    authorImg: modifiedImg,\n                    isLoading: false,\n                })\n            } else {\n                this.setState({\n                    authorImg: null,\n                })\n            }\n        })\n        // .catch((err) => {\n        //     this.setState({\n        //         err,\n        //     })\n        // })\n    }\n\n    openModal = () => {\n        this.setState({\n            showModal: true,\n        })\n    }\n\n    closeModal = () => {\n        this.setState({\n            showModal: false,\n        })\n    }\n\n    getLength = (description) => {\n        const maxLength = 150\n        if (description.length > maxLength) {\n            return description.substring(0, maxLength)\n        } else {\n            return description\n        }\n    }\n\n    getLengthTitle = (description) => {\n        const maxLength = 100\n        if (description.length > maxLength) {\n            return description.substring(0, maxLength)\n        } else {\n            return description\n        }\n    }\n\n    getMarkDown = (markDown) => {\n        if (markDown) {\n            const rawMarkup = marked(markDown)\n            const clean = DOMPurify.sanitize(rawMarkup)\n            return { __html: clean }\n        } else {\n            return {\n                __html: '',\n            }\n        }\n    }\n\n    getDate = (unixValue) => {\n        const date = moment.unix(unixValue).format('MMM Do YYYY')\n        return date\n    }\n\n    handleArrowClick = (vote) => {\n        let voteValue\n\n        if (vote === 1 && this.state.voteVal === 1) {\n            voteValue = 0\n        } else if (vote === -1 && this.state.voteVal === -1) {\n            voteValue = 0\n        } else if (vote === 1) {\n            voteValue = 1\n        } else if (vote === -1) {\n            voteValue = -1\n        } else {\n            console.log('something went wrong', vote)\n        }\n\n        this.setState(\n            {\n                voteVal: voteValue,\n                updatedScore: this.props.postData.data.score + voteValue,\n            },\n\n            () => postVote(voteValue)\n        )\n    }\n\n    render() {\n        // if (this.state.err) {\n        //     return <Redirect to=\"/ErrorPage\" />\n        // }\n\n        return (\n            <div className=\"master-container\">\n                <div\n                    className=\"profile-post-container\"\n                    onClick={this.openModal}\n                >\n                    <div className=\"post-listing-subreddit\">\n                        {this.props.postData.data.subreddit}\n                    </div>\n                    <div className=\"post-main-info\">\n                        <div className=\"post-score\">\n                            <div\n                                className=\"UpArrowSVG-container\"\n                                onClick={() => this.handleArrowClick(1)}\n                            >\n                                <UpArrowSVG isActive={this.state.voteVal} />\n                            </div>\n                            <div className=\"score-text\">\n                                {this.state.updatedScore\n                                    ? this.state.updatedScore\n                                    : this.props.postData.data.score}\n                            </div>\n                            <div\n                                className=\"DownArrowSVG-container\"\n                                onClick={() => this.handleArrowClick(-1)}\n                            >\n                                <DownArrowSVG isActive={this.state.voteVal} />\n                            </div>\n                        </div>\n                        <div className=\"main-text-container\">\n                            {/* <div className=\"post-listing-subreddit\">\n                                {this.props.postData.data.subreddit}\n                            </div> */}\n                            <div className=\"post-title\">\n                                <Link\n                                    id=\"modal-open\"\n                                    className=\"postLinks\"\n                                    to={{\n                                        search: `?post_id=${this.props.postData.data.name}`,\n                                    }}\n                                >\n                                    <div className=\"post-title-text\">\n                                        {this.getLengthTitle(\n                                            this.props.postData.data.title\n                                        )}\n                                    </div>\n                                </Link>\n                                {this.props.postData.data?.thumbnail && (\n                                    <div className=\"subreddit-image-container\">\n                                        {/* <div className=\"post-subreddit\">\n                                        {this.props.postData.data.subreddit}\n                                    </div> */}\n                                        {this.props.postData.data.thumbnail !==\n                                            'self' &&\n                                        this.props.postData.data.thumbnail !==\n                                            'thumbnail' &&\n                                        this.props.postData.data.thumbnail !==\n                                            'image' &&\n                                        this.props.postData.data.thumbnail !==\n                                            'nsfw' &&\n                                        this.props.postData.data.thumbnail !==\n                                            'default' ? (\n                                            <a\n                                                href={\n                                                    this.props.postData.data.url\n                                                }\n                                            >\n                                                <div className=\"post-listing-thumbnail-container\">\n                                                    <img\n                                                        className=\"post-thumbnail\"\n                                                        src={\n                                                            this.props.postData\n                                                                .data.thumbnail\n                                                        }\n                                                        // src={this.state.data.thumbnail}\n                                                        alt={\n                                                            this.props.postData\n                                                                .data.thumbnail\n                                                        }\n                                                    />\n                                                </div>\n                                            </a>\n                                        ) : null}\n                                    </div>\n                                )}\n                            </div>\n\n                            <div className=\"post-description\">\n                                <div\n                                    className=\"post-description-text\"\n                                    dangerouslySetInnerHTML={this.getMarkDown(\n                                        this.getLength(\n                                            this.props.postData.data.selftext\n                                        )\n                                    )}\n                                ></div>\n                            </div>\n                            <div className=\"hr-container\">\n                                <hr className=\"post-hr\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"post-sub-info\">\n                        <div className=\"post-author\">\n                            <div className=\"author-img-container\">\n                                {this.state.authorImg && (\n                                    <img\n                                        className=\"author-img\"\n                                        src={this.state.authorImg}\n                                    />\n                                )}\n                            </div>\n                            Posted by:\n                            <div className=\"author-text\">\n                                &nbsp; {this.props.postData.data.author}\n                            </div>\n                        </div>\n                        <div className=\"post-date\">\n                            <div>\n                                {this.getDate(this.props.postData.data.created)}\n                            </div>\n                        </div>\n                        <div className=\"post-comment-number\">\n                            <BubbleSVG />\n                            &nbsp;\n                            <div>{this.props.postData.data.num_comments}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nPost.contextType = GlobalContext\n\nexport default Post\n","/Users/lucc/development/git/reddit-clone/src/components/posting/CreatePost.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/modal/Modal.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/profile/SubredditLinks.jsx",["392","393","394"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nclass SubredditLinks extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const { icon_img, display_name } = this.props.data\n        console.log('icon_img', icon_img)\n\n        return (\n            <div className=\"subreddit-container\">\n                <Link className=\"subreddit-LinkTo\" to={`/r/${display_name}`}>\n                    <div className=\"subreddit-display-name\">{display_name}</div>\n                    <div className=\"subreddit-img-container\">\n                        {icon_img ? (\n                            <img className=\"subreddit-img\" src={icon_img} />\n                        ) : (\n                            <img\n                                className=\"subreddit-img\"\n                                src={\n                                    'https://styles.redditmedia.com/t5_vm1db/styles/communityIcon_5nthugyr0ef21.png?width=256&s=3a163f7135b93df0dab0921dba35f760baea5945'\n                                }\n                            />\n                        )}\n                    </div>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default SubredditLinks\n","/Users/lucc/development/git/reddit-clone/src/components/profile/ProfileComments.jsx",["395","396","397","398","399","400","401","402"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport marked from 'marked'\nimport DOMPurify from 'dompurify'\nimport moment from 'moment'\n\nimport HeartSVG from '../svg-components/Heart'\nimport BubbleSVG from '../svg-components/Bubble'\nimport UpArrowSVG from '../svg-components/UpArrow'\nimport DownArrowSVG from '../svg-components/DownArrow'\nimport AuthorSVG from '../svg-components/Author'\n\nimport Axios from 'axios'\nimport qs from 'qs'\n\nimport getAuthorAvatar, { deleteComment } from '../../queries/profileComments'\n\nclass ProfileComments extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            authorImg: '',\n            confirm: false,\n        }\n    }\n\n    componentDidMount() {\n        getAuthorAvatar(this.props.childData.data.link_author)\n            .then((response) => {\n                const dataImg = response.data.data.icon_img\n                // console.log('dataImg', dataImg)\n                const modifiedImg = dataImg.split('?width')[0]\n                this.setState({\n                    authorImg: modifiedImg,\n                })\n            })\n            .catch((err) => {\n                console.log('error in profilecomments', err)\n            })\n    }\n\n    getMarkDown = (markDown) => {\n        if (markDown) {\n            const rawMarkup = marked(markDown)\n            const clean = DOMPurify.sanitize(rawMarkup)\n            return { __html: clean }\n        } else {\n            return {\n                __html: '<p className=\"deleted-comment\">Deleted Comment<p>',\n            }\n        }\n    }\n\n    getLengthTitle = (description) => {\n        const maxLength = 150\n        if (description.length > maxLength) {\n            return description.substring(0, maxLength) + '...'\n        } else {\n            return description\n        }\n    }\n\n    getLength = (description) => {\n        const maxLength = 250\n        if (description.length > maxLength) {\n            return description.substring(0, maxLength) + '...'\n        } else {\n            return description\n        }\n    }\n\n    getMarkDown = (markDown) => {\n        if (markDown) {\n            const rawMarkup = marked(markDown)\n            const clean = DOMPurify.sanitize(rawMarkup)\n            return { __html: clean }\n        } else {\n            return {\n                __html: '',\n            }\n        }\n    }\n\n    deleteBtn = () => {\n        this.setState({\n            confirm: !this.state.confirm,\n        })\n    }\n\n    deleted = () => {\n        this.props.confirmDelete(this.props.childData.data.name)\n        this.setState({\n            confirm: false,\n        })\n    }\n\n    // confirmDelete = (e) => {\n    //     e.preventDefault()\n    //     deleteComment(this.props.childData.data.name).then((response) => {\n    //         console.log('response from delete', response)\n    //     })\n    // }\n\n    getDate = (unixValue) => {\n        const date = moment.unix(unixValue).format('MMM Do YYYY')\n        return date\n    }\n\n    render() {\n        // console.log('this.props.childData.data', this.props.childData.data)\n\n        const {\n            link_title,\n            link_id,\n            link_author,\n            subreddit,\n            body,\n            num_comments,\n            created_utc,\n            score,\n        } = this.props.childData.data\n\n        return (\n            <div className=\"master-container\">\n                <div\n                    className=\"profile-post-container\"\n                    onClick={this.openModal}\n                >\n                    <div className=\"post-listing-subreddit\">{subreddit}</div>\n                    <div className=\"post-main-info\">\n                        <div className=\"post-score\">\n                            <div className=\"UpArrowSVG-container\">\n                                <UpArrowSVG isActive={this.state.voteVal} />\n                            </div>\n                            <div className=\"score-text\">{score}</div>\n                        </div>\n                        <div className=\"main-text-container\">\n                            {/* <div className=\"post-listing-subreddit\">\n                                {this.props.postData.data.subreddit}\n                            </div> */}\n                            <div className=\"post-title\">\n                                <Link\n                                    id=\"modal-open\"\n                                    className=\"postLinks\"\n                                    to={{\n                                        search: `?post_id=${link_id}`,\n                                    }}\n                                >\n                                    <div className=\"post-title-text\">\n                                        {this.getLengthTitle(link_title)}\n                                    </div>\n                                </Link>\n                                {this.props.childData.data?.thumbnail && (\n                                    <div className=\"subreddit-image-container\">\n                                        {/* <div className=\"post-subreddit\">\n                                        {this.props.postData.data.subreddit}\n                                    </div> */}\n                                        {this.props.childData.data.thumbnail !==\n                                            'self' &&\n                                        this.props.childData.data.thumbnail !==\n                                            'thumbnail' &&\n                                        this.props.childData.data.thumbnail !==\n                                            'image' &&\n                                        this.props.childData.data.thumbnail !==\n                                            'nsfw' &&\n                                        this.props.childData.data.thumbnail !==\n                                            'default' ? (\n                                            <a\n                                                href={\n                                                    this.props.childData.data\n                                                        .url\n                                                }\n                                            >\n                                                <div className=\"post-listing-thumbnail-container\">\n                                                    <img\n                                                        className=\"post-thumbnail\"\n                                                        src={\n                                                            this.props.childData\n                                                                .data.thumbnail\n                                                        }\n                                                        // src={this.state.data.thumbnail}\n                                                        alt={\n                                                            this.props.childData\n                                                                .data.thumbnail\n                                                        }\n                                                    />\n                                                </div>\n                                            </a>\n                                        ) : null}\n                                    </div>\n                                )}\n                            </div>\n\n                            <div className=\"post-description\">\n                                <div\n                                    className=\"post-description-text\"\n                                    dangerouslySetInnerHTML={this.getMarkDown(\n                                        this.getLength(body)\n                                    )}\n                                ></div>\n                            </div>\n                            <div className=\"hr-container\">\n                                <hr className=\"post-hr\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"post-sub-info\">\n                        <div className=\"post-author\">\n                            <div className=\"author-img-container\">\n                                {this.state.authorImg && (\n                                    <img\n                                        className=\"author-img\"\n                                        src={this.state.authorImg}\n                                    />\n                                )}\n                            </div>\n                            Posted by:\n                            <div className=\"author-text\">\n                                &nbsp; {link_author}\n                            </div>\n                        </div>\n                        <div className=\"post-date\">\n                            <div>{this.getDate(created_utc)}</div>\n                        </div>\n                        <div className=\"post-comment-number\">\n                            <BubbleSVG />\n                            &nbsp;\n                            <div>{num_comments}</div>\n                        </div>\n                    </div>\n                    {!this.state.confirm ? (\n                        <div className=\"delete-div\">\n                            <button\n                                className=\"delete-btn\"\n                                onClick={this.deleteBtn}\n                            >\n                                Delete Comment\n                            </button>\n                        </div>\n                    ) : (\n                        <div className=\"confirm-div\">\n                            <div className=\"confirm-text\">\n                                <p>\n                                    Are you sure you want to delete this\n                                    comment?\n                                </p>\n                            </div>\n                            <div className=\"confirm-btns\">\n                                <button\n                                    className=\"yes-btn\"\n                                    onClick={this.deleted}\n                                >\n                                    Yes\n                                </button>\n                                <button\n                                    className=\"no-btn\"\n                                    onClick={this.deleteBtn}\n                                >\n                                    No\n                                </button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n            // <div className=\"master-container\">\n            //     <div\n            //         className=\"profile-post-container\"\n            //         onClick={this.openModal}\n            //     >\n            //         {/* <div className=\"post-thumbnail-container\">\n            //             <img\n            //                 className=\"post-thumbnail\"\n            //                 src={this.defaultThumbnail()}\n            //                 alt=\"thumbnail\"\n            //             />\n            //         </div> */}\n\n            //         <div className=\"post-main-info\">\n            //             <div className=\"post-score\">\n            //                 {/* <HeartSVG /> */}\n            //                 <div className=\"UpArrowSVG-container\">\n            //                     <UpArrowSVG />\n            //                 </div>\n            //                 <div className=\"score-text\">{score}</div>\n            //                 {/* <div className=\"DownArrowSVG-container\">\n            //                     <DownArrowSVG />\n            //                 </div> */}\n            //             </div>\n            //             <div className=\"main-text-container\">\n            //                 <div className=\"post-title\">\n            //                     <Link\n            //                         id=\"modal-open\"\n            //                         className=\"postLinks\"\n            //                         to={{\n            //                             search: `?post_id=${link_id}`,\n            //                         }}\n            //                     >\n            //                         <div className=\"post-title-text\">\n            //                             {this.getLengthTitle(link_title)}\n            //                         </div>\n            //                     </Link>\n            //                     {/* <Link>\n            //                         <div className=\"post-title-text\">\n            //                             {link_title}\n            //                         </div>\n            //                     </Link> */}\n            //                     <div className=\"post-subreddit\">\n            //                         {subreddit}\n            //                     </div>\n            //                 </div>\n            //                 <div className=\"post-description\">\n            //                     <div\n            //                         className=\"post-description-text\"\n            //                         dangerouslySetInnerHTML={this.getMarkDown(\n            //                             this.getLength(body)\n            //                         )}\n            //                     ></div>\n            //                 </div>\n            //                 <div className=\"hr-container\">\n            //                     <hr className=\"post-hr\" />\n            //                 </div>\n            //             </div>\n            //         </div>\n            //         <div className=\"post-sub-info\">\n            //             <div className=\"post-author\">\n            //                 <div className=\"author-img-container\">\n            //                     {this.state.authorImg && (\n            //                         <img\n            //                             className=\"author-img\"\n            //                             src={this.state.authorImg}\n            //                         />\n            //                     )}\n            //                 </div>\n            //                 Posted by:\n            //                 <div className=\"author-text\">\n            //                     &nbsp; {link_author}\n            //                 </div>\n            //             </div>\n            //             <div className=\"post-date\">\n            //                 <div>\n            //                     {`Commented on ${this.getDate(created_utc)}`}\n            //                 </div>\n            //             </div>\n            //             <div className=\"post-comment-number\">\n            //                 <BubbleSVG />\n            //                 &nbsp;\n            //                 <div>{num_comments}</div>\n            //             </div>\n            //         </div>\n            //         {/* <div className=\"delete-div\">\n            //             <button className=\"delete-btn\" onClick={this.deleteBtn}>\n            //                 Delete Comment\n            //             </button>\n            //         </div>\n            //         {this.state.confirm && (\n            //             <div className=\"confirm-div\">\n            //                 <div className=\"confirm-text\">\n            //                     <p>\n            //                         Are you sure you want to delete this\n            //                         comment?\n            //                     </p>\n            //                 </div>\n            //                 <div className=\"confirm-btns\">\n            //                     <button className=\"yes-btn\">Yes</button>\n            //                     <button className=\"no-btn\">No</button>\n            //                 </div>\n            //             </div>\n            //         )} */}\n            //     </div>\n            // </div>\n        )\n    }\n}\n\nexport default ProfileComments\n\n{\n    /* <div className=\"delete-div\">\n                        <button className=\"delete-btn\" onClick={this.deleteBtn}>\n                            Delete Comment\n                        </button>\n                    </div>\n                    {this.state.confirm && (\n                        <div className=\"confirm-div\">\n                            <div className=\"confirm-text\">\n                                <p>\n                                    Are you sure you want to delete this\n                                    comment?\n                                </p>\n                            </div>\n                            <div className=\"confirm-btns\">\n                                <button className=\"yes-btn\">Yes</button>\n                                <button className=\"no-btn\">No</button>\n                            </div>\n                        </div>\n                    )} */\n}\n","/Users/lucc/development/git/reddit-clone/src/components/search/SubredditSearch.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/profile/SubredditList.jsx",["403","404","405","406"],"/Users/lucc/development/git/reddit-clone/src/components/modal/PostModal.jsx",["407"],"/Users/lucc/development/git/reddit-clone/src/components/search/SearchSubreddit.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/BestSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/HotSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/NewSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/RisingSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/TopSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/Users.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/SearchSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/queries/querySubreddits.js",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/Bubble.jsx",["408"],"import React from 'react'\n\nconst Bubble = () => {\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"1.5rem\"\n            height=\"1.5rem\"\n            viewBox=\"0 0 24 24\"\n        >\n            <title>chat</title>\n            <path\n                className=\"bubbleSVG\"\n                d=\"M20 1h-17c-1.654 0-3 1.346-3 3v12c0 1.654 2 2 3 2v6l9-6h8c1.654 0 3-1.346 3-3v-11c0-1.654-1.346-3-3-3zM21 15c0 0.551-0.449 1-1 1h-9l-6 5v-5h-2c-0.551 0-1-0.449-1-1v-11c0-0.551 0.449-1 1-1h17c0.551 0 1 0.449 1 1v11z\"\n            ></path>\n        </svg>\n    )\n}\n\nexport default Bubble\n\n// <svg\n//             version=\"1.1\"\n//             xmlns=\"http://www.w3.org/2000/svg\"\n//             width=\"1.5rem\"\n//             height=\"1.5rem\"\n//             viewBox=\"0 0 32 32\"\n//         >\n//             <title>bubble2</title>\n//             <path\n//                 className=\"bubbleSVG\"\n//                 d=\"M16 6c-1.717 0-3.375 0.271-4.928 0.804-1.46 0.502-2.76 1.211-3.863 2.108-2.069 1.681-3.209 3.843-3.209 6.088 0 1.259 0.35 2.481 1.039 3.63 0.711 1.185 1.781 2.268 3.093 3.133 0.949 0.625 1.587 1.623 1.755 2.747 0.056 0.375 0.091 0.753 0.105 1.129 0.233-0.194 0.461-0.401 0.684-0.624 0.755-0.755 1.774-1.172 2.828-1.172 0.168 0 0.336 0.011 0.505 0.032 0.655 0.083 1.325 0.126 1.99 0.126 1.717 0 3.375-0.271 4.928-0.804 1.46-0.502 2.76-1.211 3.863-2.108 2.069-1.681 3.209-3.843 3.209-6.088s-1.14-4.407-3.209-6.088c-1.104-0.897-2.404-1.606-3.863-2.108-1.553-0.534-3.211-0.804-4.928-0.804zM16 2v0c8.837 0 16 5.82 16 13s-7.163 13-16 13c-0.849 0-1.682-0.054-2.495-0.158-3.437 3.437-7.539 4.053-11.505 4.144v-0.841c2.142-1.049 4-2.961 4-5.145 0-0.305-0.024-0.604-0.068-0.897-3.619-2.383-5.932-6.024-5.932-10.103 0-7.18 7.163-13 16-13z\"\n//             ></path>\n//         </svg>\n\n{\n    /* <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"1.5rem\"\n            height=\"1.5rem\"\n            viewBox=\"0 0 24 24\"\n        >\n            <title>chat-3</title>\n            <path\n                className=\"bubbleSVG\"\n                d=\"M6.5 9c0.828 0 1.5 0.671 1.5 1.5s-0.672 1.5-1.5 1.5-1.5-0.671-1.5-1.5 0.672-1.5 1.5-1.5zM11.5 9c0.828 0 1.5 0.671 1.5 1.5s-0.672 1.5-1.5 1.5-1.5-0.671-1.5-1.5 0.672-1.5 1.5-1.5zM16.5 9c0.828 0 1.5 0.671 1.5 1.5s-0.672 1.5-1.5 1.5-1.5-0.671-1.5-1.5 0.672-1.5 1.5-1.5zM20 1h-17c-1.654 0-3 1.346-3 3v12c0 1.654 2 2 3 2v6l9-6h8c1.654 0 3-1.346 3-3v-11c0-1.654-1.346-3-3-3zM21 15c0 0.551-0.449 1-1 1h-9l-6 5v-5h-2c-0.551 0-1-0.449-1-1v-11c0-0.551 0.449-1 1-1h17c0.551 0 1 0.449 1 1v11z\"\n            ></path>\n        </svg> */\n}\n","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Heart.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/Author.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/DownArrow.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/UpArrow.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/PostSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/search/SubredditInfo.jsx",["409","410"],"import React from 'react'\n\nclass SubredditInfo extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            subInfo: null,\n        }\n    }\n\n    render() {\n        console.log(\n            'this.props.subreddit in SubredditInfo',\n            this.props.subreddit\n        )\n\n        // if (this.props.subreddit && this.props.subreddit !== undefined) {\n        return (\n            <div className=\"subreddit-subscribers-container\">\n                <div className=\"subreddit-img-container\">\n                    {this.props.subreddit.icon_img ? (\n                        <img\n                            className=\"subreddit-img\"\n                            src={this.props.subreddit.icon_img}\n                        />\n                    ) : (\n                        <img\n                            className=\"subreddit-img\"\n                            src={\n                                'https://styles.redditmedia.com/t5_vm1db/styles/communityIcon_5nthugyr0ef21.png?width=256&s=3a163f7135b93df0dab0921dba35f760baea5945'\n                            }\n                        />\n                    )}\n                </div>\n                <div className=\"subreddit-suggestion-info-container\">\n                    <div>{this.props.subreddit.display_name}</div>\n                    <div>{this.props.subreddit.subscribers} members</div>\n                </div>\n            </div>\n        )\n        // }\n\n        // return null\n    }\n}\n\nexport default SubredditInfo\n","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Close.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/comments/Comments.jsx",["411","412","413"],"/Users/lucc/development/git/reddit-clone/src/components/Video/Video.jsx",["414"],"import React from 'react'\nimport ReactPlayer from 'react-player'\n\nimport '../../App.css'\n\nimport { Player } from 'video-react'\n\n// import Hls from 'hls'\n\nclass Video extends React.Component {\n    render() {\n        let url = this.props.video.replace('watch?v=', 'v/')\n        return (\n            <div className=\"player-container\">\n                <ReactPlayer\n                    className=\"video-player\"\n                    // url={this.props.video}\n                    url={url}\n                    // url=\"https://clips.twitch.tv/UninterestedAffluentLettuceKreygasm\"\n                    controls={true}\n                    config={{ playerVars: { showinfo: 1 } }}\n                />\n                {/* <ReactPlayer>\n                    <iframe\n                        src={this.props.video}\n                        frameborder=\"0\"\n                        allow=\"autoplay; encrypted-media\"\n                        allowfullscreen\n                        title=\"video\"\n                    />\n                    <iframe\n                        src=\"https://clips.twitch.tv/UninterestedAffluentLettuceKreygasm\"\n                        // height=\"<height>\"\n                        // width=\"<width>\"\n                        // frameborder=\"<frameborder>\"\n                        // scrolling=\"<scrolling>\"\n                        // allowfullscreen=\"<allow full screen>\"\n                    ></iframe>\n\n                    </ReactPlayer> */}\n            </div>\n        )\n    }\n}\n\nexport default Video\n\n// React Video  http://localhost:3000/r/web_design?post_id=t3_k2spjf\n\n// http://localhost:3000/r/movies?post_id=t3_k3yt6t\n\n// http://localhost:3000/r/LivestreamFail?post_id=t3_dlte8e\n\n// secure_media_embed:\n\n// \"&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fstreamable.com%2Fo%2Ffpuv4&amp;display_name=Streamable&amp;url=https%3A%2F%2Fstreamable.com%2Ffpuv4&amp;image=https%3A%2F%2Fcdn-cf-east.streamable.com%2Fimage%2Ffpuv4.jpg%3FExpires%3D1603595460%26Signature%3DHLLKKHCuxMySyMZwLmjHCOt-LBJRKDtHA19LfIPkq-YUzbwlrzbcYBo6jZJrDeWn04AYgCiaCwOGBV5aEgA3G4HnbjFeIwUB5fBr3Asjt2-akdR59SipPqZOV-9GlpQK-VuxHELLGMvpCONTaCapTgIpDYY9hsfcvFntNN7CKxViYl5cFXNh%7E9BDutv8Q5x8G1g9vn1EhVfnnC4uUQQpWPNa0cas12IrNL2hvR54ttEHRdjEADwoV%7EY1mC13B7d0%7EsNZNBV4SbNNld-ZPaYtpiwP67mceecr1%7E2COOhUUKEVQkvNlThWCa-I25SlzdzgZwqCeeYHXdmAXJ6M%7EwNeEA__%26Key-Pair-Id%3DAPKAIEYUVEN4EVB2OKEQ&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=streamable\" width=\"600\" height=\"338\" scrolling=\"no\" title=\"Streamable embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;\"\n// content: \"&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/rYPJYxEoPCg?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;\"\n\n// \"&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fclips.twitch.tv%2Fembed%3Fclip%3DUninterestedAffluentLettuceKreygasm%26parent%3Dcdn.embedly.com%26parent%3Dreddit.com%26parent%3Dwww.reddit.com%26parent%3Dold.reddit.com%26parent%3Dnew.reddit.com%26parent%3Dredditmedia.com%26muted%3Dtrue%26autoplay%3Dfalse&amp;display_name=Twitch.tv&amp;url=https%3A%2F%2Fclips.twitch.tv%2FUninterestedAffluentLettuceKreygasm&amp;image=https%3A%2F%2Fclips-media-assets2.twitch.tv%2FAT-cm%7C950415022-social-preview.jpg&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=twitch\" width=\"600\" height=\"340\" scrolling=\"no\" title=\"Twitch.tv embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;\"\n","/Users/lucc/development/git/reddit-clone/src/utils/comments.js",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/Loader.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/comments/Comment.jsx",["415","416","417"],"import React from 'react'\nimport marked from 'marked'\nimport DOMPurify from 'dompurify'\nimport Axios from 'axios'\nimport qs from 'qs'\n\nimport CommentReply from './CommentReply'\nimport { GlobalContext } from '../GlobalState'\nimport moment from 'moment'\nimport getAuthorAvatar from '../../queries/profileComments'\nimport postVote from '../../queries/comment'\n\nimport DownArrow from '../svg-components/DownArrow'\nimport UpArrow from '../svg-components/UpArrow'\nimport Collapse from '../svg-components/Collapse'\nimport UnCollapse from '../svg-components/UnCollapse'\n\nimport './comment.scss'\n\n// const replyContext = React.useContext(GlobalContext)\n\nclass Comment extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isCollapsed: false,\n            voteVal: 0,\n            updatedScore: '',\n            authorImg: '',\n            err: '',\n        }\n    }\n\n    componentDidMount() {\n        getAuthorAvatar(this.props.commentData[this.props.commentId]?.author)\n            .then((response) => {\n                const dataImg = response.data.data.icon_img\n                const modifiedImg = dataImg.split('?width')[0]\n                this.setState({\n                    authorImg: modifiedImg,\n                })\n            })\n            .catch((err) => {\n                this.setState({\n                    authorImg: null,\n                    err: err,\n                })\n            })\n    }\n\n    handleArrowClick = (vote) => {\n        let voteValue\n\n        if (vote === 1 && this.state.voteVal === 1) {\n            voteValue = 0\n        } else if (vote === -1 && this.state.voteVal === -1) {\n            voteValue = 0\n        } else if (vote === 1) {\n            voteValue = 1\n        } else if (vote === -1) {\n            voteValue = -1\n        } else {\n            console.log('something went wrong', vote)\n        }\n\n        this.setState(\n            {\n                voteVal: voteValue,\n                updatedScore:\n                    this.props.commentData[this.props.commentId].score +\n                    voteValue,\n            },\n            () =>\n                postVote(\n                    voteValue,\n                    this.props.commentData[this.props.commentId].name\n                )\n        )\n    }\n\n    getTime = (unixValue) => {\n        const dateMoment = moment.unix(unixValue).fromNow()\n        return dateMoment\n    }\n\n    getMarkDown = (markDown) => {\n        if (markDown) {\n            const rawMarkup = marked(markDown)\n            const clean = DOMPurify.sanitize(rawMarkup)\n            return { __html: clean }\n        } else {\n            return {\n                __html: '<p className=\"deleted-comment\">Deleted Comment<p>',\n            }\n        }\n    }\n\n    // nestedcomments = () => []\n    getComments = () => {\n        return this.props.commentData[this.props.commentId]?.childIds?.map(\n            (commentId) => {\n                return (\n                    <Comment\n                        commentData={this.props.commentData}\n                        commentId={commentId}\n                        getCommentReply={this.props.getCommentReply}\n                        getCommentEdit={this.props.getCommentEdit}\n                        commentDelete={this.props.commentDelete}\n                        // parent_Id={props.commentData[commentId].parent_id}\n                    />\n                )\n            }\n        )\n    }\n\n    collapseComments = () => {\n        this.setState({\n            isCollapsed: !this.state.isCollapsed,\n        })\n    }\n\n    //in render display null if you shouldn't display it\n    render() {\n        // console.log('get comment edit', this.props.getCommentEdit)\n        // console.log('commentId', this.props.commentId)\n        // console.log('commentData', this.props.commentData)\n        // console.log('parent_id', this.props.parent_Id)\n        return (\n            <>\n                <div className=\"comments__container\">\n                    <div className=\"comments__main\">\n                        {this.props.commentData[this.props.commentId]?.body !==\n                            undefined && (\n                            <div className=\"comments__upvotes-container\">\n                                <div\n                                    className=\"comments__upvote-arrows\"\n                                    onClick={() => this.handleArrowClick(1)}\n                                >\n                                    <UpArrow isActive={this.state.voteVal} />\n                                </div>\n                                <div className=\"comments__comment-score\">\n                                    {this.state.updatedScore\n                                        ? this.state.updatedScore\n                                        : this.props.commentData[\n                                              this.props.commentId\n                                          ].score}\n                                </div>\n                                <div\n                                    className=\"comments_upvote-arrows\"\n                                    onClick={() => this.handleArrowClick(-1)}\n                                >\n                                    <DownArrow isActive={this.state.voteVal} />\n                                </div>\n                            </div>\n                        )}\n\n                        <div className=\"comments__main-content\">\n                            <div className=\"comments__title-container\">\n                                <div className=\"comments__author-info-container\">\n                                    <div className=\"comments__author-img-container\">\n                                        {this.state.authorImg && (\n                                            <img\n                                                className=\"comments__author-img\"\n                                                src={this.state.authorImg}\n                                            />\n                                        )}\n                                    </div>\n                                    <div className=\"comments__author\">\n                                        {\n                                            this.props.commentData[\n                                                this.props.commentId\n                                            ]?.author\n                                        }\n                                    </div>\n                                </div>\n                                {this.props.commentData[this.props.commentId]\n                                    ?.body !== undefined && (\n                                    <div className=\"comments__author-date\">\n                                        {this.getTime(\n                                            this.props.commentData[\n                                                this.props.commentId\n                                            ]?.created_utc\n                                        )}\n                                    </div>\n                                )}\n                            </div>\n                            <div className=\"comments__text-container\">\n                                <div\n                                    className=\"comments__comment\"\n                                    dangerouslySetInnerHTML={this.getMarkDown(\n                                        this.props.commentData[\n                                            this.props.commentId\n                                        ]?.body\n                                    )}\n                                ></div>\n                            </div>\n                            <div className=\"comments__reply-collapse-container\">\n                                <div className=\"comments__collapse-container\">\n                                    {this.props.commentData[\n                                        this.props.commentId\n                                    ]?.childIds?.length > 0 ? (\n                                        <div\n                                            className=\"collapse-container\"\n                                            onClick={this.collapseComments}\n                                        >\n                                            <Collapse\n                                                isCollapsed={\n                                                    this.state.isCollapsed\n                                                }\n                                            />\n\n                                            <UnCollapse\n                                                isCollapsed={\n                                                    this.state.isCollapsed\n                                                }\n                                            />\n                                        </div>\n                                    ) : null}\n                                </div>\n                                <div className=\"comments__reply-container\">\n                                    {this.props.commentData[\n                                        this.props.commentId\n                                    ]?.body !== undefined && (\n                                        <CommentReply\n                                            getCommentReply={\n                                                this.props.getCommentReply\n                                            }\n                                            commentDelete={\n                                                this.props.commentDelete\n                                            }\n                                            commentId={this.props.commentId}\n                                            // parent_Id={this.props.parent_Id}\n                                            commentData={this.props.commentData}\n                                            getCommentEdit={\n                                                this.props.getCommentEdit\n                                            }\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {!this.state.isCollapsed && this.getComments()}\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Comment\n\nComment.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/components/comments/CommentReply.jsx",["418"],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/Collapse.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/UnCollapse.jsx",["419","420"],"import React from 'react'\n\nconst Uncollapse = (props) => {\n    if (props.isCollapsed) {\n        return (\n            <div className=\"uncollapseSVG\">\n                <svg\n                    version=\"1.1\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"20\"\n                    height=\"20\"\n                    viewBox=\"0 0 20 20\"\n                >\n                    <title>circle-with-plus</title>\n                    <path d=\"M10 1.6c-4.639 0-8.4 3.761-8.4 8.4s3.761 8.4 8.4 8.4 8.4-3.761 8.4-8.4c0-4.639-3.761-8.4-8.4-8.4zM15 11h-4v4h-2v-4h-4v-2h4v-4h2v4h4v2z\"></path>\n                </svg>\n            </div>\n        )\n    } else {\n        return <div></div>\n    }\n}\n\nexport default Uncollapse\n\n{\n    /* <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\n<title>chevron-with-circle-right</title>\n<path d=\"M11 10l-2.302-2.506c-0.196-0.198-0.196-0.519 0-0.718 0.196-0.197 0.515-0.197 0.71 0l2.807 2.864c0.196 0.199 0.196 0.52 0 0.717l-2.807 2.864c-0.195 0.199-0.514 0.198-0.71 0-0.196-0.197-0.196-0.518 0-0.717l2.302-2.504zM10 0.4c5.302 0 9.6 4.298 9.6 9.6 0 5.303-4.298 9.6-9.6 9.6s-9.6-4.297-9.6-9.6c0-5.302 4.298-9.6 9.6-9.6zM10 18.354c4.613 0 8.354-3.74 8.354-8.354s-3.741-8.354-8.354-8.354c-4.615 0-8.354 3.74-8.354 8.354s3.739 8.354 8.354 8.354z\"></path>\n</svg> */\n}\n\n{\n    /* <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\n<title>chevron-small-right</title>\n<path d=\"M11 10l-3.141-3.42c-0.268-0.27-0.268-0.707 0-0.978 0.268-0.27 0.701-0.27 0.969 0l3.83 3.908c0.268 0.271 0.268 0.709 0 0.979l-3.83 3.908c-0.267 0.272-0.701 0.27-0.969 0s-0.268-0.707 0-0.978l3.141-3.419z\"></path>\n</svg> */\n}\n","/Users/lucc/development/git/reddit-clone/src/components/comments/CommentReplyInput.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/comments/CommentEditInput.jsx",["421","422"],"/Users/lucc/development/git/reddit-clone/src/queries/postPage.js",[],"/Users/lucc/development/git/reddit-clone/src/components/Video/Twitch.jsx",["423","424","425"],"import React from 'react'\nimport { Player } from 'video-react'\nimport ReactPlayer from 'react-player'\n\nexport default class Twitch extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n    render() {\n        console.log('vod', this.props.url)\n        return (\n            // <ReactPlayer url=\"https://clips.twitch.tv/BrainyHyperSrirachaBleedPurple\" />\n            // <iframe\n            //     width=\"560\"\n            //     height=\"315\"\n            //     src=\"https://player.twitch.tv/BrainyHyperSrirachaBleedPurple\"\n            //     frameborder=\"0\"\n            //     allow=\"autoplay; encrypted-media\"\n            //     allowfullscreen\n            // ></iframe>\n            <iframe\n                src=\"https://www.redditmedia.com/mediaembed/k11bsu&parent=localhost\"\n                height=\"1200px\"\n                width=\"720px\"\n            ></iframe>\n        )\n    }\n}\n\n// https://www.redditmedia.com/mediaembed/k11bsu\n","/Users/lucc/development/git/reddit-clone/src/queries/postModal.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/sideBar.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/createPostPage.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/profile.js",["426"],"import axiosInstance from './axios'\nimport qs from 'qs'\n\nexport default function getProfile(pageDir, name, after, before) {\n    let axios = axiosInstance()\n\n    let url = `https://oauth.reddit.com/user/${name}/comments?count=555&limit=10`\n    if (pageDir === 'next') {\n        url = `https://oauth.reddit.com/user/${name}/comments?count=555&after=${after}&limit=10`\n    } else if (pageDir === 'prev') {\n        url = `https://oauth.reddit.com/user/${name}/comments?count=555&before=${before}&limit=10`\n    }\n    const data = {\n        t: 'all',\n        type: 'comments',\n        sort: 'new',\n        limit: '100',\n    }\n    return axios({\n        method: 'get',\n        url: url,\n        data: qs.stringify(data),\n    })\n        .then((response) => {\n            return response\n            console.log('user comments response', response)\n        })\n        .catch((err) => {\n            console.log(err)\n            console.log('what is the error', err.data)\n            alert('There was an error' + err)\n        })\n}\n","/Users/lucc/development/git/reddit-clone/src/queries/profileComments.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/subscribedSubreddits.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/comment.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/commentEditInput.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/commentReplyInput.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/comments.js",["427"],"import axiosInstance from './axios'\nimport qs from 'qs'\n\nexport default function getComments(subreddit, postCommentsId) {\n    let axios = axiosInstance()\n\n    return axios({\n        method: 'GET',\n        url: `https://oauth.reddit.com/${subreddit}/comments/${postCommentsId}`,\n    })\n        .then((response) => {\n            console.log('response in comments', response)\n            return response\n        })\n        .catch((err) => {\n            console.log('comments error: ', err)\n            return err\n        })\n}\n","/Users/lucc/development/git/reddit-clone/src/components/comments/PostComment.jsx",[],"/Users/lucc/development/git/reddit-clone/src/queries/postComment.js",[],"/Users/lucc/development/git/reddit-clone/src/components/navigation/SearchForSubreddit.jsx",["428"],"/Users/lucc/development/git/reddit-clone/src/components/navigation/SubredditListing.jsx",[],"/Users/lucc/development/git/reddit-clone/src/queries/subscribe.js",[],{"ruleId":"429","severity":1,"message":"430","line":7,"column":17,"nodeType":"431","messageId":"432","endLine":7,"endColumn":23},{"ruleId":"433","replacedBy":"434"},{"ruleId":"435","replacedBy":"436"},{"ruleId":"429","severity":1,"message":"437","line":8,"column":8,"nodeType":"431","messageId":"432","endLine":8,"endColumn":17},{"ruleId":"429","severity":1,"message":"438","line":21,"column":8,"nodeType":"431","messageId":"432","endLine":21,"endColumn":12},{"ruleId":"429","severity":1,"message":"439","line":24,"column":8,"nodeType":"431","messageId":"432","endLine":24,"endColumn":20},{"ruleId":"429","severity":1,"message":"440","line":2,"column":8,"nodeType":"431","messageId":"432","endLine":2,"endColumn":13},{"ruleId":"429","severity":1,"message":"440","line":2,"column":8,"nodeType":"431","messageId":"432","endLine":2,"endColumn":13},{"ruleId":"429","severity":1,"message":"440","line":3,"column":8,"nodeType":"431","messageId":"432","endLine":3,"endColumn":13},{"ruleId":"429","severity":1,"message":"441","line":4,"column":8,"nodeType":"431","messageId":"432","endLine":4,"endColumn":16},{"ruleId":"429","severity":1,"message":"442","line":5,"column":22,"nodeType":"431","messageId":"432","endLine":5,"endColumn":26},{"ruleId":"429","severity":1,"message":"443","line":10,"column":8,"nodeType":"431","messageId":"432","endLine":10,"endColumn":13},{"ruleId":"429","severity":1,"message":"444","line":11,"column":8,"nodeType":"431","messageId":"432","endLine":11,"endColumn":13},{"ruleId":"429","severity":1,"message":"445","line":15,"column":10,"nodeType":"431","messageId":"432","endLine":15,"endColumn":21},{"ruleId":"429","severity":1,"message":"446","line":23,"column":10,"nodeType":"431","messageId":"432","endLine":23,"endColumn":23},{"ruleId":"429","severity":1,"message":"447","line":24,"column":10,"nodeType":"431","messageId":"432","endLine":24,"endColumn":17},{"ruleId":"429","severity":1,"message":"448","line":40,"column":7,"nodeType":"431","messageId":"432","endLine":40,"endColumn":26},{"ruleId":"449","severity":1,"message":"450","line":69,"column":17,"nodeType":"451","messageId":"452","endLine":69,"endColumn":74},{"ruleId":"429","severity":1,"message":"453","line":151,"column":27,"nodeType":"431","messageId":"432","endLine":151,"endColumn":34},{"ruleId":"429","severity":1,"message":"454","line":151,"column":36,"nodeType":"431","messageId":"432","endLine":151,"endColumn":41},{"ruleId":"429","severity":1,"message":"455","line":8,"column":8,"nodeType":"431","messageId":"432","endLine":8,"endColumn":26},{"ruleId":"429","severity":1,"message":"456","line":9,"column":8,"nodeType":"431","messageId":"432","endLine":9,"endColumn":17},{"ruleId":"429","severity":1,"message":"442","line":2,"column":10,"nodeType":"431","messageId":"432","endLine":2,"endColumn":14},{"ruleId":"429","severity":1,"message":"448","line":13,"column":7,"nodeType":"431","messageId":"432","endLine":13,"endColumn":26},{"ruleId":"429","severity":1,"message":"439","line":5,"column":8,"nodeType":"431","messageId":"432","endLine":5,"endColumn":20},{"ruleId":"429","severity":1,"message":"457","line":3,"column":8,"nodeType":"431","messageId":"432","endLine":3,"endColumn":13},{"ruleId":"429","severity":1,"message":"458","line":4,"column":8,"nodeType":"431","messageId":"432","endLine":4,"endColumn":10},{"ruleId":"429","severity":1,"message":"443","line":6,"column":8,"nodeType":"431","messageId":"432","endLine":6,"endColumn":13},{"ruleId":"429","severity":1,"message":"440","line":3,"column":8,"nodeType":"431","messageId":"432","endLine":3,"endColumn":13},{"ruleId":"429","severity":1,"message":"459","line":13,"column":15,"nodeType":"431","messageId":"432","endLine":13,"endColumn":26},{"ruleId":"429","severity":1,"message":"453","line":19,"column":27,"nodeType":"431","messageId":"432","endLine":19,"endColumn":34},{"ruleId":"429","severity":1,"message":"454","line":19,"column":36,"nodeType":"431","messageId":"432","endLine":19,"endColumn":41},{"ruleId":"429","severity":1,"message":"440","line":2,"column":8,"nodeType":"431","messageId":"432","endLine":2,"endColumn":13},{"ruleId":"429","severity":1,"message":"460","line":22,"column":5,"nodeType":"431","messageId":"432","endLine":22,"endColumn":20},{"ruleId":"429","severity":1,"message":"461","line":25,"column":5,"nodeType":"431","messageId":"432","endLine":25,"endColumn":21},{"ruleId":"429","severity":1,"message":"462","line":200,"column":13,"nodeType":"431","messageId":"432","endLine":200,"endColumn":18},{"ruleId":"429","severity":1,"message":"463","line":202,"column":13,"nodeType":"431","messageId":"432","endLine":202,"endColumn":36},{"ruleId":"429","severity":1,"message":"464","line":204,"column":13,"nodeType":"431","messageId":"432","endLine":204,"endColumn":23},{"ruleId":"429","severity":1,"message":"465","line":209,"column":13,"nodeType":"431","messageId":"432","endLine":209,"endColumn":31},{"ruleId":"466","severity":1,"message":"467","line":215,"column":21,"nodeType":"468","endLine":222,"endColumn":23},{"ruleId":"466","severity":1,"message":"467","line":226,"column":25,"nodeType":"468","endLine":234,"endColumn":27},{"ruleId":"429","severity":1,"message":"457","line":6,"column":8,"nodeType":"431","messageId":"432","endLine":6,"endColumn":13},{"ruleId":"429","severity":1,"message":"469","line":2,"column":16,"nodeType":"431","messageId":"432","endLine":2,"endColumn":24},{"ruleId":"429","severity":1,"message":"443","line":6,"column":8,"nodeType":"431","messageId":"432","endLine":6,"endColumn":13},{"ruleId":"429","severity":1,"message":"470","line":7,"column":8,"nodeType":"431","messageId":"432","endLine":7,"endColumn":17},{"ruleId":"429","severity":1,"message":"457","line":11,"column":8,"nodeType":"431","messageId":"432","endLine":11,"endColumn":13},{"ruleId":"429","severity":1,"message":"458","line":12,"column":8,"nodeType":"431","messageId":"432","endLine":12,"endColumn":10},{"ruleId":"429","severity":1,"message":"471","line":17,"column":8,"nodeType":"431","messageId":"432","endLine":17,"endColumn":16},{"ruleId":"429","severity":1,"message":"472","line":21,"column":8,"nodeType":"431","messageId":"432","endLine":21,"endColumn":17},{"ruleId":"466","severity":1,"message":"467","line":243,"column":37,"nodeType":"468","endLine":246,"endColumn":39},{"ruleId":"473","severity":1,"message":"474","line":5,"column":5,"nodeType":"475","messageId":"476","endLine":7,"endColumn":6},{"ruleId":"466","severity":1,"message":"467","line":19,"column":29,"nodeType":"468","endLine":19,"endColumn":77},{"ruleId":"466","severity":1,"message":"467","line":21,"column":29,"nodeType":"468","endLine":26,"endColumn":31},{"ruleId":"429","severity":1,"message":"471","line":8,"column":8,"nodeType":"431","messageId":"432","endLine":8,"endColumn":16},{"ruleId":"429","severity":1,"message":"477","line":11,"column":8,"nodeType":"431","messageId":"432","endLine":11,"endColumn":20},{"ruleId":"429","severity":1,"message":"472","line":12,"column":8,"nodeType":"431","messageId":"432","endLine":12,"endColumn":17},{"ruleId":"429","severity":1,"message":"457","line":14,"column":8,"nodeType":"431","messageId":"432","endLine":14,"endColumn":13},{"ruleId":"429","severity":1,"message":"458","line":15,"column":8,"nodeType":"431","messageId":"432","endLine":15,"endColumn":10},{"ruleId":"429","severity":1,"message":"478","line":17,"column":27,"nodeType":"431","messageId":"432","endLine":17,"endColumn":40},{"ruleId":"466","severity":1,"message":"467","line":212,"column":37,"nodeType":"468","endLine":215,"endColumn":39},{"ruleId":"479","severity":1,"message":"480","line":379,"column":1,"nodeType":"481","messageId":"482","endLine":399,"endColumn":2},{"ruleId":"473","severity":1,"message":"474","line":5,"column":5,"nodeType":"475","messageId":"476","endLine":7,"endColumn":6},{"ruleId":"429","severity":1,"message":"483","line":14,"column":13,"nodeType":"431","messageId":"432","endLine":14,"endColumn":25},{"ruleId":"429","severity":1,"message":"463","line":15,"column":13,"nodeType":"431","messageId":"432","endLine":15,"endColumn":36},{"ruleId":"429","severity":1,"message":"484","line":16,"column":13,"nodeType":"431","messageId":"432","endLine":16,"endColumn":36},{"ruleId":"466","severity":1,"message":"467","line":132,"column":29,"nodeType":"468","endLine":141,"endColumn":31},{"ruleId":"479","severity":1,"message":"480","line":37,"column":1,"nodeType":"481","messageId":"482","endLine":51,"endColumn":2},{"ruleId":"466","severity":1,"message":"467","line":22,"column":25,"nodeType":"468","endLine":25,"endColumn":27},{"ruleId":"466","severity":1,"message":"467","line":27,"column":25,"nodeType":"468","endLine":32,"endColumn":27},{"ruleId":"429","severity":1,"message":"440","line":2,"column":8,"nodeType":"431","messageId":"432","endLine":2,"endColumn":13},{"ruleId":"485","severity":1,"message":"486","line":174,"column":21,"nodeType":"487","endLine":174,"endColumn":50},{"ruleId":"485","severity":1,"message":"486","line":207,"column":13,"nodeType":"487","endLine":207,"endColumn":43},{"ruleId":"429","severity":1,"message":"488","line":6,"column":10,"nodeType":"431","messageId":"432","endLine":6,"endColumn":16},{"ruleId":"429","severity":1,"message":"457","line":4,"column":8,"nodeType":"431","messageId":"432","endLine":4,"endColumn":13},{"ruleId":"429","severity":1,"message":"458","line":5,"column":8,"nodeType":"431","messageId":"432","endLine":5,"endColumn":10},{"ruleId":"466","severity":1,"message":"467","line":162,"column":45,"nodeType":"468","endLine":165,"endColumn":47},{"ruleId":"489","severity":1,"message":"490","line":158,"column":25,"nodeType":"491","endLine":158,"endColumn":61},{"ruleId":"479","severity":1,"message":"480","line":26,"column":1,"nodeType":"481","messageId":"482","endLine":31,"endColumn":2},{"ruleId":"479","severity":1,"message":"480","line":33,"column":1,"nodeType":"481","messageId":"482","endLine":38,"endColumn":2},{"ruleId":"429","severity":1,"message":"458","line":2,"column":8,"nodeType":"431","messageId":"432","endLine":2,"endColumn":10},{"ruleId":"429","severity":1,"message":"457","line":3,"column":8,"nodeType":"431","messageId":"432","endLine":3,"endColumn":13},{"ruleId":"429","severity":1,"message":"488","line":2,"column":10,"nodeType":"431","messageId":"432","endLine":2,"endColumn":16},{"ruleId":"429","severity":1,"message":"492","line":3,"column":8,"nodeType":"431","messageId":"432","endLine":3,"endColumn":19},{"ruleId":"493","severity":1,"message":"494","line":22,"column":13,"nodeType":"468","endLine":26,"endColumn":14},{"ruleId":"449","severity":1,"message":"450","line":26,"column":13,"nodeType":"451","messageId":"452","endLine":26,"endColumn":60},{"ruleId":"429","severity":1,"message":"458","line":2,"column":8,"nodeType":"431","messageId":"432","endLine":2,"endColumn":10},{"ruleId":"429","severity":1,"message":"495","line":5,"column":8,"nodeType":"431","messageId":"432","endLine":5,"endColumn":23},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","no-native-reassign",["496"],"no-negated-in-lhs",["497"],"'Authorize' is defined but never used.","'test' is defined but never used.","'MasterSearch' is defined but never used.","'axios' is defined but never used.","'getAxios' is defined but never used.","'Link' is defined but never used.","'Login' is defined but never used.","'Modal' is defined but never used.","'handlePages' is defined but never used.","'GlobalContext' is defined but never used.","'getFeed' is defined but never used.","'getAuthorizationURL' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'history' is assigned a value but never used.","'match' is assigned a value but never used.","'SearchForSubreddit' is defined but never used.","'SearchSVG' is defined but never used.","'Axios' is defined but never used.","'qs' is defined but never used.","'postIdParam' is assigned a value but never used.","'searchSubreddit' is defined but never used.","'currentSubreddit' is defined but never used.","'title' is assigned a value but never used.","'banner_background_color' is assigned a value but never used.","'header_img' is assigned a value but never used.","'user_is_subscriber' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.","'ErrorPage' is defined but never used.","'HeartSVG' is defined but never used.","'AuthorSVG' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'DownArrowSVG' is defined but never used.","'deleteComment' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'header_title' is assigned a value but never used.","'banner_background_image' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Player' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ReactPlayer' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'SubredditSearch' is defined but never used.","no-global-assign","no-unsafe-negation"]