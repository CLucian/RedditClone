[{"/Users/lucc/development/git/reddit-clone/src/index.js":"1","/Users/lucc/development/git/reddit-clone/src/serviceWorker.js":"2","/Users/lucc/development/git/reddit-clone/src/App.js":"3","/Users/lucc/development/git/reddit-clone/src/components/authorize.component.jsx":"4","/Users/lucc/development/git/reddit-clone/src/components/GlobalState.jsx":"5","/Users/lucc/development/git/reddit-clone/src/components/about.component.jsx":"6","/Users/lucc/development/git/reddit-clone/src/components/errorPage.component.jsx":"7","/Users/lucc/development/git/reddit-clone/src/components/Login.jsx":"8","/Users/lucc/development/git/reddit-clone/src/components/home.component.jsx":"9","/Users/lucc/development/git/reddit-clone/src/components/test.jsx":"10","/Users/lucc/development/git/reddit-clone/src/components/search/HomeWrapper.jsx":"11","/Users/lucc/development/git/reddit-clone/src/components/search/MasterSearchProvider.jsx":"12","/Users/lucc/development/git/reddit-clone/src/components/search/MasterSearch.jsx":"13","/Users/lucc/development/git/reddit-clone/src/components/navigation/Sidebar.jsx":"14","/Users/lucc/development/git/reddit-clone/src/components/navigation/navbar.component.jsx":"15","/Users/lucc/development/git/reddit-clone/src/components/navigation/TopNavbar.jsx":"16","/Users/lucc/development/git/reddit-clone/src/components/profile/profile.component.jsx":"17","/Users/lucc/development/git/reddit-clone/src/components/profile/SubscribedSubreddits.jsx":"18","/Users/lucc/development/git/reddit-clone/src/components/modal/PostContainer.jsx":"19","/Users/lucc/development/git/reddit-clone/src/components/profile/Subreddit.jsx":"20","/Users/lucc/development/git/reddit-clone/src/components/posting/CreatePostPage.jsx":"21","/Users/lucc/development/git/reddit-clone/src/queries/auth.js":"22","/Users/lucc/development/git/reddit-clone/src/utils/login.js":"23","/Users/lucc/development/git/reddit-clone/src/queries/axios.js":"24","/Users/lucc/development/git/reddit-clone/src/queries/postQuery.js":"25","/Users/lucc/development/git/reddit-clone/src/utils/pagination.js":"26","/Users/lucc/development/git/reddit-clone/src/queries/feed.js":"27","/Users/lucc/development/git/reddit-clone/src/queries/subredditSearch.js":"28","/Users/lucc/development/git/reddit-clone/src/components/post.component.jsx":"29","/Users/lucc/development/git/reddit-clone/src/components/posting/CreatePost.jsx":"30","/Users/lucc/development/git/reddit-clone/src/components/modal/Modal.jsx":"31","/Users/lucc/development/git/reddit-clone/src/components/profile/SubredditLinks.jsx":"32","/Users/lucc/development/git/reddit-clone/src/components/profile/ProfileComments.jsx":"33","/Users/lucc/development/git/reddit-clone/src/components/search/SubredditSearch.jsx":"34","/Users/lucc/development/git/reddit-clone/src/components/profile/SubredditList.jsx":"35","/Users/lucc/development/git/reddit-clone/src/components/modal/PostModal.jsx":"36","/Users/lucc/development/git/reddit-clone/src/components/search/SearchSubreddit.jsx":"37","/Users/lucc/development/git/reddit-clone/src/components/svg-components/BestSVG.jsx":"38","/Users/lucc/development/git/reddit-clone/src/components/svg-components/HotSVG.jsx":"39","/Users/lucc/development/git/reddit-clone/src/components/svg-components/NewSVG.jsx":"40","/Users/lucc/development/git/reddit-clone/src/components/svg-components/RisingSVG.jsx":"41","/Users/lucc/development/git/reddit-clone/src/components/svg-components/TopSVG.jsx":"42","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Users.jsx":"43","/Users/lucc/development/git/reddit-clone/src/components/svg-components/SearchSVG.jsx":"44","/Users/lucc/development/git/reddit-clone/src/queries/querySubreddits.js":"45","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Bubble.jsx":"46","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Heart.jsx":"47","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Author.jsx":"48","/Users/lucc/development/git/reddit-clone/src/components/svg-components/DownArrow.jsx":"49","/Users/lucc/development/git/reddit-clone/src/components/svg-components/UpArrow.jsx":"50","/Users/lucc/development/git/reddit-clone/src/components/svg-components/PostSVG.jsx":"51","/Users/lucc/development/git/reddit-clone/src/components/search/SubredditInfo.jsx":"52","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Close.jsx":"53","/Users/lucc/development/git/reddit-clone/src/components/comments/Comments.jsx":"54","/Users/lucc/development/git/reddit-clone/src/components/Video/Video.jsx":"55","/Users/lucc/development/git/reddit-clone/src/utils/comments.js":"56","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Loader.jsx":"57","/Users/lucc/development/git/reddit-clone/src/components/comments/Comment.jsx":"58","/Users/lucc/development/git/reddit-clone/src/components/comments/CommentReply.jsx":"59","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Collapse.jsx":"60","/Users/lucc/development/git/reddit-clone/src/components/svg-components/UnCollapse.jsx":"61","/Users/lucc/development/git/reddit-clone/src/components/comments/CommentReplyInput.jsx":"62","/Users/lucc/development/git/reddit-clone/src/components/comments/CommentEditInput.jsx":"63","/Users/lucc/development/git/reddit-clone/src/queries/postPage.js":"64"},{"size":884,"mtime":1605739125782,"results":"65","hashOfConfig":"66"},{"size":5086,"mtime":1600197189451,"results":"67","hashOfConfig":"66"},{"size":5861,"mtime":1607724903836,"results":"68","hashOfConfig":"66"},{"size":989,"mtime":1605656940526,"results":"69","hashOfConfig":"66"},{"size":3342,"mtime":1607371620811,"results":"70","hashOfConfig":"66"},{"size":362,"mtime":1602713108238,"results":"71","hashOfConfig":"66"},{"size":151,"mtime":1600459163735,"results":"72","hashOfConfig":"66"},{"size":711,"mtime":1604446318517,"results":"73","hashOfConfig":"66"},{"size":9967,"mtime":1607644847593,"results":"74","hashOfConfig":"66"},{"size":286,"mtime":1604620040112,"results":"75","hashOfConfig":"66"},{"size":435,"mtime":1607538687119,"results":"76","hashOfConfig":"66"},{"size":736,"mtime":1607540297347,"results":"77","hashOfConfig":"66"},{"size":2315,"mtime":1607550105391,"results":"78","hashOfConfig":"66"},{"size":2596,"mtime":1606250473233,"results":"79","hashOfConfig":"66"},{"size":4521,"mtime":1605739486487,"results":"80","hashOfConfig":"66"},{"size":1174,"mtime":1607549806899,"results":"81","hashOfConfig":"66"},{"size":5494,"mtime":1606253144363,"results":"82","hashOfConfig":"66"},{"size":3553,"mtime":1607716923549,"results":"83","hashOfConfig":"66"},{"size":1933,"mtime":1606846847349,"results":"84","hashOfConfig":"66"},{"size":10159,"mtime":1607716930470,"results":"85","hashOfConfig":"66"},{"size":6608,"mtime":1607370301199,"results":"86","hashOfConfig":"66"},{"size":484,"mtime":1605655883499,"results":"87","hashOfConfig":"66"},{"size":918,"mtime":1605655125377,"results":"88","hashOfConfig":"66"},{"size":252,"mtime":1606344535077,"results":"89","hashOfConfig":"66"},{"size":1532,"mtime":1607546213436,"results":"90","hashOfConfig":"66"},{"size":543,"mtime":1606342296650,"results":"91","hashOfConfig":"66"},{"size":627,"mtime":1606417810627,"results":"92","hashOfConfig":"66"},{"size":3653,"mtime":1607394620404,"results":"93","hashOfConfig":"66"},{"size":10423,"mtime":1607724910540,"results":"94","hashOfConfig":"66"},{"size":956,"mtime":1607380460461,"results":"95","hashOfConfig":"66"},{"size":703,"mtime":1605738109979,"results":"96","hashOfConfig":"66"},{"size":1227,"mtime":1605741467596,"results":"97","hashOfConfig":"66"},{"size":8362,"mtime":1605739529283,"results":"98","hashOfConfig":"66"},{"size":2700,"mtime":1607131466399,"results":"99","hashOfConfig":"66"},{"size":2089,"mtime":1606145274483,"results":"100","hashOfConfig":"66"},{"size":7719,"mtime":1606840962889,"results":"101","hashOfConfig":"66"},{"size":1745,"mtime":1607395330897,"results":"102","hashOfConfig":"66"},{"size":945,"mtime":1605039100643,"results":"103","hashOfConfig":"66"},{"size":647,"mtime":1605038989880,"results":"104","hashOfConfig":"66"},{"size":2049,"mtime":1605039002348,"results":"105","hashOfConfig":"66"},{"size":749,"mtime":1605129487238,"results":"106","hashOfConfig":"66"},{"size":653,"mtime":1605039085337,"results":"107","hashOfConfig":"66"},{"size":1065,"mtime":1606145799127,"results":"108","hashOfConfig":"66"},{"size":861,"mtime":1607377736328,"results":"109","hashOfConfig":"66"},{"size":1635,"mtime":1607127283315,"results":"110","hashOfConfig":"66"},{"size":2643,"mtime":1604447652293,"results":"111","hashOfConfig":"66"},{"size":621,"mtime":1604359065564,"results":"112","hashOfConfig":"66"},{"size":487,"mtime":1604961290575,"results":"113","hashOfConfig":"66"},{"size":927,"mtime":1604602478732,"results":"114","hashOfConfig":"66"},{"size":970,"mtime":1604791028101,"results":"115","hashOfConfig":"66"},{"size":842,"mtime":1607210326566,"results":"116","hashOfConfig":"66"},{"size":1573,"mtime":1607127304742,"results":"117","hashOfConfig":"66"},{"size":591,"mtime":1604961504011,"results":"118","hashOfConfig":"66"},{"size":4555,"mtime":1605739444456,"results":"119","hashOfConfig":"66"},{"size":3627,"mtime":1606845288627,"results":"120","hashOfConfig":"66"},{"size":841,"mtime":1604444015136,"results":"121","hashOfConfig":"66"},{"size":1391,"mtime":1604964644074,"results":"122","hashOfConfig":"66"},{"size":11417,"mtime":1607644700967,"results":"123","hashOfConfig":"66"},{"size":3660,"mtime":1605738350314,"results":"124","hashOfConfig":"66"},{"size":1329,"mtime":1607632901804,"results":"125","hashOfConfig":"66"},{"size":1731,"mtime":1607632938383,"results":"126","hashOfConfig":"66"},{"size":3982,"mtime":1607024552672,"results":"127","hashOfConfig":"66"},{"size":5004,"mtime":1605738161343,"results":"128","hashOfConfig":"66"},{"size":777,"mtime":1607724916779,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},"hyufbp",{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"133"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"133"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"133"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"133"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"133"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"133"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"133"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"133"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"133"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"133"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"133"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"133"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"133"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"133"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"133"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"133"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"133"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lucc/development/git/reddit-clone/src/index.js",["277"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Route, Switch } from 'react-router-dom'\nimport Authorize from './components/authorize.component'\nimport GlobalState from './components/GlobalState'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <GlobalState>\n                <Route path=\"/authorize\" component={Authorize} />\n                <App />\n            </GlobalState>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n",["278","279"],"/Users/lucc/development/git/reddit-clone/src/serviceWorker.js",[],"/Users/lucc/development/git/reddit-clone/src/App.js",["280","281","282"],"/Users/lucc/development/git/reddit-clone/src/components/authorize.component.jsx",["283"],"import React from 'react'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\n\nimport { GlobalContext } from './GlobalState'\nimport { generateToken } from '../queries/auth'\n\nexport default class Authorize extends React.Component {\n    state = {\n        isComplete: false,\n    }\n\n    getAccessToken = () => {\n        const paramString = window.location.search\n        const paramSearch = new URLSearchParams(paramString)\n        const code = paramSearch.get('code')\n\n        generateToken(code)\n            .then((token) => {\n                this.setState({ isComplete: true })\n                this.context.setup(token)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    componentDidMount() {\n        this.getAccessToken()\n    }\n\n    render() {\n        if (this.state.isComplete) {\n            return <Redirect to=\"/\" />\n        }\n        return <div>authorizing...</div>\n    }\n}\n\nAuthorize.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/components/GlobalState.jsx",["284"],"import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport {\n    getAccessToken,\n    setAccessToken,\n    clearAccessToken,\n} from '../utils/login'\nimport { fetchProfile } from '../queries/auth'\nimport { setupAxios } from '../queries/axios'\n\nexport const GlobalContext = React.createContext()\n\nexport const STATUS = {\n    INAUTHENTICATED: 'INAUTHENTICATED',\n    // is fetching the profile - they have a token, just validating that it works\n    // this is to prevent showing login OR app while we're validating the token\n    AUTHENTICATING: 'AUTHENTICATING',\n    // profile has been fetched, user is good to go\n    AUTHENTICATED: 'AUTHENTICATED',\n}\n\nclass GlobalState extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            accessToken: null,\n            userData: null,\n            status: null,\n        }\n    }\n\n    componentDidMount() {\n        const token = getAccessToken()\n        if (token) {\n            this.setup(token)\n        } else {\n            this.setState({ status: STATUS.INAUTHENTICATED })\n        }\n    }\n\n    setup = (token) => {\n        this.setState({ status: STATUS.AUTHENTICATING })\n\n        fetchProfile(token)\n            .then((profile) => {\n                // store in local storage\n                setAccessToken(token)\n\n                // create axios instance with token\n                setupAxios(token)\n\n                // update state\n                this.setState({\n                    accessToken: token,\n                    userData: profile,\n                    status: STATUS.AUTHENTICATED,\n                })\n            })\n            .catch((err) => {\n                // token has expired, invalidate\n                this.invalidate()\n            })\n    }\n\n    invalidate = () => {\n        clearAccessToken()\n        this.setState({\n            accessToken: null,\n            userData: null,\n            status: STATUS.INAUTHENTICATED,\n        })\n    }\n\n    setGlobalState = (accessToken) => {\n        this.getUserData(accessToken)\n            .then((userData) => {\n                console.log('getUserData this gets hit')\n                this.setState({\n                    userData,\n                    hasFetched: true,\n                    accessToken,\n                    authenticated: true,\n                })\n            })\n            .catch((err) => {\n                console.log('setGlobalState Error: ', err)\n                localStorage.clear()\n                this.setState({\n                    accessToken: null,\n                })\n                this.props.history.push('/home')\n            })\n    }\n\n    getAndDisplayComment = (id, reply) => {\n        const yourReply = {\n            id,\n            reply,\n        }\n        return yourReply\n    }\n\n    render() {\n        return (\n            <GlobalContext.Provider\n                value={{\n                    ...this.state,\n                    getAndDisplayComment: this.getAndDisplayComment,\n                    // new items\n                    setup: this.setup,\n                    invalidate: this.invalidate,\n                }}\n            >\n                {this.props.children}\n            </GlobalContext.Provider>\n        )\n    }\n}\n\nconst GlobalStateWithRouter = withRouter(GlobalState)\nexport default GlobalStateWithRouter\n","/Users/lucc/development/git/reddit-clone/src/components/about.component.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/errorPage.component.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/Login.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/home.component.jsx",["285","286","287","288","289","290","291","292","293","294","295"],"/Users/lucc/development/git/reddit-clone/src/components/test.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/search/HomeWrapper.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/search/MasterSearchProvider.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/search/MasterSearch.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/navigation/Sidebar.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/navigation/navbar.component.jsx",["296","297"],"import React from 'react'\nimport { Link, NavLink, withRouter } from 'react-router-dom'\nimport { GlobalContext } from '../GlobalState'\n\nimport Login from '../Login'\n\nconst CLIENT_ID = 'MMej7E1hI1x82A'\nconst REDIRECT_URI = 'http://localhost:3000/authorize'\nconst DURATION = 'permanent'\nconst SCOPE =\n    'identity edit flair history modconfig modflair modlog modposts modwiki mysubreddits privatemessages read report save submit subscribe vote wikiedit wikiread'\n\nconst getAuthorizationURL = () =>\n    `https://www.reddit.com/api/v1/authorize?client_id=${CLIENT_ID}&response_type=code&state=${Math.random()}&redirect_uri=${REDIRECT_URI}&duration=${DURATION}&scope=${SCOPE}`\n\nconst menuLinks = [\n    { name: 'Home', route: '' },\n    { name: 'About', route: 'about' },\n    { name: 'Explore Topics', route: 'explore' },\n    { name: 'My Comments', route: 'comments' },\n    { name: 'Profile', route: 'profile' },\n]\n\nclass Navbar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeRoute: this.props.location.pathname.substring(1),\n        }\n    }\n\n    handleClick = (val) => {\n        this.setState({\n            activeRoute: val,\n        })\n    }\n\n    render() {\n        console.log('current location', this.props.location)\n        console.log('current history', this.props.history)\n        // console.log('current url', window.location.href)\n        console.log('active Route', this.state.activeRoute)\n        console.log('username=====', this.context.userData)\n        return (\n            <React.Fragment>\n                <div className=\"navbar\">\n                    <ul className=\"navbar-links\">\n                        <div className=\"menu\">Menu</div>\n                        {menuLinks.map((link) => (\n                            <NavLink\n                                onClick={() => this.handleClick(link.route)}\n                                to={`/${link.route}`}\n                            >\n                                <li className=\"list-item\">\n                                    <div\n                                        className={`menu-margin\n                                            ${\n                                                this.state.activeRoute ===\n                                                link.route\n                                                    ? 'activeMargin'\n                                                    : null\n                                            }`}\n                                    >\n                                        &nbsp;\n                                    </div>\n                                    <div\n                                        className={`menu-text\n                                            ${\n                                                this.state.activeRoute ===\n                                                link.route\n                                                    ? 'activeText'\n                                                    : null\n                                            }`}\n                                    >\n                                        <div className=\"link-text\">\n                                            {link.name}\n                                        </div>\n                                    </div>\n                                </li>\n                            </NavLink>\n                        ))}\n\n                        {this.context.accessToken ? null : (\n                            <li className=\"list-item\">\n                                <Login />\n                            </li>\n                        )}\n                        <div className=\"userInfo\">\n                            {this.context.userData ? (\n                                <li className=\"user\">\n                                    {this.context.userData.name}\n                                </li>\n                            ) : null}\n                            {this.context.accessToken ? (\n                                <li className=\"list-item login-btn\">\n                                    <button onClick={this.context.invalidate}>\n                                        Log out\n                                    </button>\n                                </li>\n                            ) : null}\n                        </div>\n                    </ul>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withRouter(Navbar)\n\nNavbar.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/components/navigation/TopNavbar.jsx",["298"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Login from '../Login'\nimport MasterSearch from '../search/MasterSearch'\nimport { GlobalContext } from '../GlobalState'\n\nconst TopNavbar = () => {\n    const context = React.useContext(GlobalContext)\n\n    if (!context.accessToken) {\n        return <Login />\n    } else {\n        return (\n            <div className=\"top-navbar\">\n                <div className=\"profile-picture-container\">\n                    {/* <div className=\"search-reddit\">\n                        <MasterSearch />\n                    </div> */}\n                    <Link to=\"/profile\">\n                        <div className=\"profile-avatar\">\n                            <img\n                                className=\"profile-img\"\n                                src={context.userData.icon_img}\n                                alt=\"profile-avatar\"\n                            />\n                            <div>{context.userData.name}</div>\n                        </div>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TopNavbar\n\n// TopNavbar.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/components/profile/profile.component.jsx",["299"],"import React from 'react'\n\nimport Axios from 'axios'\nimport qs from 'qs'\n\nimport Login from '../Login'\nimport ProfileComments from './ProfileComments'\nimport { GlobalContext } from '../GlobalState'\n\n/* \n    wrap withrouter for whichever component is responsible for fetching posts or whatever\n        - whatever needs to subscribe to route state\n    - link just sets any url/route state like \"after\"\n    - whatever component is responsible for fetching posts (See above), add a componentdidupdate\n    method and compare previous to current props - if `after` changed, then do whatever\n\n    create a util that passes an object into the Link to --> with pathname and search\n    search gets changed depending on what data you need\n\n*/\n\nexport default class Profile extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            postChildren: '',\n            page: 1,\n            before: null,\n            after: null,\n        }\n    }\n\n    getProfile = (pageDir) => {\n        let url = `https://oauth.reddit.com/user/${this.context.userData.name}/comments?count=555&limit=10`\n        if (pageDir === 'next') {\n            url = `https://oauth.reddit.com/user/${this.context.userData.name}/comments?count=555&after=${this.state.after}&limit=10`\n        } else if (pageDir === 'prev') {\n            url = `https://oauth.reddit.com/user/${this.context.userData.name}/comments?count=555&before=${this.state.before}&limit=10`\n        }\n        // const url = `https://oauth.reddit.com/user/${this.context.userData.name}/comments`\n        // const urlAfter = `https://oauth.reddit.com/user/${this.context.userData.name}/comments/after=${this.state.after}`\n        // const urlBefore = `https://oauth.reddit.com/user/${this.context.userData.name}/comments/before=${this.state.before}`\n        const data = {\n            t: 'all',\n            type: 'comments',\n            sort: 'new',\n            limit: '100',\n        }\n        Axios({\n            method: 'get',\n            // url: `https://oauth.reddit.com/user/${this.context.userData.name}/comments`,\n            url: url,\n            headers: {\n                Authorization: 'bearer ' + this.context.accessToken,\n                'content-type': 'application/x-www-form-urlencoded',\n                // \"Content-Type\": \"application/x-www-form-urlencoded\"\n            },\n            data: qs.stringify(data),\n        })\n            .then((response) => {\n                console.log('user comments response', response)\n                this.setState({\n                    postChildren: response.data.data.children,\n                    // pageId: response.data.data.after,\n                    // firstAfter:\n                    before: response.data.data.before,\n                    after: response.data.data.after,\n                })\n            })\n            .catch((err) => {\n                console.log(err)\n                console.log('what is the error', err.data)\n                alert('There was an error' + err)\n            })\n    }\n\n    componentDidMount() {\n        this.getProfile()\n    }\n\n    getPage = (pageDir) => {\n        // this.getProfile(this.state.after, null)\n        if (pageDir === 'next') {\n            this.setState(\n                {\n                    page: this.state.page + 1,\n                },\n                () => this.getProfile(pageDir)\n            )\n        } else if (pageDir === 'prev') {\n            this.setState(\n                {\n                    page: this.state.page - 1,\n                },\n                () => this.getProfile(pageDir)\n            )\n        }\n    }\n\n    prevPage = () => {\n        this.getProfile(null, this.state.before)\n    }\n\n    render() {\n        console.log('profile component state', this.state.postChildren)\n        return (\n            <div>\n                <div>\n                    {this.context.accessToken}\n                    <h1>This is the profile Page</h1>\n                    <h1>Hello there {this.context.userData.name}</h1>\n                    {this.state.postChildren &&\n                        this.state.postChildren.map((child) => {\n                            return (\n                                <ProfileComments\n                                    childData={child}\n                                    id={child.id}\n                                    accessToken={this.context.accessToken}\n                                />\n                            )\n                        })}\n                </div>\n                <div className=\"pagination-container\">\n                    {this.state.before && this.state.page > 1 && (\n                        <div\n                            onClick={() => {\n                                this.getPage('prev')\n                            }}\n                            className=\"pagination\"\n                        >\n                            Prev Page\n                        </div>\n                    )}\n                    {this.state.after && (\n                        // <Link to={`/after=${}`}>\n                        <div\n                            onClick={() => {\n                                this.getPage('next')\n                            }}\n                            className=\"pagination\"\n                        >\n                            Next Page\n                        </div>\n                        // </Link>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nProfile.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/components/profile/SubscribedSubreddits.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/modal/PostContainer.jsx",["300"],"import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport Modal from './Modal'\nimport PostModal from './PostModal'\n\nclass PostContainer extends React.Component {\n    constructor() {\n        super()\n        this.state = {}\n    }\n\n    // getId = (url) => {\n    //     return url.searchParams.get('post_id')\n    // }\n\n    // Post container needs a function to pass down to the post modal - close function that closes modal by getting\n    // rid of post id in the url (history.push)\n\n    closeModal = () => {\n        // /r/movies?post_id=123&type=top ->\n        // /r/movies?type=top\n        // convert to a string\n        const postIdParam = this.props.location.search\n        const postPathName = this.props.location.pathname\n        this.props.history.push(`${postPathName}`)\n        // this.props.history.push(history.location.pathname)\n    }\n\n    render() {\n        const { location, history, match } = this.props\n\n        const urlParams = new URLSearchParams(location.search || '')\n        const postId = urlParams.get('post_id')\n        // if (!location.search) {\n        //     return null\n        // }\n        if (!postId) {\n            return null\n        }\n\n        const postIdParam = this.props.history.location.search\n\n        console.log('what is the postIdParam', typeof postIdParam)\n        console.log('what is location.search', location)\n        console.log('what is the match', match)\n        console.log('what is the history', history)\n        console.log('what is urlParams', urlParams)\n        console.log('what is the currentId in the postContainer', postId)\n\n        return (\n            <div>\n                <p>This is the PostContainer component</p>\n                <Modal closeModal={this.closeModal}>\n                    <PostModal postId={postId} closeModal={this.closeModal} />\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(PostContainer)\n","/Users/lucc/development/git/reddit-clone/src/components/profile/Subreddit.jsx",["301","302","303","304","305","306","307","308"],"/Users/lucc/development/git/reddit-clone/src/components/posting/CreatePostPage.jsx",[],"/Users/lucc/development/git/reddit-clone/src/queries/auth.js",[],"/Users/lucc/development/git/reddit-clone/src/utils/login.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/axios.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/postQuery.js",[],"/Users/lucc/development/git/reddit-clone/src/utils/pagination.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/feed.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/subredditSearch.js",[],"/Users/lucc/development/git/reddit-clone/src/components/post.component.jsx",["309","310","311","312","313","314","315"],"/Users/lucc/development/git/reddit-clone/src/components/posting/CreatePost.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/modal/Modal.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/profile/SubredditLinks.jsx",["316","317","318"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nclass SubredditLinks extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const { icon_img, display_name } = this.props.data\n        console.log('icon_img', icon_img)\n\n        return (\n            <div className=\"subreddit-container\">\n                <Link className=\"subreddit-LinkTo\" to={`/r/${display_name}`}>\n                    <div className=\"subreddit-display-name\">{display_name}</div>\n                    <div className=\"subreddit-img-container\">\n                        {icon_img ? (\n                            <img className=\"subreddit-img\" src={icon_img} />\n                        ) : (\n                            <img\n                                className=\"subreddit-img\"\n                                src={\n                                    'https://styles.redditmedia.com/t5_vm1db/styles/communityIcon_5nthugyr0ef21.png?width=256&s=3a163f7135b93df0dab0921dba35f760baea5945'\n                                }\n                            />\n                        )}\n                    </div>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default SubredditLinks\n","/Users/lucc/development/git/reddit-clone/src/components/profile/ProfileComments.jsx",["319","320","321","322"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport marked from 'marked'\nimport DOMPurify from 'dompurify'\nimport moment from 'moment'\nimport Axios from 'axios'\nimport qs from 'qs'\n\nimport HeartSVG from '../svg-components/Heart'\nimport BubbleSVG from '../svg-components/Bubble'\nimport UpArrowSVG from '../svg-components/UpArrow'\nimport DownArrowSVG from '../svg-components/DownArrow'\nimport AuthorSVG from '../svg-components/Author'\n\nclass ProfileComments extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            authorImg: '',\n            isLoading: true,\n        }\n    }\n\n    componentDidMount() {\n        const getAuthorAvatar = () => {\n            if (this.props.childData.data.link_author === '[deleted]') {\n                this.setState({\n                    isLoading: false,\n                })\n            } else {\n                const data = {\n                    id: this.props.childData.data.link_author,\n                }\n                return Axios({\n                    method: 'GET',\n                    url: `https://oauth.reddit.com/user/${this.props.childData.data.link_author}/about`,\n                    headers: {\n                        Authorization: 'bearer ' + this.props.accessToken,\n                    },\n                    data: qs.stringify(data),\n                })\n                    .then((response) => {\n                        console.log('this is the author response', response)\n                        const dataImg = response.data.data.icon_img\n                        const modifiedImg = dataImg.split('?width')[0]\n                        this.setState({\n                            authorImg: modifiedImg,\n                            isLoading: false,\n                        })\n                    })\n                    .catch((err) => {\n                        console.log('Avatar fetch error ', err)\n                    })\n            }\n        }\n        getAuthorAvatar()\n    }\n\n    getMarkDown = (markDown) => {\n        if (markDown) {\n            const rawMarkup = marked(markDown)\n            const clean = DOMPurify.sanitize(rawMarkup)\n            return { __html: clean }\n        } else {\n            return {\n                __html: '<p className=\"deleted-comment\">Deleted Comment<p>',\n            }\n        }\n    }\n\n    getLengthTitle = (description) => {\n        const maxLength = 150\n        if (description.length > maxLength) {\n            return description.substring(0, maxLength) + '...'\n        } else {\n            return description\n        }\n    }\n\n    getLength = (description) => {\n        const maxLength = 250\n        if (description.length > maxLength) {\n            return description.substring(0, maxLength) + '...'\n        } else {\n            return description\n        }\n    }\n\n    getMarkDown = (markDown) => {\n        if (markDown) {\n            const rawMarkup = marked(markDown)\n            const clean = DOMPurify.sanitize(rawMarkup)\n            return { __html: clean }\n        } else {\n            return {\n                __html: '',\n            }\n        }\n    }\n\n    getDate = (unixValue) => {\n        const date = moment.unix(unixValue).format('MMM Do YYYY')\n        return date\n    }\n\n    render() {\n        const {\n            link_title,\n            link_id,\n            link_author,\n            subreddit,\n            body,\n            num_comments,\n            created_utc,\n            score,\n        } = this.props.childData.data\n\n        console.log('author state', this.state.authorImg)\n        console.log(\n            'this is the props for profile comments',\n            this.props.childData\n        )\n\n        // if (this.state.isLoading) {\n        //     return '...Loading'\n        // }\n\n        return (\n            // <div className=\"master-container\">\n            //     <div className=\"profile-post-container\">\n            //         <div className=\"post-title\">{link_title}</div>\n            //         <div className=\"author\">{link_author}</div>\n            //         <div className=\"subreddit\">{subreddit}</div>\n\n            //         <div\n            //             className=\"modal-description\"\n            //             dangerouslySetInnerHTML={this.getMarkDown(body)}\n            //         ></div>\n            //     </div>\n            // </div>\n\n            //\n\n            <div className=\"master-container\">\n                <div\n                    className=\"profile-post-container\"\n                    onClick={this.openModal}\n                >\n                    {/* <div className=\"post-thumbnail-container\">\n                        <img\n                            className=\"post-thumbnail\"\n                            src={this.defaultThumbnail()}\n                            alt=\"thumbnail\"\n                        />\n                    </div> */}\n\n                    <div className=\"post-main-info\">\n                        <div className=\"post-score\">\n                            {/* <HeartSVG /> */}\n                            <div className=\"UpArrowSVG-container\">\n                                <UpArrowSVG />\n                            </div>\n                            <div className=\"score-text\">{score}</div>\n                            {/* <div className=\"DownArrowSVG-container\">\n                                <DownArrowSVG />\n                            </div> */}\n                        </div>\n                        <div className=\"main-text-container\">\n                            <div className=\"post-title\">\n                                <Link\n                                    id=\"modal-open\"\n                                    className=\"postLinks\"\n                                    to={{\n                                        search: `?post_id=${link_id}`,\n                                    }}\n                                >\n                                    <div className=\"post-title-text\">\n                                        {this.getLengthTitle(link_title)}\n                                    </div>\n                                </Link>\n                                {/* <Link>\n                                    <div className=\"post-title-text\">\n                                        {link_title}\n                                    </div>\n                                </Link> */}\n                                <div className=\"post-subreddit\">\n                                    {subreddit}\n                                </div>\n                            </div>\n                            <div className=\"post-description\">\n                                <div\n                                    className=\"post-description-text\"\n                                    dangerouslySetInnerHTML={this.getMarkDown(\n                                        this.getLength(body)\n                                    )}\n                                ></div>\n                            </div>\n                            <div className=\"hr-container\">\n                                <hr className=\"post-hr\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"post-sub-info\">\n                        <div className=\"post-author\">\n                            <div className=\"author-img-container\">\n                                <img\n                                    className=\"author-img\"\n                                    src={this.state.authorImg}\n                                />\n                            </div>\n                            Posted by:\n                            <div className=\"author-text\">\n                                &nbsp; {link_author}\n                            </div>\n                        </div>\n                        <div className=\"post-date\">\n                            <div>\n                                {`Commented on ${this.getDate(created_utc)}`}\n                            </div>\n                        </div>\n                        <div className=\"post-comment-number\">\n                            <BubbleSVG />\n                            &nbsp;\n                            <div>{num_comments}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProfileComments\n","/Users/lucc/development/git/reddit-clone/src/components/search/SubredditSearch.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/profile/SubredditList.jsx",["323","324","325","326"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nclass SubredditList extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const {\n            display_name,\n            header_img,\n            public_description,\n            header_title,\n            banner_background_color,\n            banner_background_image,\n            community_icon,\n            icon_img,\n        } = this.props.data.data\n        console.log('subredditList', this.props.data)\n\n        return (\n            <Link to={`/r/${display_name}`}>\n                <div className=\"subreddit-master-container\">\n                    <div className=\"subreddit-item-container\">\n                        <div className=\"subreddit-header\">\n                            <div className=\"subreddit-img-header-container\">\n                                <img\n                                    className=\"subreddit-img-header\"\n                                    alt=\"header-img\"\n                                    src={\n                                        community_icon.split('?width')[0] ||\n                                        icon_img ||\n                                        header_img ||\n                                        `https://styles.redditmedia.com/t5_vm1db/styles/communityIcon_5nthugyr0ef21.png?width=256&s=3a163f7135b93df0dab0921dba35f760baea5945`\n                                    }\n                                />\n                            </div>\n                            <div className=\"subreddit-text-container\">\n                                <div className=\"subreddit-list-title\">\n                                    {display_name}\n                                </div>\n                                <div className=\"subreddit-description\">\n                                    {public_description}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Link>\n        )\n    }\n}\n\nexport default SubredditList\n","/Users/lucc/development/git/reddit-clone/src/components/modal/PostModal.jsx",["327"],"import React from 'react'\n// import { useLocation } from 'react-router-dom'\n\nimport Close from '../svg-components/Close'\nimport Comments from '../comments/Comments'\nimport { GlobalContext } from '../GlobalState'\nimport Video from '../Video/Video'\n\nimport marked from 'marked'\nimport DOMPurify from 'dompurify'\nimport moment from 'moment'\nimport Axios from 'axios'\n\n// const { search } = useLocation()\n// const params = new URLSearchParams(this.props.location.search)\n// const post_id = params.get('post_id')\n\nclass PostModal extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            commentsLoaded: false,\n            data: '',\n        }\n    }\n\n    componentDidMount() {\n        const getPostById = () => {\n            // const data = {\n            //     api_type: 'json',\n            //     names: this.props.commentData[this.props.commentId].name,\n            //     text: this.state.value,\n            // }\n            Axios({\n                method: 'get',\n                url: `https://oauth.reddit.com/by_id/${this.props.postId}`,\n                headers: {\n                    Authorization: 'bearer ' + this.context.accessToken,\n                    'content-type': 'application/x-www-form-urlencoded',\n                },\n                data: null,\n                // ,\n                // data: qs.stringify(data),\n            })\n                .then((response) => {\n                    console.log('getPostById modal get req response', response)\n                    this.setState({\n                        data: response.data.data.children[0].data,\n                    })\n                })\n                .catch((err) => {\n                    console.log(err)\n                    console.log('what is the error', err.data)\n                })\n        }\n        getPostById()\n    }\n\n    getMarkDown = () => {\n        if (this.state.data) {\n            const rawMarkup = marked(this.state.data.selftext, {\n                sanitize: true,\n            })\n            const clean = DOMPurify.sanitize(rawMarkup)\n            return { __html: clean }\n        }\n    }\n\n    getDate = (unixValue) => {\n        const date = moment.unix(unixValue).format('dddd, MMMM Do YYYY')\n        return date\n    }\n\n    /// Incorporate an image thumbnail --> also links if clicked\n\n    render() {\n        // this.getPostById(this.props.postId)\n        // console.log('post_id  in the modal Component', post_id)\n        // console.log('search in post modal', search)\n        // console.log('this is the location of query string', this.props.location)\n        console.log('this.state.data', this.state.data)\n        // console.log()\n        if (!this.state.data) {\n            return null\n        }\n\n        return (\n            <div className=\"modal-post-content\">\n                <div className=\"close-container\">\n                    <div\n                        className=\"close-svg-container\"\n                        onClick={this.props.closeModal}\n                    >\n                        <Close className=\"close-modal-btn\" />\n                    </div>\n                </div>\n                <div className=\"post-details\">\n                    <div className=\"author-subreddit-container\">\n                        <div className=\"modal-post-subreddit\">\n                            {this.state.data.subreddit}\n                        </div>\n                        <div className=\"modal-post-author\">\n                            {this.state.data.author}\n                        </div>\n                    </div>\n\n                    <div className=\"modal-post-date\">\n                        {this.getDate(this.state.data.created_utc)}\n                    </div>\n                </div>\n                <div className=\"modal-post-header\">\n                    <div className=\"modal-post-title\">\n                        <div>{this.state.data.title}</div>\n                        <div className=\"post-url\">\n                            <a href={this.state.data.url}>\n                                {this.state.data.url}\n                            </a>\n                        </div>\n                    </div>\n\n                    {/* <div className=\"modal-post-date\">\n                        {this.getDate(this.state.data.created)}\n                    </div> */}\n                    {!this.state.data.preview?.enabled &&\n                    !this.state.data?.media?.oembed?.author_url &&\n                    this.state.data.thumbnail !== 'self' &&\n                    this.state.data.thumbnail !== 'image' &&\n                    this.state.data.thumbnail !== 'thumbnail' &&\n                    this.state.data.thumbnail !== 'nsfw' &&\n                    this.state.data.thumbnail !== 'default' ? (\n                        <div className=\"post-thumbnail-container\">\n                            <a href={this.state.data.url}>\n                                <img\n                                    className=\"post-thumbnail\"\n                                    src={this.state.data.thumbnail}\n                                    // src={this.state.data.thumbnail}\n                                    alt=\"thumbnail\"\n                                />\n                            </a>\n                        </div>\n                    ) : null}\n                </div>\n                {this.state.data.preview?.enabled &&\n                this.state.data?.preview?.images ? (\n                    <div className=\"full-post-image\">\n                        <a href={this.state.data.url}>\n                            <img\n                                src={this.state.data.url}\n                                style={\n                                    {\n                                        // width: `${this.state.data.preview.images[0].resolutions[2].width}px`,\n                                        // height: `${this.state.data.preview.images[0].resolutions[2].height}px`,\n                                    }\n                                }\n                            />\n                        </a>\n                    </div>\n                ) : null}\n                {this.state.data?.media?.type !== 'twitter.com' &&\n                    this.state.data?.media?.oembed?.author_url && (\n                        <Video\n                            video={this.state.data?.media?.oembed?.author_url}\n                        />\n                    )}\n                {/* {this.state.data?.media?.reddit_video && (\n                    <Video\n                        video={\n                            this.state.data?.media?.reddit_video?.fallback_url\n                        }\n                        height={\n                            this.state.data?.preview?.images[0].resolutions[1]\n                                ?.height\n                        }\n                        width={\n                            this.state.data?.preview?.images[0].resolutions[1]\n                                ?.width\n                        }\n                    />\n                )} */}\n                <div\n                    className=\"modal-description\"\n                    dangerouslySetInnerHTML={this.getMarkDown()}\n                ></div>\n                {/* <div className=\"modal-description\">{this.props.postData.selftext}</div> */}\n\n                <Comments\n                    subreddit={this.state.data.subreddit_name_prefixed}\n                    accessToken={this.context.accessToken}\n                    postCommentsId={this.state.data.id}\n                    commentsLoaded={this.commentsLoaded}\n                    data={this.state.data}\n                />\n            </div>\n        )\n    }\n}\n\nexport default PostModal\n\nPostModal.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/components/search/SearchSubreddit.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/BestSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/HotSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/NewSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/RisingSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/TopSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/Users.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/SearchSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/queries/querySubreddits.js",["328"],"import axios from 'axios'\nimport qs from 'qs'\n\nexport const getSubreddits = (query, token) => {\n    const data = {\n        query: query,\n    }\n    return axios({\n        method: 'post',\n        url: 'https://oauth.reddit.com/api/search_reddit_names',\n        headers: {\n            Authorization: 'bearer ' + token,\n            'content-type': 'application/x-www-form-urlencoded',\n        },\n        data: qs.stringify(data),\n    })\n        .then((response) => {\n            return getSubredditInfo(response.data.names, token)\n            console.log(' subreddit query search', response)\n        })\n        .catch((err) => {\n            console.log(err)\n            console.log('what is the error', err.data)\n            alert('There was an error' + err)\n        })\n}\n\nfunction getSubredditInfo(subredditArray, token) {\n    //this does 20 calls or whatever\n    const mappedArr = subredditArray.map((subreddit) => {\n        return axios({\n            method: 'GET',\n            url: `https://oauth.reddit.com/r/${subreddit}/about/`,\n            headers: {\n                Authorization: 'bearer ' + token,\n            },\n        })\n            .then((response) => {\n                console.log('subreddit subreddit response', response.data.data)\n                return response.data.data\n            })\n            .catch((err) => {\n                console.log('Home Component Error: ', err)\n            })\n    })\n\n    return Promise.all(mappedArr)\n        .then((mappedArr) => {\n            return mappedArr.filter((data) => data != null)\n        })\n        .catch((err) => {\n            return 'there was an error' + err\n        })\n}\n","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Bubble.jsx",["329"],"import React from 'react'\n\nconst Bubble = () => {\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"1.5rem\"\n            height=\"1.5rem\"\n            viewBox=\"0 0 24 24\"\n        >\n            <title>chat</title>\n            <path\n                className=\"bubbleSVG\"\n                d=\"M20 1h-17c-1.654 0-3 1.346-3 3v12c0 1.654 2 2 3 2v6l9-6h8c1.654 0 3-1.346 3-3v-11c0-1.654-1.346-3-3-3zM21 15c0 0.551-0.449 1-1 1h-9l-6 5v-5h-2c-0.551 0-1-0.449-1-1v-11c0-0.551 0.449-1 1-1h17c0.551 0 1 0.449 1 1v11z\"\n            ></path>\n        </svg>\n    )\n}\n\nexport default Bubble\n\n// <svg\n//             version=\"1.1\"\n//             xmlns=\"http://www.w3.org/2000/svg\"\n//             width=\"1.5rem\"\n//             height=\"1.5rem\"\n//             viewBox=\"0 0 32 32\"\n//         >\n//             <title>bubble2</title>\n//             <path\n//                 className=\"bubbleSVG\"\n//                 d=\"M16 6c-1.717 0-3.375 0.271-4.928 0.804-1.46 0.502-2.76 1.211-3.863 2.108-2.069 1.681-3.209 3.843-3.209 6.088 0 1.259 0.35 2.481 1.039 3.63 0.711 1.185 1.781 2.268 3.093 3.133 0.949 0.625 1.587 1.623 1.755 2.747 0.056 0.375 0.091 0.753 0.105 1.129 0.233-0.194 0.461-0.401 0.684-0.624 0.755-0.755 1.774-1.172 2.828-1.172 0.168 0 0.336 0.011 0.505 0.032 0.655 0.083 1.325 0.126 1.99 0.126 1.717 0 3.375-0.271 4.928-0.804 1.46-0.502 2.76-1.211 3.863-2.108 2.069-1.681 3.209-3.843 3.209-6.088s-1.14-4.407-3.209-6.088c-1.104-0.897-2.404-1.606-3.863-2.108-1.553-0.534-3.211-0.804-4.928-0.804zM16 2v0c8.837 0 16 5.82 16 13s-7.163 13-16 13c-0.849 0-1.682-0.054-2.495-0.158-3.437 3.437-7.539 4.053-11.505 4.144v-0.841c2.142-1.049 4-2.961 4-5.145 0-0.305-0.024-0.604-0.068-0.897-3.619-2.383-5.932-6.024-5.932-10.103 0-7.18 7.163-13 16-13z\"\n//             ></path>\n//         </svg>\n\n{\n    /* <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"1.5rem\"\n            height=\"1.5rem\"\n            viewBox=\"0 0 24 24\"\n        >\n            <title>chat-3</title>\n            <path\n                className=\"bubbleSVG\"\n                d=\"M6.5 9c0.828 0 1.5 0.671 1.5 1.5s-0.672 1.5-1.5 1.5-1.5-0.671-1.5-1.5 0.672-1.5 1.5-1.5zM11.5 9c0.828 0 1.5 0.671 1.5 1.5s-0.672 1.5-1.5 1.5-1.5-0.671-1.5-1.5 0.672-1.5 1.5-1.5zM16.5 9c0.828 0 1.5 0.671 1.5 1.5s-0.672 1.5-1.5 1.5-1.5-0.671-1.5-1.5 0.672-1.5 1.5-1.5zM20 1h-17c-1.654 0-3 1.346-3 3v12c0 1.654 2 2 3 2v6l9-6h8c1.654 0 3-1.346 3-3v-11c0-1.654-1.346-3-3-3zM21 15c0 0.551-0.449 1-1 1h-9l-6 5v-5h-2c-0.551 0-1-0.449-1-1v-11c0-0.551 0.449-1 1-1h17c0.551 0 1 0.449 1 1v11z\"\n            ></path>\n        </svg> */\n}\n","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Heart.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/Author.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/DownArrow.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/UpArrow.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/PostSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/search/SubredditInfo.jsx",["330","331","332","333"],"import React from 'react'\n\nimport { debounce } from 'lodash'\nimport axios from 'axios'\n\nclass SubredditInfo extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            subInfo: null,\n        }\n    }\n\n    render() {\n        console.log(\n            'this.props.subreddit in SubredditInfo',\n            this.props.subreddit\n        )\n\n        // if (this.props.subreddit && this.props.subreddit !== undefined) {\n        return (\n            <div className=\"subreddit-subscribers-container\">\n                <div className=\"subreddit-img-container\">\n                    {this.props.subreddit.icon_img ? (\n                        <img\n                            className=\"subreddit-img\"\n                            src={this.props.subreddit.icon_img}\n                        />\n                    ) : (\n                        <img\n                            className=\"subreddit-img\"\n                            src={\n                                'https://styles.redditmedia.com/t5_vm1db/styles/communityIcon_5nthugyr0ef21.png?width=256&s=3a163f7135b93df0dab0921dba35f760baea5945'\n                            }\n                        />\n                    )}\n                </div>\n                <div className=\"subreddit-suggestion-info-container\">\n                    <div>{this.props.subreddit.display_name}</div>\n                    <div>{this.props.subreddit.subscribers} members</div>\n                </div>\n            </div>\n        )\n        // }\n\n        // return null\n    }\n}\n\nexport default SubredditInfo\n","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Close.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/comments/Comments.jsx",["334"],"import React from 'react'\nimport axios from 'axios'\n\nimport Loader from '../svg-components/Loader'\nimport { GlobalContext } from '../GlobalState'\nimport Comment from './Comment'\nimport { flattenCommentTree } from '../../utils/comments'\n\nexport const CommentContext = React.createContext()\n\nclass Comments extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            comments: 'loading...',\n            isLoading: true,\n            parentCommentsArr: '',\n            replyComment: false,\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.data) {\n            this.getComments()\n        }\n    }\n\n    getCommentReply = (newCommentData, commentId) => {\n        //search to see if the id is already logged in the commentMap\n        const id = newCommentData.id\n        // check to see if this id already exists from a previous comment made\n        if (!this.state.comments.id) {\n            // if it does not exist then add the id to the parent childIds array\n            this.state.comments[commentId].childIds = [\n                ...this.state.comments[commentId].childIds,\n                id,\n            ]\n        }\n        // add the new comment to the commentMap state OR if edit, replace old comment with new edited comment\n        this.setState({\n            comments: {\n                ...this.state.comments,\n                [newCommentData.id]: newCommentData,\n            },\n        })\n    }\n\n    getCommentEdit = (newCommentData, oldChildArr) => {\n        newCommentData.childIds = [...oldChildArr]\n        this.setState({\n            comments: {\n                ...this.state.comments,\n                [newCommentData.id]: newCommentData,\n            },\n        })\n    }\n\n    getComments = () => {\n        console.log('in get comments', this.props.subreddit)\n        // console.log('in get comments', this.props.postCom)\n        if (this.props.accessToken && this.props.data) {\n            return axios({\n                method: 'GET',\n                url: `https://oauth.reddit.com/${this.props.subreddit}/comments/${this.props.postCommentsId}`,\n                headers: {\n                    Authorization: 'bearer ' + this.props.accessToken,\n                },\n            })\n                .then((response) => {\n                    const responseData = response.data[1].data.children\n                    const parentCommentIdsArr = []\n                    responseData.forEach((parentComment) => {\n                        parentCommentIdsArr.push(parentComment.data.id)\n                    })\n\n                    // console.clear()\n                    const data = responseData\n                    console.log('direct data', data)\n                    const commentMap = flattenCommentTree(responseData)\n                    console.log('DATA AND COMMENT MAP', data, commentMap)\n\n                    this.setState({\n                        comments: commentMap,\n                        parentCommentsArr: parentCommentIdsArr,\n                        isLoading: false,\n                    })\n                })\n                .catch((err) => {\n                    console.log('Home Component Error: ', err)\n                })\n        }\n    }\n\n    render() {\n        console.log(\n            'this.props.data from the postModal in Comments now',\n            this.props.data\n        )\n        // console.log('author in comments', this.props.data.author)\n        // console.log('subreddit', this.props.subreddit)\n        // console.log('postCommentsId', this.props.postCommentsId)\n        // console.log('this.state.comments', this.state.comments)\n        // console.log('getcommentReply', this.getCommentReply)\n        // console.log('getcommetnEdit', this.getCommentEdit)\n\n        if (this.state.isLoading) {\n            return <Loader />\n        }\n\n        return (\n            <div>\n                {this.state.parentCommentsArr.map((parentId) => {\n                    return (\n                        <Comment\n                            // currentData={this.state.comments[parentId]}\n                            commentData={this.state.comments}\n                            commentId={parentId}\n                            // parent_Id={this.state.comments[parentId].parent_id}\n                            getCommentReply={this.getCommentReply}\n                            getCommentEdit={this.getCommentEdit}\n                        />\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default Comments\n\nComments.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/components/Video/Video.jsx",["335"],"import React from 'react'\nimport ReactPlayer from 'react-player'\n\nimport '../../App.css'\n\nimport { Player } from 'video-react'\n\n// import Hls from 'hls'\n\nclass Video extends React.Component {\n    render() {\n        return (\n            <div className=\"player-container\">\n                <ReactPlayer\n                    className=\"video-player\"\n                    url={this.props.video}\n                    // url=\"https://clips.twitch.tv/UninterestedAffluentLettuceKreygasm\"\n                    controls={true}\n                    config={{ playerVars: { showinfo: 1 } }}\n                />\n                {/* <ReactPlayer>\n                    <iframe\n                        src={this.props.video}\n                        frameborder=\"0\"\n                        allow=\"autoplay; encrypted-media\"\n                        allowfullscreen\n                        title=\"video\"\n                    />\n                    <iframe\n                        src=\"https://clips.twitch.tv/UninterestedAffluentLettuceKreygasm\"\n                        // height=\"<height>\"\n                        // width=\"<width>\"\n                        // frameborder=\"<frameborder>\"\n                        // scrolling=\"<scrolling>\"\n                        // allowfullscreen=\"<allow full screen>\"\n                    ></iframe>\n\n                    </ReactPlayer> */}\n            </div>\n        )\n    }\n}\n\nexport default Video\n\n// React Video  http://localhost:3000/r/web_design?post_id=t3_k2spjf\n\n// http://localhost:3000/r/movies?post_id=t3_k3yt6t\n\n// http://localhost:3000/r/LivestreamFail?post_id=t3_dlte8e\n\n// secure_media_embed:\n\n// \"&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fstreamable.com%2Fo%2Ffpuv4&amp;display_name=Streamable&amp;url=https%3A%2F%2Fstreamable.com%2Ffpuv4&amp;image=https%3A%2F%2Fcdn-cf-east.streamable.com%2Fimage%2Ffpuv4.jpg%3FExpires%3D1603595460%26Signature%3DHLLKKHCuxMySyMZwLmjHCOt-LBJRKDtHA19LfIPkq-YUzbwlrzbcYBo6jZJrDeWn04AYgCiaCwOGBV5aEgA3G4HnbjFeIwUB5fBr3Asjt2-akdR59SipPqZOV-9GlpQK-VuxHELLGMvpCONTaCapTgIpDYY9hsfcvFntNN7CKxViYl5cFXNh%7E9BDutv8Q5x8G1g9vn1EhVfnnC4uUQQpWPNa0cas12IrNL2hvR54ttEHRdjEADwoV%7EY1mC13B7d0%7EsNZNBV4SbNNld-ZPaYtpiwP67mceecr1%7E2COOhUUKEVQkvNlThWCa-I25SlzdzgZwqCeeYHXdmAXJ6M%7EwNeEA__%26Key-Pair-Id%3DAPKAIEYUVEN4EVB2OKEQ&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=streamable\" width=\"600\" height=\"338\" scrolling=\"no\" title=\"Streamable embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;\"\n// content: \"&lt;iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/rYPJYxEoPCg?feature=oembed&amp;enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen&gt;&lt;/iframe&gt;\"\n\n// \"&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fclips.twitch.tv%2Fembed%3Fclip%3DUninterestedAffluentLettuceKreygasm%26parent%3Dcdn.embedly.com%26parent%3Dreddit.com%26parent%3Dwww.reddit.com%26parent%3Dold.reddit.com%26parent%3Dnew.reddit.com%26parent%3Dredditmedia.com%26muted%3Dtrue%26autoplay%3Dfalse&amp;display_name=Twitch.tv&amp;url=https%3A%2F%2Fclips.twitch.tv%2FUninterestedAffluentLettuceKreygasm&amp;image=https%3A%2F%2Fclips-media-assets2.twitch.tv%2FAT-cm%7C950415022-social-preview.jpg&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=twitch\" width=\"600\" height=\"340\" scrolling=\"no\" title=\"Twitch.tv embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;\"\n","/Users/lucc/development/git/reddit-clone/src/utils/comments.js",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/Loader.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/comments/Comment.jsx",["336"],"/Users/lucc/development/git/reddit-clone/src/components/comments/CommentReply.jsx",["337"],"import React from 'react'\nimport CommentReplyInput from './CommentReplyInput'\nimport CommentEditInput from './CommentEditInput'\nimport { GlobalContext } from '../GlobalState'\n\n// import InputField from './InputField';\n\nclass CommentReply extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            showTextBox: false,\n            showEditBox: false,\n        }\n    }\n\n    handleCommentPost = () => {\n        this.setState({\n            showTextBox: !this.state.showTextBox,\n        })\n    }\n\n    handleEditPost = () => {\n        console.log(\n            'commentData for this id',\n            this.props.commentData[this.props.commentId]\n        )\n        // console.log('getCommentEdit', this.props.getCommentEdit)\n        // console.log('getCommentReply', this.props.getCommentReply)\n        this.setState({\n            showEditBox: !this.state.showEditBox,\n        })\n    }\n\n    closeEditPost = () => {\n        this.setState({\n            showEditBox: false,\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"commentReplyEdit-container\">\n                <div className=\"replyEdit-btn-container\">\n                    {this.state.showEditBox ? null : (\n                        <div\n                            className=\"comment-reply\"\n                            onClick={this.handleCommentPost}\n                        >\n                            Reply\n                        </div>\n                    )}\n                    {this.props.commentData[this.props.commentId].author ===\n                        this.context.userData.name &&\n                        !this.state.showTextBox && (\n                            <button\n                                className=\"comment-submit\"\n                                onClick={this.handleEditPost}\n                            >\n                                Edit\n                            </button>\n                        )}\n                </div>\n                {this.state.showEditBox ? null : (\n                    <CommentReplyInput\n                        getCommentReply={this.props.getCommentReply}\n                        showTextBox={this.state.showTextBox}\n                        commentId={this.props.commentId}\n                        parent_Id={this.props.parent_Id}\n                        commentData={this.props.commentData}\n                        handleCommentPost={this.handleCommentPost}\n                        showTextBox={this.state.showTextBox}\n                    />\n                )}\n                {this.state.showTextBox ? null : (\n                    <CommentEditInput\n                        getCommentReply={this.props.getCommentReply}\n                        commentData={this.props.commentData}\n                        commentId={this.props.commentId}\n                        accessToken={this.context.accessToken}\n                        user={this.context.userData.name}\n                        handleEditPost={this.handleEditPost}\n                        showEditBox={this.state.showEditBox}\n                        closeEditPost={this.closeEditPost}\n                        getCommentEdit={this.props.getCommentEdit}\n                        oldChildArr={\n                            this.props.commentData[this.props.commentId]\n                                .childIds\n                        }\n                        author={\n                            this.props.commentData[this.props.commentId].author\n                        }\n                    />\n                )}\n            </div>\n        )\n    }\n}\n\nexport default CommentReply\n\nCommentReply.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Collapse.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/UnCollapse.jsx",["338","339"],"import React from 'react'\n\nconst Uncollapse = (props) => {\n    if (props.isCollapsed) {\n        return (\n            <div className=\"uncollapseSVG\">\n                <svg\n                    version=\"1.1\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"20\"\n                    height=\"20\"\n                    viewBox=\"0 0 20 20\"\n                >\n                    <title>circle-with-plus</title>\n                    <path d=\"M10 1.6c-4.639 0-8.4 3.761-8.4 8.4s3.761 8.4 8.4 8.4 8.4-3.761 8.4-8.4c0-4.639-3.761-8.4-8.4-8.4zM15 11h-4v4h-2v-4h-4v-2h4v-4h2v4h4v2z\"></path>\n                </svg>\n            </div>\n        )\n    } else {\n        return <div></div>\n    }\n}\n\nexport default Uncollapse\n\n{\n    /* <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\n<title>chevron-with-circle-right</title>\n<path d=\"M11 10l-2.302-2.506c-0.196-0.198-0.196-0.519 0-0.718 0.196-0.197 0.515-0.197 0.71 0l2.807 2.864c0.196 0.199 0.196 0.52 0 0.717l-2.807 2.864c-0.195 0.199-0.514 0.198-0.71 0-0.196-0.197-0.196-0.518 0-0.717l2.302-2.504zM10 0.4c5.302 0 9.6 4.298 9.6 9.6 0 5.303-4.298 9.6-9.6 9.6s-9.6-4.297-9.6-9.6c0-5.302 4.298-9.6 9.6-9.6zM10 18.354c4.613 0 8.354-3.74 8.354-8.354s-3.741-8.354-8.354-8.354c-4.615 0-8.354 3.74-8.354 8.354s3.739 8.354 8.354 8.354z\"></path>\n</svg> */\n}\n\n{\n    /* <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\n<title>chevron-small-right</title>\n<path d=\"M11 10l-3.141-3.42c-0.268-0.27-0.268-0.707 0-0.978 0.268-0.27 0.701-0.27 0.969 0l3.83 3.908c0.268 0.271 0.268 0.709 0 0.979l-3.83 3.908c-0.267 0.272-0.701 0.27-0.969 0s-0.268-0.707 0-0.978l3.141-3.419z\"></path>\n</svg> */\n}\n","/Users/lucc/development/git/reddit-clone/src/components/comments/CommentReplyInput.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/comments/CommentEditInput.jsx",[],"/Users/lucc/development/git/reddit-clone/src/queries/postPage.js",[],{"ruleId":"340","severity":1,"message":"341","line":7,"column":17,"nodeType":"342","messageId":"343","endLine":7,"endColumn":23},{"ruleId":"344","replacedBy":"345"},{"ruleId":"346","replacedBy":"347"},{"ruleId":"340","severity":1,"message":"348","line":8,"column":8,"nodeType":"342","messageId":"343","endLine":8,"endColumn":17},{"ruleId":"340","severity":1,"message":"349","line":20,"column":8,"nodeType":"342","messageId":"343","endLine":20,"endColumn":12},{"ruleId":"340","severity":1,"message":"350","line":23,"column":8,"nodeType":"342","messageId":"343","endLine":23,"endColumn":20},{"ruleId":"340","severity":1,"message":"351","line":2,"column":8,"nodeType":"342","messageId":"343","endLine":2,"endColumn":13},{"ruleId":"340","severity":1,"message":"351","line":2,"column":8,"nodeType":"342","messageId":"343","endLine":2,"endColumn":13},{"ruleId":"340","severity":1,"message":"351","line":3,"column":8,"nodeType":"342","messageId":"343","endLine":3,"endColumn":13},{"ruleId":"340","severity":1,"message":"352","line":4,"column":8,"nodeType":"342","messageId":"343","endLine":4,"endColumn":16},{"ruleId":"340","severity":1,"message":"353","line":5,"column":22,"nodeType":"342","messageId":"343","endLine":5,"endColumn":26},{"ruleId":"340","severity":1,"message":"354","line":10,"column":8,"nodeType":"342","messageId":"343","endLine":10,"endColumn":13},{"ruleId":"340","severity":1,"message":"355","line":11,"column":8,"nodeType":"342","messageId":"343","endLine":11,"endColumn":13},{"ruleId":"340","severity":1,"message":"356","line":15,"column":10,"nodeType":"342","messageId":"343","endLine":15,"endColumn":21},{"ruleId":"340","severity":1,"message":"357","line":23,"column":10,"nodeType":"342","messageId":"343","endLine":23,"endColumn":23},{"ruleId":"340","severity":1,"message":"358","line":24,"column":10,"nodeType":"342","messageId":"343","endLine":24,"endColumn":17},{"ruleId":"340","severity":1,"message":"359","line":40,"column":7,"nodeType":"342","messageId":"343","endLine":40,"endColumn":26},{"ruleId":"340","severity":1,"message":"360","line":146,"column":27,"nodeType":"342","messageId":"343","endLine":146,"endColumn":34},{"ruleId":"340","severity":1,"message":"361","line":146,"column":36,"nodeType":"342","messageId":"343","endLine":146,"endColumn":41},{"ruleId":"340","severity":1,"message":"353","line":2,"column":10,"nodeType":"342","messageId":"343","endLine":2,"endColumn":14},{"ruleId":"340","severity":1,"message":"359","line":13,"column":7,"nodeType":"342","messageId":"343","endLine":13,"endColumn":26},{"ruleId":"340","severity":1,"message":"350","line":5,"column":8,"nodeType":"342","messageId":"343","endLine":5,"endColumn":20},{"ruleId":"340","severity":1,"message":"354","line":6,"column":8,"nodeType":"342","messageId":"343","endLine":6,"endColumn":13},{"ruleId":"340","severity":1,"message":"362","line":24,"column":15,"nodeType":"342","messageId":"343","endLine":24,"endColumn":26},{"ruleId":"340","severity":1,"message":"351","line":2,"column":8,"nodeType":"342","messageId":"343","endLine":2,"endColumn":13},{"ruleId":"340","severity":1,"message":"363","line":22,"column":5,"nodeType":"342","messageId":"343","endLine":22,"endColumn":20},{"ruleId":"340","severity":1,"message":"364","line":25,"column":5,"nodeType":"342","messageId":"343","endLine":25,"endColumn":21},{"ruleId":"340","severity":1,"message":"365","line":179,"column":13,"nodeType":"342","messageId":"343","endLine":179,"endColumn":18},{"ruleId":"340","severity":1,"message":"366","line":181,"column":13,"nodeType":"342","messageId":"343","endLine":181,"endColumn":36},{"ruleId":"340","severity":1,"message":"367","line":183,"column":13,"nodeType":"342","messageId":"343","endLine":183,"endColumn":23},{"ruleId":"368","severity":1,"message":"369","line":193,"column":21,"nodeType":"370","endLine":200,"endColumn":23},{"ruleId":"368","severity":1,"message":"369","line":204,"column":25,"nodeType":"370","endLine":212,"endColumn":27},{"ruleId":"340","severity":1,"message":"354","line":6,"column":8,"nodeType":"342","messageId":"343","endLine":6,"endColumn":13},{"ruleId":"340","severity":1,"message":"371","line":7,"column":8,"nodeType":"342","messageId":"343","endLine":7,"endColumn":17},{"ruleId":"340","severity":1,"message":"372","line":11,"column":8,"nodeType":"342","messageId":"343","endLine":11,"endColumn":13},{"ruleId":"340","severity":1,"message":"373","line":12,"column":8,"nodeType":"342","messageId":"343","endLine":12,"endColumn":10},{"ruleId":"340","severity":1,"message":"374","line":17,"column":8,"nodeType":"342","messageId":"343","endLine":17,"endColumn":16},{"ruleId":"340","severity":1,"message":"375","line":21,"column":8,"nodeType":"342","messageId":"343","endLine":21,"endColumn":17},{"ruleId":"368","severity":1,"message":"369","line":237,"column":37,"nodeType":"370","endLine":240,"endColumn":39},{"ruleId":"376","severity":1,"message":"377","line":5,"column":5,"nodeType":"378","messageId":"379","endLine":7,"endColumn":6},{"ruleId":"368","severity":1,"message":"369","line":19,"column":29,"nodeType":"370","endLine":19,"endColumn":77},{"ruleId":"368","severity":1,"message":"369","line":21,"column":29,"nodeType":"370","endLine":26,"endColumn":31},{"ruleId":"340","severity":1,"message":"374","line":10,"column":8,"nodeType":"342","messageId":"343","endLine":10,"endColumn":16},{"ruleId":"340","severity":1,"message":"380","line":13,"column":8,"nodeType":"342","messageId":"343","endLine":13,"endColumn":20},{"ruleId":"340","severity":1,"message":"375","line":14,"column":8,"nodeType":"342","messageId":"343","endLine":14,"endColumn":17},{"ruleId":"368","severity":1,"message":"369","line":207,"column":33,"nodeType":"370","endLine":210,"endColumn":35},{"ruleId":"376","severity":1,"message":"377","line":5,"column":5,"nodeType":"378","messageId":"379","endLine":7,"endColumn":6},{"ruleId":"340","severity":1,"message":"381","line":14,"column":13,"nodeType":"342","messageId":"343","endLine":14,"endColumn":25},{"ruleId":"340","severity":1,"message":"366","line":15,"column":13,"nodeType":"342","messageId":"343","endLine":15,"endColumn":36},{"ruleId":"340","severity":1,"message":"382","line":16,"column":13,"nodeType":"342","messageId":"343","endLine":16,"endColumn":36},{"ruleId":"368","severity":1,"message":"369","line":147,"column":29,"nodeType":"370","endLine":155,"endColumn":31},{"ruleId":"383","severity":1,"message":"384","line":19,"column":13,"nodeType":"385","messageId":"386","endLine":19,"endColumn":61},{"ruleId":"387","severity":1,"message":"388","line":37,"column":1,"nodeType":"389","messageId":"390","endLine":51,"endColumn":2},{"ruleId":"340","severity":1,"message":"391","line":3,"column":10,"nodeType":"342","messageId":"343","endLine":3,"endColumn":18},{"ruleId":"340","severity":1,"message":"351","line":4,"column":8,"nodeType":"342","messageId":"343","endLine":4,"endColumn":13},{"ruleId":"368","severity":1,"message":"369","line":25,"column":25,"nodeType":"370","endLine":28,"endColumn":27},{"ruleId":"368","severity":1,"message":"369","line":30,"column":25,"nodeType":"370","endLine":35,"endColumn":27},{"ruleId":"392","severity":1,"message":"393","line":34,"column":13,"nodeType":"394","endLine":34,"endColumn":43},{"ruleId":"340","severity":1,"message":"395","line":6,"column":10,"nodeType":"342","messageId":"343","endLine":6,"endColumn":16},{"ruleId":"368","severity":1,"message":"369","line":200,"column":41,"nodeType":"370","endLine":203,"endColumn":43},{"ruleId":"396","severity":1,"message":"397","line":72,"column":25,"nodeType":"398","endLine":72,"endColumn":61},{"ruleId":"387","severity":1,"message":"388","line":26,"column":1,"nodeType":"389","messageId":"390","endLine":31,"endColumn":2},{"ruleId":"387","severity":1,"message":"388","line":33,"column":1,"nodeType":"389","messageId":"390","endLine":38,"endColumn":2},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","no-native-reassign",["399"],"no-negated-in-lhs",["400"],"'Authorize' is defined but never used.","'test' is defined but never used.","'MasterSearch' is defined but never used.","'axios' is defined but never used.","'getAxios' is defined but never used.","'Link' is defined but never used.","'Login' is defined but never used.","'Modal' is defined but never used.","'handlePages' is defined but never used.","'GlobalContext' is defined but never used.","'getFeed' is defined but never used.","'getAuthorizationURL' is assigned a value but never used.","'history' is assigned a value but never used.","'match' is assigned a value but never used.","'postIdParam' is assigned a value but never used.","'searchSubreddit' is defined but never used.","'currentSubreddit' is defined but never used.","'title' is assigned a value but never used.","'banner_background_color' is assigned a value but never used.","'header_img' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ErrorPage' is defined but never used.","'Axios' is defined but never used.","'qs' is defined but never used.","'HeartSVG' is defined but never used.","'AuthorSVG' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'DownArrowSVG' is defined but never used.","'header_title' is assigned a value but never used.","'banner_background_image' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'debounce' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Player' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]