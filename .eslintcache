[{"/Users/lucc/development/git/reddit-clone/src/index.js":"1","/Users/lucc/development/git/reddit-clone/src/serviceWorker.js":"2","/Users/lucc/development/git/reddit-clone/src/App.js":"3","/Users/lucc/development/git/reddit-clone/src/components/authorize.component.jsx":"4","/Users/lucc/development/git/reddit-clone/src/components/GlobalState.jsx":"5","/Users/lucc/development/git/reddit-clone/src/components/about.component.jsx":"6","/Users/lucc/development/git/reddit-clone/src/components/errorPage.component.jsx":"7","/Users/lucc/development/git/reddit-clone/src/components/Login.jsx":"8","/Users/lucc/development/git/reddit-clone/src/components/home.component.jsx":"9","/Users/lucc/development/git/reddit-clone/src/components/test.jsx":"10","/Users/lucc/development/git/reddit-clone/src/components/search/HomeWrapper.jsx":"11","/Users/lucc/development/git/reddit-clone/src/components/search/MasterSearchProvider.jsx":"12","/Users/lucc/development/git/reddit-clone/src/components/search/MasterSearch.jsx":"13","/Users/lucc/development/git/reddit-clone/src/components/navigation/Sidebar.jsx":"14","/Users/lucc/development/git/reddit-clone/src/components/navigation/navbar.component.jsx":"15","/Users/lucc/development/git/reddit-clone/src/components/navigation/TopNavbar.jsx":"16","/Users/lucc/development/git/reddit-clone/src/components/profile/profile.component.jsx":"17","/Users/lucc/development/git/reddit-clone/src/components/profile/SubscribedSubreddits.jsx":"18","/Users/lucc/development/git/reddit-clone/src/components/modal/PostContainer.jsx":"19","/Users/lucc/development/git/reddit-clone/src/components/profile/Subreddit.jsx":"20","/Users/lucc/development/git/reddit-clone/src/components/posting/CreatePostPage.jsx":"21","/Users/lucc/development/git/reddit-clone/src/queries/auth.js":"22","/Users/lucc/development/git/reddit-clone/src/utils/login.js":"23","/Users/lucc/development/git/reddit-clone/src/queries/axios.js":"24","/Users/lucc/development/git/reddit-clone/src/queries/postQuery.js":"25","/Users/lucc/development/git/reddit-clone/src/utils/pagination.js":"26","/Users/lucc/development/git/reddit-clone/src/queries/feed.js":"27","/Users/lucc/development/git/reddit-clone/src/queries/subredditSearch.js":"28","/Users/lucc/development/git/reddit-clone/src/components/post.component.jsx":"29","/Users/lucc/development/git/reddit-clone/src/components/posting/CreatePost.jsx":"30","/Users/lucc/development/git/reddit-clone/src/components/modal/Modal.jsx":"31","/Users/lucc/development/git/reddit-clone/src/components/profile/SubredditLinks.jsx":"32","/Users/lucc/development/git/reddit-clone/src/components/profile/ProfileComments.jsx":"33","/Users/lucc/development/git/reddit-clone/src/components/search/SubredditSearch.jsx":"34","/Users/lucc/development/git/reddit-clone/src/components/profile/SubredditList.jsx":"35","/Users/lucc/development/git/reddit-clone/src/components/modal/PostModal.jsx":"36","/Users/lucc/development/git/reddit-clone/src/components/search/SearchSubreddit.jsx":"37","/Users/lucc/development/git/reddit-clone/src/components/svg-components/BestSVG.jsx":"38","/Users/lucc/development/git/reddit-clone/src/components/svg-components/HotSVG.jsx":"39","/Users/lucc/development/git/reddit-clone/src/components/svg-components/NewSVG.jsx":"40","/Users/lucc/development/git/reddit-clone/src/components/svg-components/RisingSVG.jsx":"41","/Users/lucc/development/git/reddit-clone/src/components/svg-components/TopSVG.jsx":"42","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Users.jsx":"43","/Users/lucc/development/git/reddit-clone/src/components/svg-components/SearchSVG.jsx":"44","/Users/lucc/development/git/reddit-clone/src/queries/querySubreddits.js":"45","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Bubble.jsx":"46","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Heart.jsx":"47","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Author.jsx":"48","/Users/lucc/development/git/reddit-clone/src/components/svg-components/DownArrow.jsx":"49","/Users/lucc/development/git/reddit-clone/src/components/svg-components/UpArrow.jsx":"50","/Users/lucc/development/git/reddit-clone/src/components/svg-components/PostSVG.jsx":"51","/Users/lucc/development/git/reddit-clone/src/components/search/SubredditInfo.jsx":"52","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Close.jsx":"53","/Users/lucc/development/git/reddit-clone/src/components/comments/Comments.jsx":"54","/Users/lucc/development/git/reddit-clone/src/components/Video/Video.jsx":"55","/Users/lucc/development/git/reddit-clone/src/utils/comments.js":"56","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Loader.jsx":"57","/Users/lucc/development/git/reddit-clone/src/components/comments/Comment.jsx":"58","/Users/lucc/development/git/reddit-clone/src/components/comments/CommentReply.jsx":"59","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Collapse.jsx":"60","/Users/lucc/development/git/reddit-clone/src/components/svg-components/UnCollapse.jsx":"61","/Users/lucc/development/git/reddit-clone/src/components/comments/CommentReplyInput.jsx":"62","/Users/lucc/development/git/reddit-clone/src/components/comments/CommentEditInput.jsx":"63","/Users/lucc/development/git/reddit-clone/src/queries/postPage.js":"64","/Users/lucc/development/git/reddit-clone/src/queries/postModal.js":"65","/Users/lucc/development/git/reddit-clone/src/queries/sideBar.js":"66","/Users/lucc/development/git/reddit-clone/src/queries/createPostPage.js":"67","/Users/lucc/development/git/reddit-clone/src/queries/profile.js":"68","/Users/lucc/development/git/reddit-clone/src/queries/profileComments.js":"69","/Users/lucc/development/git/reddit-clone/src/queries/subscribedSubreddits.js":"70","/Users/lucc/development/git/reddit-clone/src/queries/comment.js":"71","/Users/lucc/development/git/reddit-clone/src/queries/commentEditInput.js":"72","/Users/lucc/development/git/reddit-clone/src/queries/commentReplyInput.js":"73","/Users/lucc/development/git/reddit-clone/src/queries/comments.js":"74","/Users/lucc/development/git/reddit-clone/src/components/comments/PostComment.jsx":"75","/Users/lucc/development/git/reddit-clone/src/queries/postComment.js":"76","/Users/lucc/development/git/reddit-clone/src/components/navigation/SearchForSubreddit.jsx":"77","/Users/lucc/development/git/reddit-clone/src/components/navigation/SubredditListing.jsx":"78","/Users/lucc/development/git/reddit-clone/src/queries/subscribe.js":"79","/Users/lucc/development/git/reddit-clone/src/components/profile/User.jsx":"80","/Users/lucc/development/git/reddit-clone/src/queries/profilePosts.js":"81","/Users/lucc/development/git/reddit-clone/src/components/profile/ProfilePostsList.jsx":"82","/Users/lucc/development/git/reddit-clone/src/components/profile/ProfilePost.jsx":"83","/Users/lucc/development/git/reddit-clone/src/queries/user.js":"84","/Users/lucc/development/git/reddit-clone/src/components/svg-components/navbar-svgs/CommentsSVG.jsx":"85","/Users/lucc/development/git/reddit-clone/src/components/svg-components/navbar-svgs/SearchSubs.jsx":"86","/Users/lucc/development/git/reddit-clone/src/components/svg-components/navbar-svgs/PostsSVG.jsx":"87","/Users/lucc/development/git/reddit-clone/src/components/svg-components/navbar-svgs/ProfileSVG.jsx":"88","/Users/lucc/development/git/reddit-clone/src/components/svg-components/navbar-svgs/HomeSVG.jsx":"89","/Users/lucc/development/git/reddit-clone/src/components/posting/CreatePostPageWrapper.jsx":"90","/Users/lucc/development/git/reddit-clone/src/components/toasts/ToastProvider.jsx":"91","/Users/lucc/development/git/reddit-clone/src/components/navigation/HamburgerNav.jsx":"92","/Users/lucc/development/git/reddit-clone/src/components/svg-components/HamburgerSVG.jsx":"93","/Users/lucc/development/git/reddit-clone/src/components/svg-components/pageNav-svgs/prevSVG.jsx":"94","/Users/lucc/development/git/reddit-clone/src/components/svg-components/pageNav-svgs/nextSVG.jsx":"95","/Users/lucc/development/git/reddit-clone/src/components/svg-components/pageNav-svgs/NextSVG.jsx":"96","/Users/lucc/development/git/reddit-clone/src/components/svg-components/pageNav-svgs/PrevSVG.jsx":"97"},{"size":884,"mtime":1605739125782,"results":"98","hashOfConfig":"99"},{"size":5086,"mtime":1600197189451,"results":"100","hashOfConfig":"99"},{"size":9260,"mtime":1609709379033,"results":"101","hashOfConfig":"99"},{"size":989,"mtime":1605656940526,"results":"102","hashOfConfig":"99"},{"size":3409,"mtime":1608932295626,"results":"103","hashOfConfig":"99"},{"size":362,"mtime":1602713108238,"results":"104","hashOfConfig":"99"},{"size":151,"mtime":1600459163735,"results":"105","hashOfConfig":"99"},{"size":1162,"mtime":1609194322627,"results":"106","hashOfConfig":"99"},{"size":8582,"mtime":1609972343357,"results":"107","hashOfConfig":"99"},{"size":286,"mtime":1604620040112,"results":"108","hashOfConfig":"99"},{"size":464,"mtime":1609536337052,"results":"109","hashOfConfig":"99"},{"size":702,"mtime":1609536783603,"results":"110","hashOfConfig":"99"},{"size":1692,"mtime":1609189512385,"results":"111","hashOfConfig":"99"},{"size":2185,"mtime":1608667898194,"results":"112","hashOfConfig":"99"},{"size":4210,"mtime":1609365435702,"results":"113","hashOfConfig":"99"},{"size":2434,"mtime":1609703987736,"results":"114","hashOfConfig":"99"},{"size":5789,"mtime":1609799628867,"results":"115","hashOfConfig":"99"},{"size":3350,"mtime":1609799516340,"results":"116","hashOfConfig":"99"},{"size":1032,"mtime":1609188717402,"results":"117","hashOfConfig":"99"},{"size":14929,"mtime":1609799564574,"results":"118","hashOfConfig":"99"},{"size":6264,"mtime":1609699100063,"results":"119","hashOfConfig":"99"},{"size":484,"mtime":1605655883499,"results":"120","hashOfConfig":"99"},{"size":918,"mtime":1605655125377,"results":"121","hashOfConfig":"99"},{"size":1603,"mtime":1608597030190,"results":"122","hashOfConfig":"99"},{"size":1532,"mtime":1607546213436,"results":"123","hashOfConfig":"99"},{"size":543,"mtime":1606342296650,"results":"124","hashOfConfig":"99"},{"size":704,"mtime":1608154322011,"results":"125","hashOfConfig":"99"},{"size":3653,"mtime":1607394620404,"results":"126","hashOfConfig":"99"},{"size":10916,"mtime":1609972918518,"results":"127","hashOfConfig":"99"},{"size":676,"mtime":1609542665149,"results":"128","hashOfConfig":"99"},{"size":715,"mtime":1609188352377,"results":"129","hashOfConfig":"99"},{"size":1227,"mtime":1605741467596,"results":"130","hashOfConfig":"99"},{"size":12083,"mtime":1609617926440,"results":"131","hashOfConfig":"99"},{"size":2668,"mtime":1609699365322,"results":"132","hashOfConfig":"99"},{"size":2483,"mtime":1609620113383,"results":"133","hashOfConfig":"99"},{"size":7704,"mtime":1609971524951,"results":"134","hashOfConfig":"99"},{"size":1477,"mtime":1609797762239,"results":"135","hashOfConfig":"99"},{"size":945,"mtime":1605039100643,"results":"136","hashOfConfig":"99"},{"size":647,"mtime":1605038989880,"results":"137","hashOfConfig":"99"},{"size":2049,"mtime":1605039002348,"results":"138","hashOfConfig":"99"},{"size":749,"mtime":1605129487238,"results":"139","hashOfConfig":"99"},{"size":653,"mtime":1605039085337,"results":"140","hashOfConfig":"99"},{"size":1065,"mtime":1606145799127,"results":"141","hashOfConfig":"99"},{"size":861,"mtime":1607377736328,"results":"142","hashOfConfig":"99"},{"size":1408,"mtime":1608679111883,"results":"143","hashOfConfig":"99"},{"size":2643,"mtime":1604447652293,"results":"144","hashOfConfig":"99"},{"size":621,"mtime":1604359065564,"results":"145","hashOfConfig":"99"},{"size":487,"mtime":1604961290575,"results":"146","hashOfConfig":"99"},{"size":927,"mtime":1604602478732,"results":"147","hashOfConfig":"99"},{"size":970,"mtime":1604791028101,"results":"148","hashOfConfig":"99"},{"size":842,"mtime":1607210326566,"results":"149","hashOfConfig":"99"},{"size":1703,"mtime":1609622810889,"results":"150","hashOfConfig":"99"},{"size":591,"mtime":1604961504011,"results":"151","hashOfConfig":"99"},{"size":9336,"mtime":1609797728831,"results":"152","hashOfConfig":"99"},{"size":6904,"mtime":1609972124026,"results":"153","hashOfConfig":"99"},{"size":841,"mtime":1604444015136,"results":"154","hashOfConfig":"99"},{"size":1391,"mtime":1609973610432,"results":"155","hashOfConfig":"99"},{"size":10458,"mtime":1608485661022,"results":"156","hashOfConfig":"99"},{"size":8184,"mtime":1609617827897,"results":"157","hashOfConfig":"99"},{"size":1329,"mtime":1607632901804,"results":"158","hashOfConfig":"99"},{"size":1731,"mtime":1607632938383,"results":"159","hashOfConfig":"99"},{"size":3371,"mtime":1609628276459,"results":"160","hashOfConfig":"99"},{"size":2995,"mtime":1608664372436,"results":"161","hashOfConfig":"99"},{"size":801,"mtime":1608062099578,"results":"162","hashOfConfig":"99"},{"size":435,"mtime":1607973166953,"results":"163","hashOfConfig":"99"},{"size":415,"mtime":1608247599012,"results":"164","hashOfConfig":"99"},{"size":537,"mtime":1609621318258,"results":"165","hashOfConfig":"99"},{"size":1020,"mtime":1608931925160,"results":"166","hashOfConfig":"99"},{"size":1109,"mtime":1609797650811,"results":"167","hashOfConfig":"99"},{"size":702,"mtime":1607981661886,"results":"168","hashOfConfig":"99"},{"size":506,"mtime":1607983579661,"results":"169","hashOfConfig":"99"},{"size":533,"mtime":1607986526737,"results":"170","hashOfConfig":"99"},{"size":563,"mtime":1607987004287,"results":"171","hashOfConfig":"99"},{"size":523,"mtime":1608158034291,"results":"172","hashOfConfig":"99"},{"size":2251,"mtime":1608590682367,"results":"173","hashOfConfig":"99"},{"size":525,"mtime":1608584578497,"results":"174","hashOfConfig":"99"},{"size":2987,"mtime":1608673997335,"results":"175","hashOfConfig":"99"},{"size":1261,"mtime":1608672425457,"results":"176","hashOfConfig":"99"},{"size":498,"mtime":1608685295604,"results":"177","hashOfConfig":"99"},{"size":1867,"mtime":1609015047421,"results":"178","hashOfConfig":"99"},{"size":1090,"mtime":1608933904354,"results":"179","hashOfConfig":"99"},{"size":5550,"mtime":1609799595143,"results":"180","hashOfConfig":"99"},{"size":9844,"mtime":1609617771683,"results":"181","hashOfConfig":"99"},{"size":478,"mtime":1609011426090,"results":"182","hashOfConfig":"99"},{"size":736,"mtime":1609021739186,"results":"183","hashOfConfig":"99"},{"size":1030,"mtime":1609021738606,"results":"184","hashOfConfig":"99"},{"size":696,"mtime":1609021837657,"results":"185","hashOfConfig":"99"},{"size":993,"mtime":1609021940259,"results":"186","hashOfConfig":"99"},{"size":691,"mtime":1609022021459,"results":"187","hashOfConfig":"99"},{"size":525,"mtime":1609623830312,"results":"188","hashOfConfig":"99"},{"size":850,"mtime":1609192488605,"results":"189","hashOfConfig":"99"},{"size":6003,"mtime":1609704991564,"results":"190","hashOfConfig":"99"},{"size":789,"mtime":1609374985029,"results":"191","hashOfConfig":"99"},{"size":852,"mtime":1609706112068,"results":"192","hashOfConfig":"99"},{"size":846,"mtime":1609706106214,"results":"193","hashOfConfig":"99"},{"size":950,"mtime":1609706613797,"results":"194","hashOfConfig":"99"},{"size":956,"mtime":1609706614847,"results":"195","hashOfConfig":"99"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"199"},"hyufbp",{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"199"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"199"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"199"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"199"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"199"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"199"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"199"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"199"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"199"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"199"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"199"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"199"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"199"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"199"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"199"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"199"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"199"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"199"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"199"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"199"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"199"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"199"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"199"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"199"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"199"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lucc/development/git/reddit-clone/src/index.js",["417"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Route, Switch } from 'react-router-dom'\nimport Authorize from './components/authorize.component'\nimport GlobalState from './components/GlobalState'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <GlobalState>\n                <Route path=\"/authorize\" component={Authorize} />\n                <App />\n            </GlobalState>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n",["418","419"],"/Users/lucc/development/git/reddit-clone/src/serviceWorker.js",[],"/Users/lucc/development/git/reddit-clone/src/App.js",["420","421","422","423"],"/Users/lucc/development/git/reddit-clone/src/components/authorize.component.jsx",["424"],"import React from 'react'\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom'\n\nimport { GlobalContext } from './GlobalState'\nimport { generateToken } from '../queries/auth'\n\nexport default class Authorize extends React.Component {\n    state = {\n        isComplete: false,\n    }\n\n    getAccessToken = () => {\n        const paramString = window.location.search\n        const paramSearch = new URLSearchParams(paramString)\n        const code = paramSearch.get('code')\n\n        generateToken(code)\n            .then((token) => {\n                this.setState({ isComplete: true })\n                this.context.setup(token)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    componentDidMount() {\n        this.getAccessToken()\n    }\n\n    render() {\n        if (this.state.isComplete) {\n            return <Redirect to=\"/\" />\n        }\n        return <div>authorizing...</div>\n    }\n}\n\nAuthorize.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/components/GlobalState.jsx",["425"],"import React from 'react'\nimport axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport {\n    getAccessToken,\n    setAccessToken,\n    clearAccessToken,\n} from '../utils/login'\nimport { fetchProfile } from '../queries/auth'\nimport { setupAxios } from '../queries/axios'\n\nexport const GlobalContext = React.createContext()\n\nexport const STATUS = {\n    INAUTHENTICATED: 'INAUTHENTICATED',\n    // is fetching the profile - they have a token, just validating that it works\n    // this is to prevent showing login OR app while we're validating the token\n    AUTHENTICATING: 'AUTHENTICATING',\n    // profile has been fetched, user is good to go\n    AUTHENTICATED: 'AUTHENTICATED',\n}\n\nclass GlobalState extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            accessToken: null,\n            userData: null,\n            status: null,\n        }\n    }\n\n    componentDidMount() {\n        const token = getAccessToken()\n        if (token) {\n            this.setup(token)\n        } else {\n            this.setState({ status: STATUS.INAUTHENTICATED })\n        }\n    }\n\n    setup = (token) => {\n        this.setState({ status: STATUS.AUTHENTICATING })\n\n        fetchProfile(token)\n            .then((profile) => {\n                // store in local storage\n                setAccessToken(token)\n\n                // create axios instance with token\n                setupAxios(token, this.invalidate)\n\n                // update state\n                this.setState({\n                    accessToken: token,\n                    userData: profile,\n                    status: STATUS.AUTHENTICATED,\n                })\n            })\n            .catch((err) => {\n                // token has expired, invalidate\n                this.invalidate()\n            })\n    }\n\n    invalidate = () => {\n        clearAccessToken()\n        this.setState({\n            accessToken: null,\n            userData: null,\n            status: STATUS.INAUTHENTICATED,\n        })\n    }\n\n    setGlobalState = (accessToken) => {\n        this.getUserData(accessToken)\n            .then((userData) => {\n                console.log('userData', userData)\n                console.log('getUserData this gets hit')\n                this.setState({\n                    userData,\n                    hasFetched: true,\n                    accessToken,\n                    authenticated: true,\n                })\n            })\n            .catch((err) => {\n                console.log('setGlobalState Error: ', err)\n                localStorage.clear()\n                this.setState({\n                    accessToken: null,\n                })\n                this.props.history.push('/home')\n            })\n    }\n\n    getAndDisplayComment = (id, reply) => {\n        const yourReply = {\n            id,\n            reply,\n        }\n        return yourReply\n    }\n\n    render() {\n        return (\n            <GlobalContext.Provider\n                value={{\n                    ...this.state,\n                    getAndDisplayComment: this.getAndDisplayComment,\n                    // new items\n                    setup: this.setup,\n                    invalidate: this.invalidate,\n                }}\n            >\n                {this.props.children}\n            </GlobalContext.Provider>\n        )\n    }\n}\n\nconst GlobalStateWithRouter = withRouter(GlobalState)\nexport default GlobalStateWithRouter\n","/Users/lucc/development/git/reddit-clone/src/components/about.component.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/errorPage.component.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/Login.jsx",["426"],"import React from 'react'\n\nconst Login = () => {\n    const CLIENT_ID = 'MMej7E1hI1x82A'\n    const REDIRECT_URI = 'http://localhost:3000/authorize'\n    const DURATION = 'permanent'\n    const SCOPE =\n        'identity edit flair history modconfig modflair modlog modposts modwiki mysubreddits privatemessages read report save submit subscribe vote wikiedit wikiread'\n    const getAuthorizationURL = () =>\n        `https://www.reddit.com/api/v1/authorize?client_id=${CLIENT_ID}&response_type=code&state=${Math.random()}&redirect_uri=${REDIRECT_URI}&duration=${DURATION}&scope=${SCOPE}`\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"welcome-text\">Welcome to Lucian's Reddit Clone</div>\n            <img\n                className=\"login-img\"\n                src=\"https://cdn.vox-cdn.com/thumbor/-fMT5GzsyqcP2Vm7IWgSIKqJYTo=/0x0:640x427/1820x1213/filters:focal(0x0:640x427):format(webp)/cdn.vox-cdn.com/uploads/chorus_image/image/45970810/reddit_logo_640.0.jpg\"\n            />\n            <a href={getAuthorizationURL()} className=\"login-link\">\n                Log in\n            </a>\n        </div>\n    )\n}\n\nexport default Login\n","/Users/lucc/development/git/reddit-clone/src/components/home.component.jsx",["427","428","429","430","431","432","433","434","435"],"/Users/lucc/development/git/reddit-clone/src/components/test.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/search/HomeWrapper.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/search/MasterSearchProvider.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/search/MasterSearch.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/navigation/Sidebar.jsx",["436","437"],"import React from 'react'\n// import axios from 'axios'\n\n// import SubscribedSubreddits from '../profile/SubscribedSubreddits'\nimport { GlobalContext } from '../GlobalState'\nimport SubredditLinks from '../profile/SubredditLinks'\nimport { Link } from 'react-router-dom'\nimport SearchForSubreddit from './SearchForSubreddit'\nimport SearchSVG from '../svg-components/SearchSVG'\n\nimport getSubreddits from '../../queries/sideBar'\n\nclass SideBar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            subredditDataArr: null,\n            isLoading: true,\n        }\n    }\n\n    componentDidMount() {\n        if (this.context.accessToken) {\n            // console.log('accessToken in sidebar', this.context.accessToken)\n            getSubreddits()\n                .then((response) => {\n                    this.setState({\n                        subredditDataArr: response.data.data.children,\n                        isLoading: false,\n                    })\n                })\n                .catch((err) => {\n                    console.log('caught sidebar', err)\n                })\n        }\n    }\n\n    render() {\n        console.log('access token in sidebar', this.context.accessToken)\n        if (this.state.isLoading) {\n            return 'Loading...'\n        }\n\n        return (\n            <div className=\"subbed-reddit-links\">\n                <div className=\"menu\">Subscribed subreddits</div>\n                <ul className=\"subreddit-links\">\n                    {this.state.subredditDataArr.map((subreddit) => {\n                        return (\n                            <li className=\"list-item-subreddit\">\n                                <SubredditLinks data={subreddit.data} />\n                            </li>\n                        )\n                    })}\n                </ul>\n                <div className=\"more-subreddits\">\n                    <Link id=\"more-subreddits-link\" to=\"/me/subreddits\">\n                        See all your subreddits\n                    </Link>\n                </div>\n            </div>\n            /* </div> */\n        )\n    }\n}\n\nexport default SideBar\n\nSideBar.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/components/navigation/navbar.component.jsx",["438","439"],"import React from 'react'\nimport { Link, NavLink, withRouter } from 'react-router-dom'\nimport { GlobalContext } from '../GlobalState'\n\nimport Login from '../Login'\n\nimport CommentsSVG from '../svg-components/navbar-svgs/CommentsSVG'\nimport SearchSubs from '../svg-components/navbar-svgs/SearchSubs'\nimport PostsSVG from '../svg-components/navbar-svgs/PostsSVG'\nimport ProfileSVG from '../svg-components/navbar-svgs/ProfileSVG'\nimport HomeSVG from '../svg-components/navbar-svgs/HomeSVG'\n\nconst CLIENT_ID = 'MMej7E1hI1x82A'\nconst REDIRECT_URI = 'http://localhost:3000/authorize'\nconst DURATION = 'permanent'\nconst SCOPE =\n    'identity edit flair history modconfig modflair modlog modposts modwiki mysubreddits privatemessages read report save submit subscribe vote wikiedit wikiread'\n\nconst getAuthorizationURL = () =>\n    `https://www.reddit.com /api/v1/authorize?client_id=${CLIENT_ID}&response_type=code&state=${Math.random()}&redirect_uri=${REDIRECT_URI}&duration=${DURATION}&scope=${SCOPE}`\n\nconst menuLinks = [\n    { name: 'Home', route: '', component: <HomeSVG /> },\n    { name: 'Find Subreddit', route: 'subreddits', component: <SearchSubs /> },\n    { name: 'My Posts', route: 'posts', component: <PostsSVG /> },\n    { name: 'My Comments', route: 'comments', component: <CommentsSVG /> },\n    { name: 'Profile', route: 'user', component: <ProfileSVG /> },\n]\n\nclass Navbar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeRoute: this.props.location.pathname.substring(1),\n        }\n    }\n\n    handleClick = (val) => {\n        this.setState({\n            activeRoute: val,\n        })\n    }\n\n    render() {\n        const { pathname } = this.props.location\n\n        console.log('this.state.activeRoute', this.state.activeRoute)\n        console.log(\n            'this.state.activeRoute',\n            this.props.location.pathname.substring(1)\n        )\n\n        return (\n            <React.Fragment>\n                <div className=\"navbar\">\n                    <ul className=\"navbar-links\">\n                        <div className=\"menu\">Menu</div>\n                        {menuLinks.map((link) => (\n                            <NavLink\n                                onClick={() => this.handleClick(link.route)}\n                                to={`/${link.route}`}\n                            >\n                                {pathname.substring(1) === link.route ? (\n                                    <li className=\"list-item-active\">\n                                        <div className=\"link-text\">\n                                            {link.name}\n                                        </div>\n                                        {link.component}\n                                    </li>\n                                ) : (\n                                    <li className=\"list-item\">\n                                        <div className=\"link-text\">\n                                            {link.name}\n                                        </div>\n                                        {link.component}\n                                    </li>\n                                )}\n                            </NavLink>\n                        ))}\n\n                        {this.context.accessToken ? null : (\n                            <li className=\"list-item\">\n                                <Login />\n                            </li>\n                        )}\n                        <div className=\"userInfo\">\n                            {this.context.accessToken ? (\n                                <div>\n                                    <button\n                                        className=\"logout-btn-nav\"\n                                        onClick={this.context.invalidate}\n                                    >\n                                        Log out\n                                    </button>\n                                </div>\n                            ) : null}\n                        </div>\n                    </ul>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withRouter(Navbar)\n\nNavbar.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/components/navigation/TopNavbar.jsx",["440","441"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport HamburgerNav from './HamburgerNav'\nimport HamburgerSVG from '../svg-components/HamburgerSVG'\n\nimport Login from '../Login'\nimport MasterSearch from '../search/MasterSearch'\nimport { GlobalContext } from '../GlobalState'\n\nclass TopNavbar extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            hideNav: '',\n            showMenu: false,\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.resize)\n        this.resize()\n    }\n\n    resize = () => {\n        let currentHideNav = window.innerWidth <= 740\n        if (currentHideNav !== this.state.hideNav) {\n            this.setState({\n                hideNav: currentHideNav,\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.resize)\n    }\n\n    handleClick = () => {\n        this.setState({\n            showMenu: !this.state.showMenu,\n        })\n    }\n\n    clickedOutside = () => {\n        this.setState({\n            showMenu: false,\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"top-navbar\">\n                <div className=\"profile-picture-container\">\n                    <Link to=\"/user\">\n                        <div className=\"profile-avatar\">\n                            <img\n                                className=\"profile-img\"\n                                src={this.context.userData.icon_img}\n                                alt=\"profile-avatar\"\n                            />\n                            <span className=\"profile-name-span\">\n                                {this.context.userData.name}\n                            </span>\n                        </div>\n                    </Link>\n                    {this.state.hideNav && (\n                        <div onClick={this.handleClick}>\n                            <HamburgerSVG />\n                            {this.state.showMenu && (\n                                <HamburgerNav\n                                    clickedOutside={this.clickedOutside}\n                                    showMenu={this.state.showMenu}\n                                />\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\nexport default TopNavbar\n\nTopNavbar.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/components/profile/profile.component.jsx",["442"],"/Users/lucc/development/git/reddit-clone/src/components/profile/SubscribedSubreddits.jsx",["443"],"/Users/lucc/development/git/reddit-clone/src/components/modal/PostContainer.jsx",["444","445","446"],"import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\n// import Toast from './Toast'\nimport Modal from './Modal'\nimport PostModal from './PostModal'\n\nclass PostContainer extends React.Component {\n    constructor() {\n        super()\n        this.state = {}\n    }\n    closeModal = () => {\n        const postIdParam = this.props.location.search\n        const postPathName = this.props.location.pathname\n        this.props.history.push(`${postPathName}`)\n    }\n\n    render() {\n        const { location, history, match } = this.props\n\n        const urlParams = new URLSearchParams(location.search || '')\n        const postId = urlParams.get('post_id')\n\n        if (!postId) {\n            return null\n        }\n\n        return (\n            <div className=\"postContainer-container\">\n                <Modal closeModal={this.closeModal}>\n                    <PostModal postId={postId} closeModal={this.closeModal} />\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(PostContainer)\n","/Users/lucc/development/git/reddit-clone/src/components/profile/Subreddit.jsx",["447","448","449","450","451","452","453","454","455"],"/Users/lucc/development/git/reddit-clone/src/components/posting/CreatePostPage.jsx",[],"/Users/lucc/development/git/reddit-clone/src/queries/auth.js",[],"/Users/lucc/development/git/reddit-clone/src/utils/login.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/axios.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/postQuery.js",[],"/Users/lucc/development/git/reddit-clone/src/utils/pagination.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/feed.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/subredditSearch.js",[],"/Users/lucc/development/git/reddit-clone/src/components/post.component.jsx",["456","457","458","459","460","461","462","463"],"/Users/lucc/development/git/reddit-clone/src/components/posting/CreatePost.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/modal/Modal.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/profile/SubredditLinks.jsx",["464","465","466"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nclass SubredditLinks extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const { icon_img, display_name } = this.props.data\n        console.log('icon_img', icon_img)\n\n        return (\n            <div className=\"subreddit-container\">\n                <Link className=\"subreddit-LinkTo\" to={`/r/${display_name}`}>\n                    <div className=\"subreddit-display-name\">{display_name}</div>\n                    <div className=\"subreddit-img-container\">\n                        {icon_img ? (\n                            <img className=\"subreddit-img\" src={icon_img} />\n                        ) : (\n                            <img\n                                className=\"subreddit-img\"\n                                src={\n                                    'https://styles.redditmedia.com/t5_vm1db/styles/communityIcon_5nthugyr0ef21.png?width=256&s=3a163f7135b93df0dab0921dba35f760baea5945'\n                                }\n                            />\n                        )}\n                    </div>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default SubredditLinks\n","/Users/lucc/development/git/reddit-clone/src/components/profile/ProfileComments.jsx",["467","468","469","470","471"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport marked from 'marked'\nimport DOMPurify from 'dompurify'\nimport moment from 'moment'\n\nimport HeartSVG from '../svg-components/Heart'\nimport BubbleSVG from '../svg-components/Bubble'\nimport UpArrowSVG from '../svg-components/UpArrow'\nimport DownArrowSVG from '../svg-components/DownArrow'\nimport AuthorSVG from '../svg-components/Author'\n\nimport getAuthorAvatar from '../../queries/profileComments'\n\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\ntoast.configure()\nclass ProfileComments extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            authorImg: '',\n            confirm: false,\n        }\n    }\n\n    componentDidMount() {\n        getAuthorAvatar(this.props.childData.data.link_author)\n            .then((response) => {\n                this.handleAuthorResponse(response)\n            })\n            .catch((err) => {\n                console.log('error in profilecomments', err)\n            })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (\n            prevProps.postNum !== this.props.postNum ||\n            prevProps.after !== this.props.after\n        ) {\n            getAuthorAvatar(\n                this.props.childData.data.link_author\n            ).then((response) => this.handleAuthorResponse(response))\n        }\n    }\n\n    handleAuthorResponse = (response) => {\n        if (response?.data?.data?.icon_img) {\n            const dataImg = response.data.data.icon_img\n            const modifiedImg = dataImg.split('?width')[0]\n            this.setState({\n                authorImg: modifiedImg,\n            })\n        } else {\n            this.setState({\n                authorImg: null,\n            })\n        }\n    }\n\n    getMarkDown = (markDown) => {\n        if (markDown) {\n            const rawMarkup = marked(markDown)\n            const clean = DOMPurify.sanitize(rawMarkup)\n            return { __html: clean }\n        } else {\n            return {\n                __html: '<p className=\"deleted-comment\">Deleted Comment<p>',\n            }\n        }\n    }\n\n    getLengthTitle = (description) => {\n        const maxLength = 150\n        if (description.length > maxLength) {\n            return description.substring(0, maxLength) + '...'\n        } else {\n            return description\n        }\n    }\n\n    getLength = (description) => {\n        const maxLength = 250\n        if (description.length > maxLength) {\n            return description.substring(0, maxLength) + '...'\n        } else {\n            return description\n        }\n    }\n\n    getMarkDown = (markDown) => {\n        if (markDown) {\n            const rawMarkup = marked(markDown)\n            const clean = DOMPurify.sanitize(rawMarkup)\n            return { __html: clean }\n        } else {\n            return {\n                __html: '',\n            }\n        }\n    }\n\n    deleteBtn = () => {\n        this.setState({\n            confirm: !this.state.confirm,\n        })\n    }\n\n    deleteToast = () => {\n        toast.success('Your comment has been successfuly deleted!', {\n            position: toast.POSITION.TOP_CENTER,\n        })\n    }\n\n    deleted = () => {\n        this.deleteToast()\n        this.props.confirmDelete(this.props.childData.data.name)\n        this.setState({\n            confirm: false,\n        })\n    }\n\n    getDate = (unixValue) => {\n        const date = moment.unix(unixValue).format('MMM Do YYYY')\n        return date\n    }\n\n    render() {\n        // console.log('this.props.childData.data', this.props.childData.data)\n\n        const {\n            link_title,\n            link_id,\n            link_author,\n            subreddit,\n            body,\n            num_comments,\n            created_utc,\n            score,\n        } = this.props.childData.data\n\n        return (\n            <div className=\"master-container\">\n                <div\n                    className=\"profile-post-container\"\n                    onClick={this.openModal}\n                >\n                    <div className=\"post-listing-subreddit\">{subreddit}</div>\n                    <div className=\"post-main-info\">\n                        <div className=\"post-score\">\n                            <div className=\"UpArrowSVG-container\">\n                                <UpArrowSVG isActive={this.state.voteVal} />\n                            </div>\n                            <div className=\"score-text\">{score}</div>\n                        </div>\n                        <div className=\"main-text-container\">\n                            {/* <div className=\"post-listing-subreddit\">\n                                {this.props.postData.data.subreddit}\n                            </div> */}\n                            <div className=\"post-title\">\n                                <Link\n                                    id=\"modal-open\"\n                                    className=\"postLinks\"\n                                    to={{\n                                        search: `?post_id=${link_id}`,\n                                    }}\n                                >\n                                    <div className=\"post-title-text\">\n                                        {this.getLengthTitle(link_title)}\n                                    </div>\n                                </Link>\n                                {this.props.childData.data?.thumbnail && (\n                                    <div className=\"subreddit-image-container\">\n                                        {/* <div className=\"post-subreddit\">\n                                        {this.props.postData.data.subreddit}\n                                    </div> */}\n                                        {this.props.childData.data.thumbnail !==\n                                            'self' &&\n                                        this.props.childData.data.thumbnail !==\n                                            'thumbnail' &&\n                                        this.props.childData.data.thumbnail !==\n                                            'image' &&\n                                        this.props.childData.data.thumbnail !==\n                                            'nsfw' &&\n                                        this.props.childData.data.thumbnail !==\n                                            'default' ? (\n                                            <a\n                                                href={\n                                                    this.props.childData.data\n                                                        .url\n                                                }\n                                            >\n                                                <div className=\"post-listing-thumbnail-container\">\n                                                    <img\n                                                        className=\"post-thumbnail\"\n                                                        src={\n                                                            this.props.childData\n                                                                .data.thumbnail\n                                                        }\n                                                        // src={this.state.data.thumbnail}\n                                                        alt={\n                                                            this.props.childData\n                                                                .data.thumbnail\n                                                        }\n                                                    />\n                                                </div>\n                                            </a>\n                                        ) : null}\n                                    </div>\n                                )}\n                            </div>\n\n                            <div className=\"post-description\">\n                                <div\n                                    className=\"post-description-text\"\n                                    dangerouslySetInnerHTML={this.getMarkDown(\n                                        this.getLength(body)\n                                    )}\n                                ></div>\n                            </div>\n                            <div className=\"hr-container\">\n                                <hr className=\"post-hr\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"post-sub-info\">\n                        <div className=\"post-author\">\n                            <div className=\"author-img-container\">\n                                {/* {this.state.authorImg} */}\n                                {this.state.authorImg && (\n                                    <img\n                                        className=\"author-img\"\n                                        src={this.state.authorImg}\n                                    />\n                                )}\n                            </div>\n                            Posted by:\n                            <div className=\"author-text\">\n                                &nbsp; {link_author}\n                            </div>\n                        </div>\n                        <div className=\"post-date\">\n                            <div>{this.getDate(created_utc)}</div>\n                        </div>\n                        <div className=\"post-comment-number\">\n                            <BubbleSVG />\n                            &nbsp;\n                            <div>{num_comments}</div>\n                        </div>\n                    </div>\n                    {!this.state.confirm ? (\n                        <div className=\"delete-div\">\n                            <button\n                                className=\"delete-btn\"\n                                onClick={this.deleteBtn}\n                            >\n                                Delete Comment\n                            </button>\n                        </div>\n                    ) : (\n                        <div className=\"confirm-div\">\n                            <div className=\"confirm-text\">\n                                <p>Are you sure?</p>\n                            </div>\n                            <div className=\"confirm-btns\">\n                                <button\n                                    className=\"yes-btn\"\n                                    onClick={this.deleted}\n                                >\n                                    Yes\n                                </button>\n                                <button\n                                    className=\"no-btn\"\n                                    onClick={this.deleteBtn}\n                                >\n                                    No\n                                </button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProfileComments\n\n{\n    /* <div className=\"delete-div\">\n                        <button className=\"delete-btn\" onClick={this.deleteBtn}>\n                            Delete Comment\n                        </button>\n                    </div>\n                    {this.state.confirm && (\n                        <div className=\"confirm-div\">\n                            <div className=\"confirm-text\">\n                                <p>\n                                    Are you sure you want to delete this\n                                    comment?\n                                </p>\n                            </div>\n                            <div className=\"confirm-btns\">\n                                <button className=\"yes-btn\">Yes</button>\n                                <button className=\"no-btn\">No</button>\n                            </div>\n                        </div>\n                    )} */\n}\n","/Users/lucc/development/git/reddit-clone/src/components/search/SubredditSearch.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/profile/SubredditList.jsx",["472","473","474","475"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nclass SubredditList extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    getLength = (description) => {\n        const maxLength = 150\n        if (description.length > maxLength) {\n            return description.substring(0, maxLength) + '...'\n        } else {\n            return description\n        }\n    }\n\n    render() {\n        // if (!this.props.data.data) {\n        //     return null\n        // }\n        console.log('subredditList=-', this.props.data)\n        const {\n            display_name,\n            header_img,\n            public_description,\n            header_title,\n            banner_background_color,\n            banner_background_image,\n            community_icon,\n            icon_img,\n        } = this.props.data\n\n        return (\n            <Link to={`/r/${display_name}`}>\n                <div className=\"subreddit-master-container\">\n                    <div className=\"subreddit-item-container\">\n                        <div className=\"subreddit-header\">\n                            <div className=\"subreddit-img-header-container\">\n                                <img\n                                    className=\"subreddit-img-header\"\n                                    alt=\"header-img\"\n                                    src={\n                                        community_icon.split('?width')[0] ||\n                                        icon_img ||\n                                        header_img ||\n                                        `https://styles.redditmedia.com/t5_vm1db/styles/communityIcon_5nthugyr0ef21.png?width=256&s=3a163f7135b93df0dab0921dba35f760baea5945`\n                                    }\n                                />\n                            </div>\n                            <div className=\"subreddit-text-container\">\n                                <div className=\"subreddit-list-title\">\n                                    {display_name}\n                                </div>\n                                <div className=\"subreddit-description\">\n                                    {public_description &&\n                                        this.getLength(public_description)}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Link>\n        )\n    }\n}\n\nexport default SubredditList\n","/Users/lucc/development/git/reddit-clone/src/components/modal/PostModal.jsx",["476","477"],"/Users/lucc/development/git/reddit-clone/src/components/search/SearchSubreddit.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/BestSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/HotSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/NewSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/RisingSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/TopSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/Users.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/SearchSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/queries/querySubreddits.js",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/Bubble.jsx",["478"],"import React from 'react'\n\nconst Bubble = () => {\n    return (\n        <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"1.5rem\"\n            height=\"1.5rem\"\n            viewBox=\"0 0 24 24\"\n        >\n            <title>chat</title>\n            <path\n                className=\"bubbleSVG\"\n                d=\"M20 1h-17c-1.654 0-3 1.346-3 3v12c0 1.654 2 2 3 2v6l9-6h8c1.654 0 3-1.346 3-3v-11c0-1.654-1.346-3-3-3zM21 15c0 0.551-0.449 1-1 1h-9l-6 5v-5h-2c-0.551 0-1-0.449-1-1v-11c0-0.551 0.449-1 1-1h17c0.551 0 1 0.449 1 1v11z\"\n            ></path>\n        </svg>\n    )\n}\n\nexport default Bubble\n\n// <svg\n//             version=\"1.1\"\n//             xmlns=\"http://www.w3.org/2000/svg\"\n//             width=\"1.5rem\"\n//             height=\"1.5rem\"\n//             viewBox=\"0 0 32 32\"\n//         >\n//             <title>bubble2</title>\n//             <path\n//                 className=\"bubbleSVG\"\n//                 d=\"M16 6c-1.717 0-3.375 0.271-4.928 0.804-1.46 0.502-2.76 1.211-3.863 2.108-2.069 1.681-3.209 3.843-3.209 6.088 0 1.259 0.35 2.481 1.039 3.63 0.711 1.185 1.781 2.268 3.093 3.133 0.949 0.625 1.587 1.623 1.755 2.747 0.056 0.375 0.091 0.753 0.105 1.129 0.233-0.194 0.461-0.401 0.684-0.624 0.755-0.755 1.774-1.172 2.828-1.172 0.168 0 0.336 0.011 0.505 0.032 0.655 0.083 1.325 0.126 1.99 0.126 1.717 0 3.375-0.271 4.928-0.804 1.46-0.502 2.76-1.211 3.863-2.108 2.069-1.681 3.209-3.843 3.209-6.088s-1.14-4.407-3.209-6.088c-1.104-0.897-2.404-1.606-3.863-2.108-1.553-0.534-3.211-0.804-4.928-0.804zM16 2v0c8.837 0 16 5.82 16 13s-7.163 13-16 13c-0.849 0-1.682-0.054-2.495-0.158-3.437 3.437-7.539 4.053-11.505 4.144v-0.841c2.142-1.049 4-2.961 4-5.145 0-0.305-0.024-0.604-0.068-0.897-3.619-2.383-5.932-6.024-5.932-10.103 0-7.18 7.163-13 16-13z\"\n//             ></path>\n//         </svg>\n\n{\n    /* <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"1.5rem\"\n            height=\"1.5rem\"\n            viewBox=\"0 0 24 24\"\n        >\n            <title>chat-3</title>\n            <path\n                className=\"bubbleSVG\"\n                d=\"M6.5 9c0.828 0 1.5 0.671 1.5 1.5s-0.672 1.5-1.5 1.5-1.5-0.671-1.5-1.5 0.672-1.5 1.5-1.5zM11.5 9c0.828 0 1.5 0.671 1.5 1.5s-0.672 1.5-1.5 1.5-1.5-0.671-1.5-1.5 0.672-1.5 1.5-1.5zM16.5 9c0.828 0 1.5 0.671 1.5 1.5s-0.672 1.5-1.5 1.5-1.5-0.671-1.5-1.5 0.672-1.5 1.5-1.5zM20 1h-17c-1.654 0-3 1.346-3 3v12c0 1.654 2 2 3 2v6l9-6h8c1.654 0 3-1.346 3-3v-11c0-1.654-1.346-3-3-3zM21 15c0 0.551-0.449 1-1 1h-9l-6 5v-5h-2c-0.551 0-1-0.449-1-1v-11c0-0.551 0.449-1 1-1h17c0.551 0 1 0.449 1 1v11z\"\n            ></path>\n        </svg> */\n}\n","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Heart.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/Author.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/DownArrow.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/UpArrow.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/PostSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/search/SubredditInfo.jsx",["479","480"],"import React from 'react'\n\nclass SubredditInfo extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            subInfo: null,\n        }\n    }\n\n    render() {\n        console.log(\n            'this.props.subreddit in SubredditInfo',\n            this.props.subreddit\n        )\n\n        // if (this.props.subreddit && this.props.subreddit !== undefined) {\n        return (\n            <div className=\"subreddit-subscribers-container\">\n                <div className=\"subreddit-img-container\">\n                    {this.props.subreddit.icon_img ? (\n                        <img\n                            className=\"subreddit-img\"\n                            src={this.props.subreddit.icon_img}\n                        />\n                    ) : (\n                        <img\n                            className=\"subreddit-img\"\n                            src={\n                                'https://styles.redditmedia.com/t5_vm1db/styles/communityIcon_5nthugyr0ef21.png?width=256&s=3a163f7135b93df0dab0921dba35f760baea5945'\n                            }\n                        />\n                    )}\n                </div>\n                <div className=\"subreddit-suggestion-info-container\">\n                    <div className=\"subreddit-suggestion-name-container\">\n                        {this.props.subreddit.display_name}\n                    </div>\n                    <div className=\"subreddit-suggestion-members-container\">\n                        {this.props.subreddit.subscribers} members\n                    </div>\n                </div>\n            </div>\n        )\n        // }\n\n        // return null\n    }\n}\n\nexport default SubredditInfo\n","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Close.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/comments/Comments.jsx",["481","482","483"],"import React from 'react'\nimport axios from 'axios'\n\nimport Loader from '../svg-components/Loader'\nimport { GlobalContext } from '../GlobalState'\nimport Comment from './Comment'\nimport { flattenCommentTree } from '../../utils/comments'\nimport getComments from '../../queries/comments'\nimport { deleteComment } from '../../queries/profileComments'\n\nexport const CommentContext = React.createContext()\n\nclass Comments extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            comments: 'loading...',\n            isLoading: true,\n            parentCommentsArr: [],\n            replyComment: false,\n            userPostsArr: [],\n            userParentComment: null,\n        }\n\n        this.commentDelete = this.commentDelete.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.data) {\n            getComments(this.props.subreddit, this.props.postCommentsId).then(\n                (response) => {\n                    const responseData = response.data[1].data.children\n                    const parentCommentIdsArr = []\n                    responseData.forEach((parentComment) => {\n                        parentCommentIdsArr.push(parentComment.data.id)\n                    })\n\n                    // console.clear()\n                    const data = responseData\n                    console.log('direct data', data)\n                    const commentMap = flattenCommentTree(responseData)\n                    console.log('DATA AND COMMENT MAP', data, commentMap)\n\n                    // let parentData = this.props?.userParentCommentData?.data\n                    //     ?.json?.data?.things[0]?.data\n                    // let parentId = parentData?.id\n                    // let newParentArr\n                    // let found = parentCommentIdsArr.find((comment) => {\n                    //     return comment === parentId\n                    // })\n                    // if (found) {\n                    //     this.setState({\n                    //         comments: commentMap,\n                    //         parentCommentsArr: parentCommentIdsArr,\n                    //         isLoading: false,\n                    //         // userParentComment: this.props.userParentCommentData,\n                    //     })\n                    // } else if (parentData) {\n                    //     newParentArr = [parentId, ...parentCommentIdsArr]\n                    //     this.setState({\n                    //         parentCommentsArr: newParentArr,\n                    //         isLoading: false,\n                    //         comments: {\n                    //             [parentId]: parentData,\n                    //             ...commentMap,\n                    //         },\n                    //     })\n                    // } else {\n                    //     this.setState({\n                    //         comments: commentMap,\n                    //         parentCommentsArr: parentCommentIdsArr,\n                    //         isLoading: false,\n                    //         // userParentComment: this.props.userParentCommentData,\n                    //     })\n                    // }\n\n                    // let userPostData = this.props?.userParentCommentData?.data\n                    //     ?.json?.data?.things[0]?.data\n\n                    // if (userPostData) {\n                    //     this.setState({\n                    //         comments: commentMap,\n                    //         parentCommentsArr: parentCommentIdsArr,\n                    //         isLoading: false,\n                    //         userPostsArr: [\n                    //             ...this.state.userPostsArr,\n                    //             userPostData,\n                    //         ],\n                    //     })\n                    // } else {\n                    this.setState({\n                        comments: commentMap,\n                        parentCommentsArr: parentCommentIdsArr,\n                        isLoading: false,\n                        // userParentComment: this.props.userParentCommentData,\n                    })\n                    // }\n                }\n            )\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (\n            prevProps.userParentCommentData !== this.props.userParentCommentData\n        ) {\n            this.checkUserParent()\n        }\n    }\n\n    checkUserParent = () => {\n        if (this.props.userParentCommentData) {\n            let parentData = this.props?.userParentCommentData?.data?.json?.data\n                ?.things[0]?.data\n            parentData.childIds = []\n\n            let parentId = parentData?.id\n\n            let newParentArr\n            const found = this.state.parentCommentsArr.find((comment) => {\n                return comment === parentId\n            })\n            if (found) {\n                return\n            } else if (parentData) {\n                newParentArr = [parentId, ...this.state.parentCommentsArr]\n                // newCommentObj = { ...this.state.comments }\n                this.setState({\n                    parentCommentsArr: newParentArr,\n                    userPostsArr: [...this.state.userPostsArr, parentData],\n                    comments: {\n                        [parentId]: parentData,\n                        ...this.state.comments,\n                    },\n                })\n            }\n        }\n    }\n\n    // this works except for if it's a parent comment\n    commentDelete = (name, id, parentId) => {\n        // const id = id\n        deleteComment(name)\n            .then((response) => {\n                console.log(\n                    'you hit the deleteComment response',\n                    response,\n                    this\n                )\n\n                let newObj\n\n                // create new array of child ids without the deleted id\n                if (!parentId) {\n                    delete this.state.comments[id]\n                    newObj = { ...this.state.comments }\n                    this.setState({\n                        comments: newObj,\n                    })\n                } else {\n                    const newChildIdsArr = this.state.comments[\n                        parentId\n                    ].childIds.filter((el) => {\n                        return el !== id\n                    })\n                    const newParentArr = this.state.parentCommentsArr.filter(\n                        (el) => {\n                            return el !== id\n                        }\n                    )\n                    // set new child id array to parent (getting rid of deleted id)\n                    this.state.comments[parentId].childIds = newChildIdsArr\n                    // delete the entire id object\n                    delete this.state.comments[id]\n                    newObj = { ...this.state.comments }\n                    // const newArr = this.state.comments.id.filter(\n                    //     (el) => {\n                    //         return el !== id\n                    //     }\n                    // )\n\n                    this.setState({\n                        comments: newObj,\n                        parentCommentsArr: newParentArr,\n                    })\n                }\n            })\n            .catch((err) => console.log(err))\n    }\n\n    getCommentReply(newCommentData, commentId) {\n        //search to see if the id is already logged in the commentMap\n        const id = newCommentData.id\n        // check to see if this id already exists from a previous comment made\n        if (!this.state.comments.id) {\n            // if it does not exist then add the id to the parent childIds array\n            this.state.comments[commentId].childIds = [\n                ...this.state.comments[commentId].childIds,\n                id,\n            ]\n        }\n        // add the new comment to the commentMap state OR if edit, replace old comment with new edited comment\n        this.setState({\n            comments: {\n                ...this.state.comments,\n                [newCommentData.id]: newCommentData,\n            },\n        })\n    }\n\n    getCommentEdit = (newCommentData, oldChildArr) => {\n        newCommentData.childIds = [...oldChildArr]\n        this.setState({\n            comments: {\n                ...this.state.comments,\n                [newCommentData.id]: newCommentData,\n            },\n        })\n    }\n\n    render() {\n        if (this.state.isLoading) {\n            return <Loader />\n        }\n\n        console.log('parentCommentsArr', this.state.parentCommentsArr)\n\n        console.log('==userPostsArr==', this.state.userPostsArr)\n        return (\n            <div>\n                {this.state.parentCommentsArr.map((parentId) => {\n                    return (\n                        <Comment\n                            commentDelete={this.commentDelete}\n                            commentData={this.state.comments}\n                            commentId={parentId}\n                            getCommentReply={this.getCommentReply}\n                            getCommentEdit={this.getCommentEdit}\n                        />\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default Comments\n\nComments.contextType = GlobalContext\n\n// Comment Id = ggn5iwg\n// Post Id = http://localhost:3000/?post_id=t3_khkikz\n","/Users/lucc/development/git/reddit-clone/src/components/Video/Video.jsx",["484","485","486","487","488","489"],"/Users/lucc/development/git/reddit-clone/src/utils/comments.js",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/Loader.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/comments/Comment.jsx",["490","491","492"],"import React from 'react'\nimport marked from 'marked'\nimport DOMPurify from 'dompurify'\nimport Axios from 'axios'\nimport qs from 'qs'\n\nimport CommentReply from './CommentReply'\nimport { GlobalContext } from '../GlobalState'\nimport moment from 'moment'\nimport getAuthorAvatar from '../../queries/profileComments'\nimport postVote from '../../queries/comment'\n\nimport DownArrow from '../svg-components/DownArrow'\nimport UpArrow from '../svg-components/UpArrow'\nimport Collapse from '../svg-components/Collapse'\nimport UnCollapse from '../svg-components/UnCollapse'\n\nimport './comment.scss'\n\n// const replyContext = React.useContext(GlobalContext)\n\nclass Comment extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isCollapsed: false,\n            voteVal: 0,\n            updatedScore: '',\n            authorImg: '',\n            err: '',\n        }\n    }\n\n    componentDidMount() {\n        getAuthorAvatar(this.props.commentData[this.props.commentId]?.author)\n            .then((response) => {\n                const dataImg = response.data.data.icon_img\n                const modifiedImg = dataImg.split('?width')[0]\n                this.setState({\n                    authorImg: modifiedImg,\n                })\n            })\n            .catch((err) => {\n                this.setState({\n                    authorImg: null,\n                    err: err,\n                })\n            })\n    }\n\n    handleArrowClick = (vote) => {\n        let voteValue\n\n        if (vote === 1 && this.state.voteVal === 1) {\n            voteValue = 0\n        } else if (vote === -1 && this.state.voteVal === -1) {\n            voteValue = 0\n        } else if (vote === 1) {\n            voteValue = 1\n        } else if (vote === -1) {\n            voteValue = -1\n        } else {\n            console.log('something went wrong', vote)\n        }\n\n        this.setState(\n            {\n                voteVal: voteValue,\n                updatedScore:\n                    this.props.commentData[this.props.commentId].score +\n                    voteValue,\n            },\n            () =>\n                postVote(\n                    voteValue,\n                    this.props.commentData[this.props.commentId].name\n                )\n        )\n    }\n\n    getTime = (unixValue) => {\n        const dateMoment = moment.unix(unixValue).fromNow()\n        return dateMoment\n    }\n\n    getMarkDown = (markDown) => {\n        if (markDown) {\n            const rawMarkup = marked(markDown)\n            const clean = DOMPurify.sanitize(rawMarkup)\n            return { __html: clean }\n        } else {\n            return {\n                __html: '<p className=\"deleted-comment\">Deleted Comment<p>',\n            }\n        }\n    }\n\n    // nestedcomments = () => []\n    getComments = () => {\n        return this.props.commentData[this.props.commentId]?.childIds?.map(\n            (commentId) => {\n                return (\n                    <Comment\n                        commentData={this.props.commentData}\n                        commentId={commentId}\n                        getCommentReply={this.props.getCommentReply}\n                        getCommentEdit={this.props.getCommentEdit}\n                        commentDelete={this.props.commentDelete}\n                        // parent_Id={props.commentData[commentId].parent_id}\n                    />\n                )\n            }\n        )\n    }\n\n    collapseComments = () => {\n        this.setState({\n            isCollapsed: !this.state.isCollapsed,\n        })\n    }\n\n    //in render display null if you shouldn't display it\n    render() {\n        // console.log('get comment edit', this.props.getCommentEdit)\n        // console.log('commentId', this.props.commentId)\n        // console.log('commentData', this.props.commentData)\n        // console.log('parent_id', this.props.parent_Id)\n        return (\n            <>\n                <div className=\"comments__container\">\n                    <div className=\"comments__main\">\n                        {this.props.commentData[this.props.commentId]?.body !==\n                            undefined && (\n                            <div className=\"comments__upvotes-container\">\n                                <div\n                                    className=\"comments__upvote-arrows\"\n                                    onClick={() => this.handleArrowClick(1)}\n                                >\n                                    <UpArrow isActive={this.state.voteVal} />\n                                </div>\n                                <div className=\"comments__comment-score\">\n                                    {this.state.updatedScore\n                                        ? this.state.updatedScore\n                                        : this.props.commentData[\n                                              this.props.commentId\n                                          ].score}\n                                </div>\n                                <div\n                                    className=\"comments_upvote-arrows\"\n                                    onClick={() => this.handleArrowClick(-1)}\n                                >\n                                    <DownArrow isActive={this.state.voteVal} />\n                                </div>\n                            </div>\n                        )}\n\n                        <div className=\"comments__main-content\">\n                            <div className=\"comments__title-container\">\n                                <div className=\"comments__author-info-container\">\n                                    <div className=\"comments__author-img-container\">\n                                        {this.state.authorImg && (\n                                            <img\n                                                className=\"comments__author-img\"\n                                                src={this.state.authorImg}\n                                            />\n                                        )}\n                                    </div>\n                                    <div className=\"comments__author\">\n                                        {\n                                            this.props.commentData[\n                                                this.props.commentId\n                                            ]?.author\n                                        }\n                                    </div>\n                                </div>\n                                {this.props.commentData[this.props.commentId]\n                                    ?.body !== undefined && (\n                                    <div className=\"comments__author-date\">\n                                        {this.getTime(\n                                            this.props.commentData[\n                                                this.props.commentId\n                                            ]?.created_utc\n                                        )}\n                                    </div>\n                                )}\n                            </div>\n                            <div className=\"comments__text-container\">\n                                <div\n                                    className=\"comments__comment\"\n                                    dangerouslySetInnerHTML={this.getMarkDown(\n                                        this.props.commentData[\n                                            this.props.commentId\n                                        ]?.body\n                                    )}\n                                ></div>\n                            </div>\n                            <div className=\"comments__reply-collapse-container\">\n                                <div className=\"comments__collapse-container\">\n                                    {this.props.commentData[\n                                        this.props.commentId\n                                    ]?.childIds?.length > 0 ? (\n                                        <div\n                                            className=\"collapse-container\"\n                                            onClick={this.collapseComments}\n                                        >\n                                            <Collapse\n                                                isCollapsed={\n                                                    this.state.isCollapsed\n                                                }\n                                            />\n\n                                            <UnCollapse\n                                                isCollapsed={\n                                                    this.state.isCollapsed\n                                                }\n                                            />\n                                        </div>\n                                    ) : null}\n                                </div>\n                                <div className=\"comments__reply-container\">\n                                    {this.props.commentData[\n                                        this.props.commentId\n                                    ]?.body !== undefined && (\n                                        <CommentReply\n                                            getCommentReply={\n                                                this.props.getCommentReply\n                                            }\n                                            commentDelete={\n                                                this.props.commentDelete\n                                            }\n                                            commentId={this.props.commentId}\n                                            // parent_Id={this.props.parent_Id}\n                                            commentData={this.props.commentData}\n                                            getCommentEdit={\n                                                this.props.getCommentEdit\n                                            }\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {!this.state.isCollapsed && this.getComments()}\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Comment\n\nComment.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/components/comments/CommentReply.jsx",["493"],"import React from 'react'\nimport CommentReplyInput from './CommentReplyInput'\nimport CommentEditInput from './CommentEditInput'\nimport { GlobalContext } from '../GlobalState'\n\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// import InputField from './InputField';\n\ntoast.configure()\nclass CommentReply extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            showTextBox: false,\n            showEditBox: false,\n            confirm: false,\n        }\n    }\n\n    handleCommentPost = () => {\n        this.setState({\n            showTextBox: !this.state.showTextBox,\n        })\n    }\n\n    handleEditPost = () => {\n        this.setState({\n            showEditBox: !this.state.showEditBox,\n        })\n    }\n\n    closeEditPost = () => {\n        this.setState({\n            showEditBox: false,\n        })\n    }\n\n    deleteBtn = () => {\n        this.setState({\n            confirm: !this.state.confirm,\n        })\n    }\n\n    deleteToast = () => {\n        toast.success('Your comment has been successfuly deleted!', {\n            position: toast.POSITION.TOP_CENTER,\n        })\n    }\n\n    deleted = () => {\n        let newParentId\n        const comment = this.props.commentData[this.props.commentId]\n        if (comment.parent_id.substring(0, 2) === 't3') {\n            newParentId = null\n        } else {\n            newParentId = comment.parent_id.substring(3)\n        }\n        this.props.commentDelete(\n            comment.name,\n            comment.id,\n            newParentId\n            // this.props.commentData[\n            //     this.props.commentId\n            // ].parent_id.substring(3)\n        )\n        this.deleteToast()\n        this.setState({\n            confirm: false,\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"commentReplyEdit-container\">\n                <div className=\"replyEdit-btn-container\">\n                    <div className=\"replyEdit-duo-btn\">\n                        {this.state.showEditBox ? null : (\n                            <div\n                                className=\"comment-reply\"\n                                onClick={this.handleCommentPost}\n                            >\n                                Reply\n                            </div>\n                        )}\n                        {this.props.commentData[this.props.commentId].author ===\n                            this.context.userData.name &&\n                            !this.state.showTextBox && (\n                                <button\n                                    className=\"comment-submit\"\n                                    onClick={this.handleEditPost}\n                                >\n                                    Edit\n                                </button>\n                            )}\n                    </div>\n                    {this.props.commentData[this.props.commentId].author ===\n                        this.context.userData.name &&\n                        !this.state.confirm && (\n                            <button\n                                className=\"delete-btn\"\n                                onClick={this.deleteBtn}\n                            >\n                                Delete\n                            </button>\n                        )}\n                    {/* {this.props.commentData[this.props.commentId].author ===\n                        this.context.userData.name &&\n                        this.state.confirm && (\n                            <div className=\"confirm-div\">\n                                <div className=\"confirm-text\">\n                                    <p>\n                                        Are you sure you want to delete this\n                                        comment?\n                                    </p>\n                                </div>\n                                <div className=\"confirm-btns\">\n                                    <button\n                                        className=\"yes-btn\"\n                                        // onClick={this.deleted}\n                                    >\n                                        Yes\n                                    </button>\n                                    <button\n                                        className=\"no-btn\"\n                                        // onClick={this.deleteBtn}\n                                    >\n                                        No\n                                    </button>\n                                </div>\n                            </div>\n                        )} */}\n                </div>\n                {this.props.commentData[this.props.commentId].author ===\n                    this.context.userData.name &&\n                    this.state.confirm && (\n                        <div className=\"confirm-div\">\n                            <div className=\"confirm-text\">\n                                <p>Are you sure?</p>\n                            </div>\n                            <div className=\"confirm-btns\">\n                                <button\n                                    className=\"yes-btn\"\n                                    onClick={this.deleted}\n                                >\n                                    Yes\n                                </button>\n                                <button\n                                    className=\"no-btn\"\n                                    onClick={this.deleteBtn}\n                                >\n                                    No\n                                </button>\n                            </div>\n                        </div>\n                    )}\n                {this.state.showEditBox ? null : (\n                    <CommentReplyInput\n                        getCommentReply={this.props.getCommentReply}\n                        showTextBox={this.state.showTextBox}\n                        commentId={this.props.commentId}\n                        parent_Id={this.props.parent_Id}\n                        commentData={this.props.commentData}\n                        handleCommentPost={this.handleCommentPost}\n                        showTextBox={this.state.showTextBox}\n                    />\n                )}\n                {this.state.showTextBox ? null : (\n                    <CommentEditInput\n                        getCommentReply={this.props.getCommentReply}\n                        commentData={this.props.commentData}\n                        commentId={this.props.commentId}\n                        accessToken={this.context.accessToken}\n                        user={this.context.userData.name}\n                        handleEditPost={this.handleEditPost}\n                        showEditBox={this.state.showEditBox}\n                        closeEditPost={this.closeEditPost}\n                        getCommentEdit={this.props.getCommentEdit}\n                        oldChildArr={\n                            this.props.commentData[this.props.commentId]\n                                .childIds\n                        }\n                        author={\n                            this.props.commentData[this.props.commentId].author\n                        }\n                    />\n                )}\n            </div>\n        )\n    }\n}\n\nexport default CommentReply\n\nCommentReply.contextType = GlobalContext\n\n// {\n//     !this.state.confirm ? (\n//         <div className=\"delete-div\">\n//             <button className=\"delete-btn\" onClick={this.deleteBtn}>\n//                 Delete Comment\n//             </button>\n//         </div>\n//     ) : (\n//         <div className=\"confirm-div\">\n//             <div className=\"confirm-text\">\n//                 <p>Are you sure you want to delete this comment?</p>\n//             </div>\n//             <div className=\"confirm-btns\">\n//                 <button className=\"yes-btn\" onClick={this.deleted}>\n//                     Yes\n//                 </button>\n//                 <button className=\"no-btn\" onClick={this.deleteBtn}>\n//                     No\n//                 </button>\n//             </div>\n//         </div>\n//     )\n// }\n","/Users/lucc/development/git/reddit-clone/src/components/svg-components/Collapse.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/UnCollapse.jsx",["494","495"],"import React from 'react'\n\nconst Uncollapse = (props) => {\n    if (props.isCollapsed) {\n        return (\n            <div className=\"uncollapseSVG\">\n                <svg\n                    version=\"1.1\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"20\"\n                    height=\"20\"\n                    viewBox=\"0 0 20 20\"\n                >\n                    <title>circle-with-plus</title>\n                    <path d=\"M10 1.6c-4.639 0-8.4 3.761-8.4 8.4s3.761 8.4 8.4 8.4 8.4-3.761 8.4-8.4c0-4.639-3.761-8.4-8.4-8.4zM15 11h-4v4h-2v-4h-4v-2h4v-4h2v4h4v2z\"></path>\n                </svg>\n            </div>\n        )\n    } else {\n        return <div></div>\n    }\n}\n\nexport default Uncollapse\n\n{\n    /* <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\n<title>chevron-with-circle-right</title>\n<path d=\"M11 10l-2.302-2.506c-0.196-0.198-0.196-0.519 0-0.718 0.196-0.197 0.515-0.197 0.71 0l2.807 2.864c0.196 0.199 0.196 0.52 0 0.717l-2.807 2.864c-0.195 0.199-0.514 0.198-0.71 0-0.196-0.197-0.196-0.518 0-0.717l2.302-2.504zM10 0.4c5.302 0 9.6 4.298 9.6 9.6 0 5.303-4.298 9.6-9.6 9.6s-9.6-4.297-9.6-9.6c0-5.302 4.298-9.6 9.6-9.6zM10 18.354c4.613 0 8.354-3.74 8.354-8.354s-3.741-8.354-8.354-8.354c-4.615 0-8.354 3.74-8.354 8.354s3.739 8.354 8.354 8.354z\"></path>\n</svg> */\n}\n\n{\n    /* <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\n<title>chevron-small-right</title>\n<path d=\"M11 10l-3.141-3.42c-0.268-0.27-0.268-0.707 0-0.978 0.268-0.27 0.701-0.27 0.969 0l3.83 3.908c0.268 0.271 0.268 0.709 0 0.979l-3.83 3.908c-0.267 0.272-0.701 0.27-0.969 0s-0.268-0.707 0-0.978l3.141-3.419z\"></path>\n</svg> */\n}\n","/Users/lucc/development/git/reddit-clone/src/components/comments/CommentReplyInput.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/comments/CommentEditInput.jsx",["496","497"],"import React from 'react'\nimport qs from 'qs'\nimport Axios from 'axios'\n\nimport editComment from '../../queries/commentEditInput'\n\nclass CommentEditInput extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: '',\n            editBox: false,\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            value: e.target.value,\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (this.state.value) {\n            console.log(\n                'submitting',\n                this.props,\n                this.state.value,\n                this.props.commentId\n            )\n            this.setState({ value: this.state.value }, () => {\n                editComment(\n                    this.props.commentData[this.props.commentId].name,\n                    this.state.value\n                )\n                    .then((response) => {\n                        if (response.data.json.errors[0] !== undefined) {\n                            response.data.json.errors[0].map((err) => {\n                                return alert(err)\n                            })\n                        } else {\n                            this.props.getCommentEdit(\n                                response.data.json.data.things[0].data,\n                                this.props.oldChildArr\n                            )\n                        }\n                    })\n                    .catch((err) => console.log(err))\n            })\n        } else {\n            alert('Please type something')\n        }\n        this.props.closeEditPost()\n    }\n    render() {\n        return (\n            <div className=\"edit-input-container\">\n                {this.props.showEditBox ? (\n                    <form className=\"comment-form\" onSubmit={this.handleSubmit}>\n                        <textarea\n                            placeholder={\n                                this.props.commentData[this.props.commentId]\n                                    .body\n                            }\n                            type=\"textarea\"\n                            wrap=\"physical\"\n                            value={this.state.textInput}\n                            onChange={this.handleChange}\n                        ></textarea>\n                        <div className=\"comment-buttons\">\n                            <button\n                                className=\"cancel-comment\"\n                                onClick={this.props.handleEditPost}\n                                type=\"button\"\n                            >\n                                Cancel\n                            </button>\n                            <button className=\"comment-submit\" type=\"submit\">\n                                Submit\n                            </button>\n                        </div>\n                    </form>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nexport default CommentEditInput\n","/Users/lucc/development/git/reddit-clone/src/queries/postPage.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/postModal.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/sideBar.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/createPostPage.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/profile.js",["498"],"import axiosInstance from './axios'\nimport qs from 'qs'\n\nexport default function getProfile(pageDir, name, after, before) {\n    let axios = axiosInstance()\n\n    let url = `https://oauth.reddit.com/user/${name}/comments?count=555&limit=10`\n    if (pageDir === 'next') {\n        url = `https://oauth.reddit.com/user/${name}/comments?after=${after}&count=555&limit=10`\n    } else if (pageDir === 'prev') {\n        url = `https://oauth.reddit.com/user/${name}/comments?before=${before}&count=555&&limit=10`\n    }\n    const data = {\n        t: 'all',\n        type: 'comments',\n        sort: 'new',\n        limit: '100',\n    }\n    return axios({\n        method: 'get',\n        url: url,\n        data: qs.stringify(data),\n    })\n        .then((response) => {\n            return response\n            console.log('user comments response', response)\n        })\n        .catch((err) => {\n            console.log(err)\n            console.log('what is the error', err.data)\n            alert('There was an error' + err)\n        })\n}\n","/Users/lucc/development/git/reddit-clone/src/queries/profileComments.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/subscribedSubreddits.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/comment.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/commentEditInput.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/commentReplyInput.js",[],"/Users/lucc/development/git/reddit-clone/src/queries/comments.js",["499"],"import axiosInstance from './axios'\nimport qs from 'qs'\n\nexport default function getComments(subreddit, postCommentsId) {\n    let axios = axiosInstance()\n\n    return axios({\n        method: 'GET',\n        url: `https://oauth.reddit.com/${subreddit}/comments/${postCommentsId}`,\n    })\n        .then((response) => {\n            console.log('response in comments', response)\n            return response\n        })\n        .catch((err) => {\n            console.log('comments error: ', err)\n            return err\n        })\n}\n","/Users/lucc/development/git/reddit-clone/src/components/comments/PostComment.jsx",[],"/Users/lucc/development/git/reddit-clone/src/queries/postComment.js",[],"/Users/lucc/development/git/reddit-clone/src/components/navigation/SearchForSubreddit.jsx",["500"],"import React from 'react'\nimport { debounce } from 'lodash'\n\nimport SubredditListing from './SubredditListing'\nimport SubredditSearch from '../search/SubredditSearch'\nimport SearchSVG from '../svg-components/SearchSVG'\n\nimport { getSubreddits } from '../../queries/querySubreddits'\n\nimport './searchForSubreddit.scss'\n\nexport default class SearchForSubreddit extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            value: '',\n            subInfoArr: [],\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState(\n            {\n                value: e.target.value,\n            },\n            debounce(this.searchSubreddits, 500)\n        )\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.searchSubreddits()\n    }\n\n    // searchSubreddits = debounce(() => {\n    //     getSubreddits(this.state.value)\n    //         .then((subredditInfoArray) => {\n    //             console.log('subredditInfoArray', subredditInfoArray)\n    //             this.setState({ subInfoArr: subredditInfoArray })\n    //         })\n    //         .catch((err) => console.log(err))\n    // }, 500)\n\n    searchSubreddits = () => {\n        getSubreddits(this.state.value)\n            .then((subredditInfoArray) => {\n                console.log('subredditInfoArray', subredditInfoArray)\n                this.setState({ subInfoArr: subredditInfoArray })\n            })\n            .catch((err) => console.log(err))\n    }\n\n    render() {\n        return (\n            <div className=\"subredditSearch__component-container\">\n                <h1 className=\"subredditSearch__title\">Search for Subreddit</h1>\n                <div className=\"subredditSearch__container\">\n                    <SearchSVG />\n                    <div className=\"subredditSearch__query-container\">\n                        <form\n                            type=\"submit\"\n                            value={this.state.value}\n                            className=\"subredditSearch__form\"\n                            onSubmit={this.handleSubmit}\n                        >\n                            <input\n                                className=\"subredditSearch__search-input\"\n                                type=\"text\"\n                                name=\"query\"\n                                onChange={this.handleChange}\n                                placeholder=\"Search for a subreddit\"\n                                value={this.state.value}\n                            />\n                        </form>\n                    </div>\n                </div>\n                <SubredditListing\n                    value={this.state.value}\n                    subInfoArr={this.state.subInfoArr}\n                />\n            </div>\n        )\n    }\n}\n\n// ;<Link id=\"search-for-subreddit\" to=\"/subreddits\">\n//     <div className=\"search-for-subreddit-container\">\n//         <SearchSVG />\n//         <span>Search for specific subreddit</span>\n//     </div>\n// </Link>\n","/Users/lucc/development/git/reddit-clone/src/components/navigation/SubredditListing.jsx",[],"/Users/lucc/development/git/reddit-clone/src/queries/subscribe.js",[],"/Users/lucc/development/git/reddit-clone/src/components/profile/User.jsx",["501"],"import React from 'react'\n\nimport getUser from '../../queries/user'\nimport moment from 'moment'\n\nimport './user.scss'\n\nclass User extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            userData: null,\n            isLoading: true,\n        }\n    }\n\n    componentDidMount() {\n        getUser().then((response) => {\n            console.log('getUser response', response)\n            this.setState({\n                userData: response.data,\n                isLoading: false,\n            })\n        })\n    }\n\n    getTime = (unixValue) => {\n        const dateMoment = moment.unix(unixValue).fromNow()\n        return dateMoment\n    }\n\n    render() {\n        console.log(this.state.userData)\n\n        if (this.state.isLoading) {\n            return null\n        }\n\n        const { name, icon_img, total_karma, created_utc } = this.state.userData\n\n        return (\n            <div className=\"profile__container\">\n                <div className=\"profile__header-container\">\n                    <div className=\"profile__img-container\">\n                        <img className=\"profile__img\" src={icon_img} />\n                    </div>\n                    <div className=\"profile__name-container\">\n                        <div className=\"profile__name\">{name}</div>\n                    </div>\n                </div>\n                <div className=\"profile__karma-container\">\n                    Total Karma:{' '}\n                    <span className=\"profile__karma-span\">{total_karma}</span>\n                </div>\n                <div className=\"profile__created-container\">\n                    Account created:&nbsp;\n                    <span className=\"profile__karma-span\">\n                        {this.getTime(created_utc)}\n                    </span>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default User\n","/Users/lucc/development/git/reddit-clone/src/queries/profilePosts.js",[],"/Users/lucc/development/git/reddit-clone/src/components/profile/ProfilePostsList.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/profile/ProfilePost.jsx",["502","503","504","505"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport marked from 'marked'\nimport DOMPurify from 'dompurify'\nimport moment from 'moment'\n\nimport HeartSVG from '../svg-components/Heart'\nimport BubbleSVG from '../svg-components/Bubble'\nimport UpArrowSVG from '../svg-components/UpArrow'\nimport DownArrowSVG from '../svg-components/DownArrow'\nimport AuthorSVG from '../svg-components/Author'\n\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\ntoast.configure()\nclass ProfilePost extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            authorImg: '',\n            confirm: false,\n        }\n    }\n\n    getMarkDown = (markDown) => {\n        if (markDown) {\n            const rawMarkup = marked(markDown)\n            const clean = DOMPurify.sanitize(rawMarkup)\n            return { __html: clean }\n        } else {\n            return {\n                __html: '<p className=\"deleted-comment\">Deleted Comment<p>',\n            }\n        }\n    }\n\n    getLengthTitle = (description) => {\n        const maxLength = 150\n        if (description.length > maxLength) {\n            return description.substring(0, maxLength) + '...'\n        } else {\n            return description\n        }\n    }\n\n    getLength = (description) => {\n        const maxLength = 250\n        if (description.length > maxLength) {\n            return description.substring(0, maxLength) + '...'\n        } else {\n            return description\n        }\n    }\n\n    getMarkDown = (markDown) => {\n        if (markDown) {\n            const rawMarkup = marked(markDown)\n            const clean = DOMPurify.sanitize(rawMarkup)\n            return { __html: clean }\n        } else {\n            return {\n                __html: '',\n            }\n        }\n    }\n\n    deleteToast = () => {\n        toast.success('Your post has been successfuly deleted!', {\n            position: toast.POSITION.TOP_CENTER,\n        })\n    }\n\n    deleteBtn = () => {\n        this.setState({\n            confirm: !this.state.confirm,\n        })\n    }\n\n    deleted = () => {\n        this.deleteToast()\n        this.props.confirmDelete(this.props.childData.data.name)\n        this.setState({\n            confirm: false,\n        })\n    }\n\n    getDate = (unixValue) => {\n        const date = moment.unix(unixValue).format('MMM Do YYYY')\n        return date\n    }\n\n    render() {\n        const {\n            title,\n            name,\n            author,\n            subreddit,\n            selftext,\n            num_comments,\n            created_utc,\n            score,\n        } = this.props.childData.data\n\n        return (\n            <div className=\"master-container\">\n                <div\n                    className=\"profile-post-container\"\n                    onClick={this.openModal}\n                >\n                    <div className=\"post-listing-subreddit\">{subreddit}</div>\n                    <div className=\"post-main-info\">\n                        <div className=\"post-score\">\n                            <div className=\"UpArrowSVG-container\">\n                                <UpArrowSVG isActive={this.state.voteVal} />\n                            </div>\n                            <div className=\"score-text\">{score}</div>\n                        </div>\n                        <div className=\"main-text-container\">\n                            {/* <div className=\"post-listing-subreddit\">\n                                {this.props.postData.data.subreddit}\n                            </div> */}\n                            <div className=\"post-title\">\n                                <Link\n                                    id=\"modal-open\"\n                                    className=\"postLinks\"\n                                    to={{\n                                        search: `?post_id=${name}`,\n                                    }}\n                                >\n                                    <div className=\"post-title-text\">\n                                        {this.getLengthTitle(title)}\n                                    </div>\n                                </Link>\n                                {this.props.childData.data?.thumbnail && (\n                                    <div className=\"subreddit-image-container\">\n                                        {/* <div className=\"post-subreddit\">\n                                        {this.props.postData.data.subreddit}\n                                    </div> */}\n                                        {this.props.childData.data.thumbnail !==\n                                            'self' &&\n                                        this.props.childData.data.thumbnail !==\n                                            'thumbnail' &&\n                                        this.props.childData.data.thumbnail !==\n                                            'image' &&\n                                        this.props.childData.data.thumbnail !==\n                                            'nsfw' &&\n                                        this.props.childData.data.thumbnail !==\n                                            'default' ? (\n                                            <a\n                                                href={\n                                                    this.props.childData.data\n                                                        .url\n                                                }\n                                            >\n                                                <div className=\"post-listing-thumbnail-container\">\n                                                    <img\n                                                        className=\"post-thumbnail\"\n                                                        src={\n                                                            this.props.childData\n                                                                .data.thumbnail\n                                                        }\n                                                        // src={this.state.data.thumbnail}\n                                                        alt={\n                                                            this.props.childData\n                                                                .data.thumbnail\n                                                        }\n                                                    />\n                                                </div>\n                                            </a>\n                                        ) : null}\n                                    </div>\n                                )}\n                            </div>\n\n                            <div className=\"post-description\">\n                                <div\n                                    className=\"post-description-text\"\n                                    dangerouslySetInnerHTML={this.getMarkDown(\n                                        this.getLength(selftext)\n                                    )}\n                                ></div>\n                            </div>\n                            <div className=\"hr-container\">\n                                <hr className=\"post-hr\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"post-sub-info\">\n                        <div className=\"post-author\">\n                            <div className=\"author-img-container\">\n                                {this.props.authorImg && (\n                                    <img\n                                        className=\"author-img\"\n                                        src={this.props.authorImg}\n                                    />\n                                )}\n                            </div>\n                            Posted by:\n                            <div className=\"author-text\">&nbsp; {author}</div>\n                        </div>\n                        <div className=\"post-date\">\n                            <div>{this.getDate(created_utc)}</div>\n                        </div>\n                        <div className=\"post-comment-number\">\n                            <BubbleSVG />\n                            &nbsp;\n                            <div>{num_comments}</div>\n                        </div>\n                    </div>\n                    {!this.state.confirm ? (\n                        <div className=\"delete-div\">\n                            <button\n                                className=\"delete-btn\"\n                                onClick={this.deleteBtn}\n                            >\n                                Delete Post\n                            </button>\n                        </div>\n                    ) : (\n                        <div className=\"confirm-div\">\n                            <div className=\"confirm-text\">\n                                <p>Are you sure?</p>\n                            </div>\n                            <div className=\"confirm-btns\">\n                                <button\n                                    className=\"yes-btn\"\n                                    onClick={this.deleted}\n                                >\n                                    Yes\n                                </button>\n                                <button\n                                    className=\"no-btn\"\n                                    onClick={this.deleteBtn}\n                                >\n                                    No\n                                </button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProfilePost\n","/Users/lucc/development/git/reddit-clone/src/queries/user.js",["506"],"import axiosInstance from './axios'\nimport qs from 'qs'\n\nexport default function getUser() {\n    const axios = axiosInstance()\n    // const data = {\n    //     sr: sr,\n    //     action: action,\n    // }\n    return axios({\n        method: 'get',\n        url: 'https://oauth.reddit.com/api/v1/me',\n        // data: qs.stringify(data),\n    })\n        .then((response) => {\n            return response\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n}\n","/Users/lucc/development/git/reddit-clone/src/components/svg-components/navbar-svgs/CommentsSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/navbar-svgs/SearchSubs.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/navbar-svgs/PostsSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/navbar-svgs/ProfileSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/navbar-svgs/HomeSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/posting/CreatePostPageWrapper.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/toasts/ToastProvider.jsx",["507"],"import React from 'react'\n\nimport { toast, ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nexport const ToastContext = React.createContext()\n\ntoast.configure()\nexport default class ToastProvider extends React.Component {\n    constructor() {\n        super()\n    }\n\n    postSuccess = () => {\n        toast('Basic Notif')\n    }\n\n    render() {\n        return (\n            <ToastContext.Provider\n                value={{\n                    notify: this.notify,\n                }}\n            >\n                <ToastContainer\n                    autoClose={2000}\n                    position=\"top-center\"\n                    className=\"toast-container\"\n                    toastClassName=\"dark-toast\"\n                />\n                {this.props.children}\n            </ToastContext.Provider>\n        )\n    }\n}\n","/Users/lucc/development/git/reddit-clone/src/components/navigation/HamburgerNav.jsx",["508","509","510"],"import React from 'react'\n\nimport './hamburgerNav.scss'\n\nimport { Link, NavLink, withRouter } from 'react-router-dom'\nimport { GlobalContext } from '../GlobalState'\nimport Login from '../Login'\n\nimport CommentsSVG from '../svg-components/navbar-svgs/CommentsSVG'\nimport SearchSubs from '../svg-components/navbar-svgs/SearchSubs'\nimport PostsSVG from '../svg-components/navbar-svgs/PostsSVG'\nimport ProfileSVG from '../svg-components/navbar-svgs/ProfileSVG'\nimport HomeSVG from '../svg-components/navbar-svgs/HomeSVG'\n\nconst CLIENT_ID = 'MMej7E1hI1x82A'\nconst REDIRECT_URI = 'http://localhost:3000/authorize'\nconst DURATION = 'permanent'\nconst SCOPE =\n    'identity edit flair history modconfig modflair modlog modposts modwiki mysubreddits privatemessages read report save submit subscribe vote wikiedit wikiread'\n\nconst getAuthorizationURL = () =>\n    `https://www.reddit.com /api/v1/authorize?client_id=${CLIENT_ID}&response_type=code&state=${Math.random()}&redirect_uri=${REDIRECT_URI}&duration=${DURATION}&scope=${SCOPE}`\n\nconst menuLinks = [\n    { name: 'Home', route: '', component: <HomeSVG /> },\n    { name: 'Find Subreddit', route: 'subreddits', component: <SearchSubs /> },\n    { name: 'My Posts', route: 'posts', component: <PostsSVG /> },\n    { name: 'My Comments', route: 'comments', component: <CommentsSVG /> },\n    { name: 'Profile', route: 'user', component: <ProfileSVG /> },\n]\n\nclass HamburgerNav extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeRoute: this.props.location.pathname.substring(1),\n        }\n        this.wrapperRef = React.createRef()\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside)\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside)\n    }\n\n    handleClickOutside = (e) => {\n        console.log('wrapperRef', this.wrapperRef)\n        if (\n            this.wrapperRef.current &&\n            !this.wrapperRef.current.contains(e.target)\n        ) {\n            this.props.clickedOutside()\n        }\n    }\n\n    handleClick = (val) => {\n        this.setState({\n            activeRoute: val,\n        })\n    }\n\n    render() {\n        const { pathname } = this.props.location\n\n        return (\n            <ul className=\"nav__list-container\" ref={this.wrapperRef}>\n                {/* <div className=\"menu\">Menu</div> */}\n\n                {menuLinks.map((link) => (\n                    <NavLink\n                        onClick={() => this.handleClick(link.route)}\n                        to={`/${link.route}`}\n                    >\n                        {pathname.substring(1) === link.route ? (\n                            <li className=\"nav__list-item-active\">\n                                <div className=\"link-text\">{link.name}</div>\n                                {link.component}\n                            </li>\n                        ) : (\n                            <li className=\"nav__list-item\">\n                                <div className=\"link-text\">{link.name}</div>\n                                {link.component}\n                            </li>\n                        )}\n                    </NavLink>\n                ))}\n                <div className=\"nav__logout-container\">\n                    <button\n                        className=\"nav__logout-btn\"\n                        onClick={this.context.invalidate}\n                    >\n                        Log out\n                    </button>\n                </div>\n            </ul>\n\n            // <React.Fragment>\n            //     <div className=\"navbar\">\n            //         <ul className=\"navbar-links\">\n            //             <div className=\"menu\">Menu</div>\n            //             {menuLinks.map((link) => (\n            //                 <NavLink\n            //                     onClick={() => this.handleClick(link.route)}\n            //                     to={`/${link.route}`}\n            //                 >\n            //                     {pathname.substring(1) === link.route ? (\n            //                         <li className=\"list-item-active\">\n            //                             <div className=\"link-text\">\n            //                                 {link.name}\n            //                             </div>\n            //                             {link.component}\n            //                         </li>\n            //                     ) : (\n            //                         <li className=\"list-item\">\n            //                             <div className=\"link-text\">\n            //                                 {link.name}\n            //                             </div>\n            //                             {link.component}\n            //                         </li>\n            //                     )}\n            //                 </NavLink>\n            //             ))}\n\n            //             {this.context.accessToken ? null : (\n            //                 <li className=\"list-item\">\n            //                     <Login />\n            //                 </li>\n            //             )}\n            //             <div className=\"userInfo\">\n            //                 {this.context.accessToken ? (\n            //                     <div>\n            //                         <button\n            //                             className=\"logout-btn-nav\"\n            //                             onClick={this.context.invalidate}\n            //                         >\n            //                             Log out\n            //                         </button>\n            //                     </div>\n            //                 ) : null}\n            //             </div>\n            //         </ul>\n            //     </div>\n            // </React.Fragment>\n        )\n    }\n}\n\nexport default withRouter(HamburgerNav)\n\nHamburgerNav.contextType = GlobalContext\n","/Users/lucc/development/git/reddit-clone/src/components/svg-components/HamburgerSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/pageNav-svgs/prevSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/pageNav-svgs/nextSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/pageNav-svgs/NextSVG.jsx",[],"/Users/lucc/development/git/reddit-clone/src/components/svg-components/pageNav-svgs/PrevSVG.jsx",[],{"ruleId":"511","severity":1,"message":"512","line":7,"column":17,"nodeType":"513","messageId":"514","endLine":7,"endColumn":23},{"ruleId":"515","replacedBy":"516"},{"ruleId":"517","replacedBy":"518"},{"ruleId":"511","severity":1,"message":"519","line":14,"column":8,"nodeType":"513","messageId":"514","endLine":14,"endColumn":17},{"ruleId":"511","severity":1,"message":"520","line":24,"column":8,"nodeType":"513","messageId":"514","endLine":24,"endColumn":29},{"ruleId":"511","severity":1,"message":"521","line":30,"column":8,"nodeType":"513","messageId":"514","endLine":30,"endColumn":12},{"ruleId":"511","severity":1,"message":"522","line":33,"column":8,"nodeType":"513","messageId":"514","endLine":33,"endColumn":20},{"ruleId":"511","severity":1,"message":"523","line":2,"column":8,"nodeType":"513","messageId":"514","endLine":2,"endColumn":13},{"ruleId":"511","severity":1,"message":"523","line":2,"column":8,"nodeType":"513","messageId":"514","endLine":2,"endColumn":13},{"ruleId":"524","severity":1,"message":"525","line":15,"column":13,"nodeType":"526","endLine":18,"endColumn":15},{"ruleId":"511","severity":1,"message":"523","line":3,"column":8,"nodeType":"513","messageId":"514","endLine":3,"endColumn":13},{"ruleId":"511","severity":1,"message":"527","line":4,"column":8,"nodeType":"513","messageId":"514","endLine":4,"endColumn":16},{"ruleId":"511","severity":1,"message":"528","line":5,"column":22,"nodeType":"513","messageId":"514","endLine":5,"endColumn":26},{"ruleId":"511","severity":1,"message":"529","line":10,"column":8,"nodeType":"513","messageId":"514","endLine":10,"endColumn":13},{"ruleId":"511","severity":1,"message":"530","line":11,"column":8,"nodeType":"513","messageId":"514","endLine":11,"endColumn":13},{"ruleId":"511","severity":1,"message":"531","line":15,"column":10,"nodeType":"513","messageId":"514","endLine":15,"endColumn":21},{"ruleId":"511","severity":1,"message":"532","line":25,"column":10,"nodeType":"513","messageId":"514","endLine":25,"endColumn":23},{"ruleId":"511","severity":1,"message":"533","line":26,"column":10,"nodeType":"513","messageId":"514","endLine":26,"endColumn":17},{"ruleId":"511","severity":1,"message":"534","line":42,"column":7,"nodeType":"513","messageId":"514","endLine":42,"endColumn":26},{"ruleId":"511","severity":1,"message":"535","line":8,"column":8,"nodeType":"513","messageId":"514","endLine":8,"endColumn":26},{"ruleId":"511","severity":1,"message":"536","line":9,"column":8,"nodeType":"513","messageId":"514","endLine":9,"endColumn":17},{"ruleId":"511","severity":1,"message":"528","line":2,"column":10,"nodeType":"513","messageId":"514","endLine":2,"endColumn":14},{"ruleId":"511","severity":1,"message":"534","line":19,"column":7,"nodeType":"513","messageId":"514","endLine":19,"endColumn":26},{"ruleId":"511","severity":1,"message":"529","line":7,"column":8,"nodeType":"513","messageId":"514","endLine":7,"endColumn":13},{"ruleId":"511","severity":1,"message":"522","line":8,"column":8,"nodeType":"513","messageId":"514","endLine":8,"endColumn":20},{"ruleId":"511","severity":1,"message":"529","line":3,"column":8,"nodeType":"513","messageId":"514","endLine":3,"endColumn":13},{"ruleId":"511","severity":1,"message":"523","line":3,"column":8,"nodeType":"513","messageId":"514","endLine":3,"endColumn":13},{"ruleId":"511","severity":1,"message":"537","line":14,"column":15,"nodeType":"513","messageId":"514","endLine":14,"endColumn":26},{"ruleId":"511","severity":1,"message":"538","line":20,"column":27,"nodeType":"513","messageId":"514","endLine":20,"endColumn":34},{"ruleId":"511","severity":1,"message":"539","line":20,"column":36,"nodeType":"513","messageId":"514","endLine":20,"endColumn":41},{"ruleId":"511","severity":1,"message":"523","line":2,"column":8,"nodeType":"513","messageId":"514","endLine":2,"endColumn":13},{"ruleId":"511","severity":1,"message":"540","line":27,"column":5,"nodeType":"513","messageId":"514","endLine":27,"endColumn":20},{"ruleId":"511","severity":1,"message":"541","line":30,"column":5,"nodeType":"513","messageId":"514","endLine":30,"endColumn":21},{"ruleId":"511","severity":1,"message":"542","line":245,"column":13,"nodeType":"513","messageId":"514","endLine":245,"endColumn":18},{"ruleId":"511","severity":1,"message":"543","line":247,"column":13,"nodeType":"513","messageId":"514","endLine":247,"endColumn":36},{"ruleId":"511","severity":1,"message":"544","line":249,"column":13,"nodeType":"513","messageId":"514","endLine":249,"endColumn":23},{"ruleId":"511","severity":1,"message":"545","line":254,"column":13,"nodeType":"513","messageId":"514","endLine":254,"endColumn":31},{"ruleId":"524","severity":1,"message":"525","line":261,"column":21,"nodeType":"526","endLine":268,"endColumn":23},{"ruleId":"524","severity":1,"message":"525","line":272,"column":25,"nodeType":"526","endLine":280,"endColumn":27},{"ruleId":"511","severity":1,"message":"546","line":2,"column":16,"nodeType":"513","messageId":"514","endLine":2,"endColumn":24},{"ruleId":"511","severity":1,"message":"529","line":6,"column":8,"nodeType":"513","messageId":"514","endLine":6,"endColumn":13},{"ruleId":"511","severity":1,"message":"547","line":7,"column":8,"nodeType":"513","messageId":"514","endLine":7,"endColumn":17},{"ruleId":"511","severity":1,"message":"548","line":11,"column":8,"nodeType":"513","messageId":"514","endLine":11,"endColumn":13},{"ruleId":"511","severity":1,"message":"549","line":12,"column":8,"nodeType":"513","messageId":"514","endLine":12,"endColumn":10},{"ruleId":"511","severity":1,"message":"550","line":17,"column":8,"nodeType":"513","messageId":"514","endLine":17,"endColumn":16},{"ruleId":"511","severity":1,"message":"551","line":21,"column":8,"nodeType":"513","messageId":"514","endLine":21,"endColumn":17},{"ruleId":"524","severity":1,"message":"525","line":251,"column":37,"nodeType":"526","endLine":254,"endColumn":39},{"ruleId":"552","severity":1,"message":"553","line":5,"column":5,"nodeType":"554","messageId":"555","endLine":7,"endColumn":6},{"ruleId":"524","severity":1,"message":"525","line":19,"column":29,"nodeType":"526","endLine":19,"endColumn":77},{"ruleId":"524","severity":1,"message":"525","line":21,"column":29,"nodeType":"526","endLine":26,"endColumn":31},{"ruleId":"511","severity":1,"message":"550","line":8,"column":8,"nodeType":"513","messageId":"514","endLine":8,"endColumn":16},{"ruleId":"511","severity":1,"message":"556","line":11,"column":8,"nodeType":"513","messageId":"514","endLine":11,"endColumn":20},{"ruleId":"511","severity":1,"message":"551","line":12,"column":8,"nodeType":"513","messageId":"514","endLine":12,"endColumn":17},{"ruleId":"524","severity":1,"message":"525","line":234,"column":37,"nodeType":"526","endLine":237,"endColumn":39},{"ruleId":"557","severity":1,"message":"558","line":292,"column":1,"nodeType":"559","messageId":"560","endLine":312,"endColumn":2},{"ruleId":"552","severity":1,"message":"553","line":5,"column":5,"nodeType":"554","messageId":"555","endLine":7,"endColumn":6},{"ruleId":"511","severity":1,"message":"561","line":27,"column":13,"nodeType":"513","messageId":"514","endLine":27,"endColumn":25},{"ruleId":"511","severity":1,"message":"543","line":28,"column":13,"nodeType":"513","messageId":"514","endLine":28,"endColumn":36},{"ruleId":"511","severity":1,"message":"562","line":29,"column":13,"nodeType":"513","messageId":"514","endLine":29,"endColumn":36},{"ruleId":"511","severity":1,"message":"563","line":15,"column":10,"nodeType":"513","messageId":"514","endLine":15,"endColumn":28},{"ruleId":"524","severity":1,"message":"525","line":139,"column":33,"nodeType":"526","endLine":148,"endColumn":35},{"ruleId":"557","severity":1,"message":"558","line":37,"column":1,"nodeType":"559","messageId":"560","endLine":51,"endColumn":2},{"ruleId":"524","severity":1,"message":"525","line":22,"column":25,"nodeType":"526","endLine":25,"endColumn":27},{"ruleId":"524","severity":1,"message":"525","line":27,"column":25,"nodeType":"526","endLine":32,"endColumn":27},{"ruleId":"511","severity":1,"message":"523","line":2,"column":8,"nodeType":"513","messageId":"514","endLine":2,"endColumn":13},{"ruleId":"564","severity":1,"message":"565","line":172,"column":21,"nodeType":"566","endLine":172,"endColumn":50},{"ruleId":"564","severity":1,"message":"565","line":197,"column":13,"nodeType":"566","endLine":197,"endColumn":43},{"ruleId":"511","severity":1,"message":"567","line":7,"column":10,"nodeType":"513","messageId":"514","endLine":7,"endColumn":16},{"ruleId":"568","severity":1,"message":"569","line":47,"column":25,"nodeType":"526","endLine":57,"endColumn":26},{"ruleId":"557","severity":1,"message":"558","line":104,"column":1,"nodeType":"559","messageId":"560","endLine":106,"endColumn":2},{"ruleId":"557","severity":1,"message":"558","line":108,"column":1,"nodeType":"559","messageId":"560","endLine":120,"endColumn":2},{"ruleId":"557","severity":1,"message":"558","line":121,"column":1,"nodeType":"559","messageId":"560","endLine":143,"endColumn":2},{"ruleId":"557","severity":1,"message":"558","line":144,"column":1,"nodeType":"559","messageId":"560","endLine":146,"endColumn":2},{"ruleId":"511","severity":1,"message":"548","line":4,"column":8,"nodeType":"513","messageId":"514","endLine":4,"endColumn":13},{"ruleId":"511","severity":1,"message":"549","line":5,"column":8,"nodeType":"513","messageId":"514","endLine":5,"endColumn":10},{"ruleId":"524","severity":1,"message":"525","line":162,"column":45,"nodeType":"526","endLine":165,"endColumn":47},{"ruleId":"570","severity":1,"message":"571","line":166,"column":25,"nodeType":"572","endLine":166,"endColumn":61},{"ruleId":"557","severity":1,"message":"558","line":26,"column":1,"nodeType":"559","messageId":"560","endLine":31,"endColumn":2},{"ruleId":"557","severity":1,"message":"558","line":33,"column":1,"nodeType":"559","messageId":"560","endLine":38,"endColumn":2},{"ruleId":"511","severity":1,"message":"549","line":2,"column":8,"nodeType":"513","messageId":"514","endLine":2,"endColumn":10},{"ruleId":"511","severity":1,"message":"548","line":3,"column":8,"nodeType":"513","messageId":"514","endLine":3,"endColumn":13},{"ruleId":"573","severity":1,"message":"574","line":26,"column":13,"nodeType":"575","messageId":"576","endLine":26,"endColumn":60},{"ruleId":"511","severity":1,"message":"549","line":2,"column":8,"nodeType":"513","messageId":"514","endLine":2,"endColumn":10},{"ruleId":"511","severity":1,"message":"577","line":5,"column":8,"nodeType":"513","messageId":"514","endLine":5,"endColumn":23},{"ruleId":"524","severity":1,"message":"525","line":45,"column":25,"nodeType":"526","endLine":45,"endColumn":72},{"ruleId":"511","severity":1,"message":"550","line":8,"column":8,"nodeType":"513","messageId":"514","endLine":8,"endColumn":16},{"ruleId":"511","severity":1,"message":"556","line":11,"column":8,"nodeType":"513","messageId":"514","endLine":11,"endColumn":20},{"ruleId":"511","severity":1,"message":"551","line":12,"column":8,"nodeType":"513","messageId":"514","endLine":12,"endColumn":17},{"ruleId":"524","severity":1,"message":"525","line":194,"column":37,"nodeType":"526","endLine":197,"endColumn":39},{"ruleId":"511","severity":1,"message":"549","line":2,"column":8,"nodeType":"513","messageId":"514","endLine":2,"endColumn":10},{"ruleId":"552","severity":1,"message":"553","line":10,"column":5,"nodeType":"554","messageId":"555","endLine":12,"endColumn":6},{"ruleId":"511","severity":1,"message":"528","line":5,"column":10,"nodeType":"513","messageId":"514","endLine":5,"endColumn":14},{"ruleId":"511","severity":1,"message":"529","line":7,"column":8,"nodeType":"513","messageId":"514","endLine":7,"endColumn":13},{"ruleId":"511","severity":1,"message":"534","line":21,"column":7,"nodeType":"513","messageId":"514","endLine":21,"endColumn":26},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","no-native-reassign",["578"],"no-negated-in-lhs",["579"],"'Authorize' is defined but never used.","'CreatePostPageWrapper' is defined but never used.","'test' is defined but never used.","'MasterSearch' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getAxios' is defined but never used.","'Link' is defined but never used.","'Login' is defined but never used.","'Modal' is defined but never used.","'handlePages' is defined but never used.","'GlobalContext' is defined but never used.","'getFeed' is defined but never used.","'getAuthorizationURL' is assigned a value but never used.","'SearchForSubreddit' is defined but never used.","'SearchSVG' is defined but never used.","'postIdParam' is assigned a value but never used.","'history' is assigned a value but never used.","'match' is assigned a value but never used.","'searchSubreddit' is defined but never used.","'currentSubreddit' is defined but never used.","'title' is assigned a value but never used.","'banner_background_color' is assigned a value but never used.","'header_img' is assigned a value but never used.","'user_is_subscriber' is assigned a value but never used.","'Redirect' is defined but never used.","'ErrorPage' is defined but never used.","'Axios' is defined but never used.","'qs' is defined but never used.","'HeartSVG' is defined but never used.","'AuthorSVG' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'DownArrowSVG' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'header_title' is assigned a value but never used.","'banner_background_image' is assigned a value but never used.","'renderIntoDocument' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Player' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'SubredditSearch' is defined but never used.","no-global-assign","no-unsafe-negation"]